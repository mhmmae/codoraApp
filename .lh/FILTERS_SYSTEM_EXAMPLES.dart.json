{
    "sourceFile": "FILTERS_SYSTEM_EXAMPLES.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753068346577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753068346577,
            "name": "Commit-0",
            "content": "// // مثال لاختبار نظام عرض الفلاتر الجديد\n//\n// import 'package:flutter/material.dart';\n// import 'package:get/get.dart';\n//\n// // مثال لإنشاء بيانات تجريبية للاختبار\n// class FiltersTestData {\n//   static const Map<String, dynamic> sampleCategory = {\n//     'nameAr': 'هواتف ذكية',\n//     'nameEn': 'Smartphones',\n//     'nameKu': 'مۆبایل',\n//     'imageUrl': 'https://example.com/smartphones.jpg',\n//     'iconName': 'phone_android',\n//     'color': '#2196F3',\n//     'order': 1,\n//     'isActive': true,\n//     'parentId': 'electronics_main',\n//     'createdAt': Timestamp.now(),\n//     'updatedAt': Timestamp.now(),\n//     'createdBy': 'system',\n//     'isForOriginalProducts': true,\n//     'isForCommercialProducts': true,\n//   };\n//\n//   static const Map<String, dynamic> sampleCompany = {\n//     'nameAr': 'آبل',\n//     'nameEn': 'Apple',\n//     'logoUrl': 'https://example.com/apple-logo.jpg',\n//     'description': 'شركة آبل الأمريكية',\n//     'country': 'الولايات المتحدة',\n//     'isActive': true,\n//     'createdBy': 'admin',\n//     'createdAt': Timestamp.now(),\n//     'updatedAt': Timestamp.now(),\n//   };\n//\n//   static const Map<String, dynamic> sampleProduct = {\n//     'nameAr': 'آيفون 15 برو',\n//     'nameEn': 'iPhone 15 Pro',\n//     'imageUrl': 'https://example.com/iphone15pro.jpg',\n//     'description': 'أحدث هاتف من آبل',\n//     'companyId': 'apple_company_id',\n//     'isActive': true,\n//     'createdBy': 'admin',\n//     'createdAt': Timestamp.now(),\n//     'updatedAt': Timestamp.now(),\n//   };\n// }\n//\n// // مثال لاستخدام النظام الجديد في الكود\n// class ExampleUsage {\n//   // 1. تفعيل عرض الفلاتر في الصفحة الرئيسية\n//   static void showFiltersInHomePage() {\n//     // يتم من خلال الضغط على الإيقونة الجديدة في أعلى الصفحة\n//     // أو يمكن التفعيل برمجياً:\n//\n//     final homeController = Get.find<HomeScreenController>(); // إذا كان متاحاً\n//     // homeController.showFiltersGrid.value = true;\n//   }\n//\n//   // 2. الانتقال مباشرة لصفحة الفلاتر\n//   static void openFiltersScreen() {\n//     Get.to(\n//       () => const FiltersDisplayScreen(),\n//       transition: Transition.rightToLeft,\n//       duration: const Duration(milliseconds: 300),\n//     );\n//   }\n//\n//   // 3. فتح منتجات فلتر معين\n//   static void openSpecificFilter(String filterKey, String title) {\n//     Get.to(\n//       () => FilteredProductsScreen(\n//         filterKey: filterKey,\n//         filterTitle: title,\n//         filterSubtitle: 'فئة محددة',\n//         filterType: FilterType.subCategory,\n//       ),\n//     );\n//   }\n//\n//   // 4. إعادة تحميل الفلاتر\n//   static void refreshFilters() {\n//     final controller = Get.find<FiltersDisplayController>();\n//     controller.refreshFilters();\n//   }\n// }\n//\n// // أمثلة على مفاتيح الفلاتر المدعومة\n// class FilterKeys {\n//   // فلاتر الأقسام الفرعية\n//   static const String smartphones = 'sub_smartphones_id';\n//   static const String laptops = 'sub_laptops_id';\n//   static const String tablets = 'sub_tablets_id';\n//\n//   // فلاتر الشركات\n//   static const String appleCompany = 'original_company_apple_id';\n//   static const String samsungCompany = 'original_company_samsung_id';\n//   static const String huaweiCompany = 'original_company_huawei_id';\n//\n//   // فلاتر المنتجات الأصلية\n//   static const String iphone15Pro = 'original_product_iphone15pro_id';\n//   static const String galaxyS24 = 'original_product_galaxys24_id';\n//   static const String macbookPro = 'original_product_macbookpro_id';\n//\n//   // فلاتر خاصة\n//   static const String allOriginalBrands = 'original_brands';\n//   static const String allItems = 'all_items';\n// }\n//\n// // مثال لبيانات فلتر كاملة\n// class SampleFilterData {\n//   static final List<FilterItemModel> sampleFilters = [\n//     FilterItemModel(\n//       id: 'smartphones_cat',\n//       title: 'هواتف ذكية',\n//       subtitle: 'قسم فرعي',\n//       imageUrl: 'https://example.com/smartphones.jpg',\n//       type: FilterType.subCategory,\n//       filterKey: 'sub_smartphones_cat',\n//       parentId: 'electronics_main',\n//     ),\n//     FilterItemModel(\n//       id: 'apple_company',\n//       title: 'آبل',\n//       subtitle: 'شركة مصنعة',\n//       imageUrl: 'https://example.com/apple-logo.jpg',\n//       type: FilterType.company,\n//       filterKey: 'original_company_apple_company',\n//     ),\n//     FilterItemModel(\n//       id: 'iphone15pro_product',\n//       title: 'آيفون 15 برو',\n//       subtitle: 'منتج آبل',\n//       imageUrl: 'https://example.com/iphone15pro.jpg',\n//       type: FilterType.product,\n//       filterKey: 'original_product_iphone15pro_product',\n//       parentId: 'apple_company',\n//       parentName: 'آبل',\n//       productCount: 15, // عدد المنتجات المتاحة\n//     ),\n//   ];\n// }\n//\n// // مثال للاستماع لتغييرات الفلاتر\n// class FilterChangeListener extends GetxController {\n//   final FiltersDisplayController filtersController = Get.find();\n//\n//   @override\n//   void onInit() {\n//     super.onInit();\n//\n//     // الاستماع لتغييرات حالة الرؤية\n//     filtersController.isVisible.listen((isVisible) {\n//       debugPrint('🔄 حالة عرض الفلاتر تغيرت: $isVisible');\n//       if (isVisible && filtersController.allFilters.isEmpty) {\n//         debugPrint('📊 بدء تحميل الفلاتر...');\n//       }\n//     });\n//\n//     // الاستماع لتغييرات قائمة الفلاتر\n//     filtersController.allFilters.listen((filters) {\n//       debugPrint('📋 تم تحديث قائمة الفلاتر: ${filters.length} فلتر');\n//       for (var filter in filters) {\n//         debugPrint('   - ${filter.title} (${filter.type.displayName})');\n//       }\n//     });\n//   }\n// }\n//\n// // مثال لدمج النظام الجديد مع النظام الحالي\n// class IntegrationExample {\n//   static void handleFilterSelection(FilterItemModel filter) {\n//     debugPrint('🎯 تم اختيار الفلتر: ${filter.title}');\n//     debugPrint('   - النوع: ${filter.type.displayName}');\n//     debugPrint('   - المفتاح: ${filter.filterKey}');\n//\n//     // إخفاء الفلاتر الأخرى إذا كانت مفعلة\n//     try {\n//       final categoryController = Get.find<EnhancedCategoryFilterController>();\n//       if (filter.type != FilterType.subCategory) {\n//         categoryController.resetFilters();\n//       }\n//     } catch (e) {\n//       debugPrint('متحكم الأقسام غير متاح');\n//     }\n//\n//     try {\n//       final brandController = Get.find<BrandFilterController>();\n//       if (filter.type == FilterType.subCategory) {\n//         brandController.deactivateBrandMode();\n//       }\n//     } catch (e) {\n//       debugPrint('متحكم البراند غير متاح');\n//     }\n//\n//     // تطبيق الفلتر المحدد\n//     switch (filter.type) {\n//       case FilterType.subCategory:\n//         _applySubCategoryFilter(filter);\n//         break;\n//       case FilterType.company:\n//         _applyCompanyFilter(filter);\n//         break;\n//       case FilterType.product:\n//         _applyProductFilter(filter);\n//         break;\n//     }\n//   }\n//\n//   static void _applySubCategoryFilter(FilterItemModel filter) {\n//     try {\n//       final categoryController = Get.find<EnhancedCategoryFilterController>();\n//       categoryController.selectSubCategory(filter.id, filter.title);\n//     } catch (e) {\n//       debugPrint('خطأ في تطبيق فلتر القسم الفرعي: $e');\n//     }\n//   }\n//\n//   static void _applyCompanyFilter(FilterItemModel filter) {\n//     try {\n//       final brandController = Get.find<BrandFilterController>();\n//       // إيجاد الشركة وتحديدها\n//       final company = brandController.companies.firstWhereOrNull(\n//         (c) => c.id == filter.id,\n//       );\n//       if (company != null) {\n//         brandController.selectCompany(company);\n//       }\n//     } catch (e) {\n//       debugPrint('خطأ في تطبيق فلتر الشركة: $e');\n//     }\n//   }\n//\n//   static void _applyProductFilter(FilterItemModel filter) {\n//     try {\n//       final brandController = Get.find<BrandFilterController>();\n//       // إيجاد المنتج وتحديده\n//       final product = brandController.selectedCompanyProducts.firstWhereOrNull(\n//         (p) => p.id == filter.id,\n//       );\n//       if (product != null) {\n//         brandController.selectCompanyProduct(product);\n//       }\n//     } catch (e) {\n//       debugPrint('خطأ في تطبيق فلتر المنتج: $e');\n//     }\n//   }\n// }\n"
        }
    ]
}