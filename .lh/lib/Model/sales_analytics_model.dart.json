{
    "sourceFile": "lib/Model/sales_analytics_model.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752704601210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752704601210,
            "name": "Commit-0",
            "content": "import 'package:cloud_firestore/cloud_firestore.dart';\n\n/// نموذج لتحليل المبيعات\nclass SalesAnalyticsModel {\n  final String orderId;\n  final String buyerId;\n  final String buyerName;\n  final String? buyerPhoneNumber;\n  final String? buyerImageUrl;\n  final double totalAmount;\n  final double sellerProfit;\n  final DateTime orderDate;\n  final DateTime? deliveryDate;\n  final String orderStatus;\n  final String? deliveryTaskId;\n  final String? driverName;\n  final String? driverPhoneNumber;\n  final String deliveryStatus;\n  final String paymentMethod;\n  final List<OrderItemAnalytics> items;\n  final String? deliveryAddress;\n  final double? deliveryFee;\n\n  SalesAnalyticsModel({\n    required this.orderId,\n    required this.buyerId,\n    required this.buyerName,\n    this.buyerPhoneNumber,\n    this.buyerImageUrl,\n    required this.totalAmount,\n    required this.sellerProfit,\n    required this.orderDate,\n    this.deliveryDate,\n    required this.orderStatus,\n    this.deliveryTaskId,\n    this.driverName,\n    this.driverPhoneNumber,\n    required this.deliveryStatus,\n    required this.paymentMethod,\n    required this.items,\n    this.deliveryAddress,\n    this.deliveryFee,\n  });\n\n  /// حساب الربح الصافي (بعد خصم رسوم التوصيل)\n  double get netProfit => sellerProfit - (deliveryFee ?? 0);\n\n  /// حساب هامش الربح كنسبة مئوية\n  double get profitMargin => totalAmount > 0 ? (sellerProfit / totalAmount) * 100 : 0;\n\n  /// التحقق من حالة التوصيل\n  bool get isDelivered => deliveryStatus == 'delivered';\n  bool get isPending => deliveryStatus == 'pending' || deliveryStatus == 'company_pickup_request';\n  bool get isInProgress => deliveryStatus.contains('route') || deliveryStatus.contains('pickup');\n\n  Map<String, dynamic> toMap() {\n    return {\n      'orderId': orderId,\n      'buyerId': buyerId,\n      'buyerName': buyerName,\n      'buyerPhoneNumber': buyerPhoneNumber,\n      'buyerImageUrl': buyerImageUrl,\n      'totalAmount': totalAmount,\n      'sellerProfit': sellerProfit,\n      'orderDate': Timestamp.fromDate(orderDate),\n      'deliveryDate': deliveryDate != null ? Timestamp.fromDate(deliveryDate!) : null,\n      'orderStatus': orderStatus,\n      'deliveryTaskId': deliveryTaskId,\n      'driverName': driverName,\n      'driverPhoneNumber': driverPhoneNumber,\n      'deliveryStatus': deliveryStatus,\n      'paymentMethod': paymentMethod,\n      'items': items.map((item) => item.toMap()).toList(),\n      'deliveryAddress': deliveryAddress,\n      'deliveryFee': deliveryFee,\n    };\n  }\n\n  factory SalesAnalyticsModel.fromMap(Map<String, dynamic> map) {\n    return SalesAnalyticsModel(\n      orderId: map['orderId'] ?? '',\n      buyerId: map['buyerId'] ?? '',\n      buyerName: map['buyerName'] ?? '',\n      buyerPhoneNumber: map['buyerPhoneNumber'],\n      buyerImageUrl: map['buyerImageUrl'],\n      totalAmount: (map['totalAmount'] as num?)?.toDouble() ?? 0.0,\n      sellerProfit: (map['sellerProfit'] as num?)?.toDouble() ?? 0.0,\n      orderDate: (map['orderDate'] as Timestamp?)?.toDate() ?? DateTime.now(),\n      deliveryDate: (map['deliveryDate'] as Timestamp?)?.toDate(),\n      orderStatus: map['orderStatus'] ?? 'pending',\n      deliveryTaskId: map['deliveryTaskId'],\n      driverName: map['driverName'],\n      driverPhoneNumber: map['driverPhoneNumber'],\n      deliveryStatus: map['deliveryStatus'] ?? 'pending',\n      paymentMethod: map['paymentMethod'] ?? 'cash_on_delivery',\n      items: (map['items'] as List<dynamic>?)\n          ?.map((item) => OrderItemAnalytics.fromMap(item as Map<String, dynamic>))\n          .toList() ?? [],\n      deliveryAddress: map['deliveryAddress'],\n      deliveryFee: (map['deliveryFee'] as num?)?.toDouble(),\n    );\n  }\n\n  @override\n  String toString() {\n    return 'SalesAnalyticsModel(orderId: $orderId, buyerName: $buyerName, totalAmount: $totalAmount, profit: $sellerProfit)';\n  }\n}\n\n/// نموذج لتحليل عنصر في الطلب\nclass OrderItemAnalytics {\n  final String itemId;\n  final String itemName;\n  final String? itemImageUrl;\n  final int quantity;\n  final double unitPrice;\n  final double unitCost;\n  final bool isOffer;\n\n  OrderItemAnalytics({\n    required this.itemId,\n    required this.itemName,\n    this.itemImageUrl,\n    required this.quantity,\n    required this.unitPrice,\n    required this.unitCost,\n    this.isOffer = false,\n  });\n\n  /// حساب إجمالي سعر العنصر\n  double get totalPrice => unitPrice * quantity;\n\n  /// حساب إجمالي التكلفة\n  double get totalCost => unitCost * quantity;\n\n  /// حساب الربح للعنصر\n  double get itemProfit => totalPrice - totalCost;\n\n  /// حساب هامش الربح للعنصر\n  double get itemProfitMargin => totalPrice > 0 ? (itemProfit / totalPrice) * 100 : 0;\n\n  Map<String, dynamic> toMap() {\n    return {\n      'itemId': itemId,\n      'itemName': itemName,\n      'itemImageUrl': itemImageUrl,\n      'quantity': quantity,\n      'unitPrice': unitPrice,\n      'unitCost': unitCost,\n      'isOffer': isOffer,\n    };\n  }\n\n  factory OrderItemAnalytics.fromMap(Map<String, dynamic> map) {\n    return OrderItemAnalytics(\n      itemId: map['itemId'] ?? '',\n      itemName: map['itemName'] ?? '',\n      itemImageUrl: map['itemImageUrl'],\n      quantity: (map['quantity'] as num?)?.toInt() ?? 1,\n      unitPrice: (map['unitPrice'] as num?)?.toDouble() ?? 0.0,\n      unitCost: (map['unitCost'] as num?)?.toDouble() ?? 0.0,\n      isOffer: map['isOffer'] as bool? ?? false,\n    );\n  }\n\n  @override\n  String toString() {\n    return 'OrderItemAnalytics(itemName: $itemName, quantity: $quantity, profit: $itemProfit)';\n  }\n}\n\n/// نموذج للملخص اليومي للمبيعات\nclass DailySalesSummary {\n  final DateTime date;\n  final int totalOrders;\n  final int completedOrders;\n  final int pendingOrders;\n  final double totalRevenue;\n  final double totalProfit;\n  final double averageOrderValue;\n  final List<String> topBuyerIds;\n\n  DailySalesSummary({\n    required this.date,\n    required this.totalOrders,\n    required this.completedOrders,\n    required this.pendingOrders,\n    required this.totalRevenue,\n    required this.totalProfit,\n    required this.averageOrderValue,\n    required this.topBuyerIds,\n  });\n\n  /// حساب معدل إكمال الطلبات\n  double get completionRate => totalOrders > 0 ? (completedOrders / totalOrders) * 100 : 0;\n\n  /// حساب هامش الربح اليومي\n  double get profitMargin => totalRevenue > 0 ? (totalProfit / totalRevenue) * 100 : 0;\n\n  Map<String, dynamic> toMap() {\n    return {\n      'date': Timestamp.fromDate(date),\n      'totalOrders': totalOrders,\n      'completedOrders': completedOrders,\n      'pendingOrders': pendingOrders,\n      'totalRevenue': totalRevenue,\n      'totalProfit': totalProfit,\n      'averageOrderValue': averageOrderValue,\n      'topBuyerIds': topBuyerIds,\n    };\n  }\n\n  factory DailySalesSummary.fromMap(Map<String, dynamic> map) {\n    return DailySalesSummary(\n      date: (map['date'] as Timestamp?)?.toDate() ?? DateTime.now(),\n      totalOrders: (map['totalOrders'] as num?)?.toInt() ?? 0,\n      completedOrders: (map['completedOrders'] as num?)?.toInt() ?? 0,\n      pendingOrders: (map['pendingOrders'] as num?)?.toInt() ?? 0,\n      totalRevenue: (map['totalRevenue'] as num?)?.toDouble() ?? 0.0,\n      totalProfit: (map['totalProfit'] as num?)?.toDouble() ?? 0.0,\n      averageOrderValue: (map['averageOrderValue'] as num?)?.toDouble() ?? 0.0,\n      topBuyerIds: List<String>.from(map['topBuyerIds'] ?? []),\n    );\n  }\n\n  @override\n  String toString() {\n    return 'DailySalesSummary(date: $date, orders: $totalOrders, revenue: $totalRevenue, profit: $totalProfit)';\n  }\n}\n"
        }
    ]
}