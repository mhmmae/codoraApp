{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/ViewOrderSeller/enhanced_orders_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752751503164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752751503164,
            "name": "Commit-0",
            "content": "import 'package:cloud_firestore/cloud_firestore.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:get/get.dart';\nimport 'dart:math' as math;\n\nimport '../controllers/orders_controller.dart';\nimport '../utils/barcode_helper.dart';\nimport 'GetDateToText.dart';\nimport '../../XXX/xxx_firebase.dart';\nimport '../ui/pages/order_preview_page.dart';\n\n/// واجهة عرض الطلبات المحسنة مع نظام الحالات المتعددة وأنيميشن احترافي\nclass EnhancedOrdersView extends StatefulWidget {\n  const EnhancedOrdersView({super.key});\n\n  @override\n  State<EnhancedOrdersView> createState() => _EnhancedOrdersViewState();\n}\n\nclass _EnhancedOrdersViewState extends State<EnhancedOrdersView>\n    with TickerProviderStateMixin {\n  late AnimationController _mainAnimationController;\n  late AnimationController _tabAnimationController;\n  late AnimationController _statsAnimationController;\n  late TabController _tabController;\n\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n  late Animation<double> _scaleAnimation;\n\n  // للأنيميشن الفردي للبطاقات\n  final List<AnimationController> _cardControllers = [];\n  final Map<String, AnimationController> _buttonAnimations = {};\n\n  @override\n  void initState() {\n    super.initState();\n\n    // إعداد متحكمات الأنيميشن الرئيسية\n    _mainAnimationController = AnimationController(\n      duration: const Duration(milliseconds: 1200),\n      vsync: this,\n    );\n\n    _tabAnimationController = AnimationController(\n      duration: const Duration(milliseconds: 800),\n      vsync: this,\n    );\n\n    _statsAnimationController = AnimationController(\n      duration: const Duration(milliseconds: 1500),\n      vsync: this,\n    );\n\n    _tabController = TabController(length: 3, vsync: this);\n\n    // إعداد الأنيميشن\n    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n      CurvedAnimation(\n        parent: _mainAnimationController,\n        curve: const Interval(0.0, 0.6, curve: Curves.easeOut),\n      ),\n    );\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.5),\n      end: Offset.zero,\n    ).animate(\n      CurvedAnimation(\n        parent: _mainAnimationController,\n        curve: const Interval(0.2, 0.8, curve: Curves.easeOutBack),\n      ),\n    );\n\n    _scaleAnimation = Tween<double>(begin: 0.6, end: 1.0).animate(\n      CurvedAnimation(\n        parent: _mainAnimationController,\n        curve: const Interval(0.4, 1.0, curve: Curves.elasticOut),\n      ),\n    );\n\n    // بدء الأنيميشن\n    _mainAnimationController.forward();\n    _tabAnimationController.forward();\n    _statsAnimationController.forward();\n\n    // إضافة listener للتبويبات\n    _tabController.addListener(() {\n      if (_tabController.indexIsChanging) {\n        HapticFeedback.selectionClick();\n      }\n    });\n  }\n\n  @override\n  void dispose() {\n    _mainAnimationController.dispose();\n    _tabAnimationController.dispose();\n    _statsAnimationController.dispose();\n    _tabController.dispose();\n    for (var controller in _cardControllers) {\n      controller.dispose();\n    }\n    _buttonAnimations.forEach((_, controller) {\n      controller.dispose();\n    });\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final ordersController = Get.put(OrdersController());\n    final height = MediaQuery.of(context).size.height;\n    final width = MediaQuery.of(context).size.width;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[50],\n      body: Column(\n        children: [\n          // شريط الإحصائيات العلوي\n          _buildAnimatedStatsBar(ordersController, width),\n\n          // شريط التبويب المحسن\n          FadeTransition(\n            opacity: _fadeAnimation,\n            child: SlideTransition(\n              position: _slideAnimation,\n              child: _buildProfessionalTabBar(ordersController, width),\n            ),\n          ),\n\n          const SizedBox(height: 16),\n\n          // محتوى التبويبات\n          Expanded(\n            child: ScaleTransition(\n              scale: _scaleAnimation,\n              child: TabBarView(\n                controller: _tabController,\n                children: [\n                  _buildOrdersList(\n                    ordersController.newOrdersList,\n                    OrderStatus.pending,\n                    width,\n                    height,\n                    const Color(0xFF2196F3), // أزرق\n                  ),\n                  _buildOrdersList(\n                    ordersController.acceptedOrdersList,\n                    OrderStatus.accepted,\n                    width,\n                    height,\n                    const Color(0xFFFF9800), // برتقالي\n                  ),\n                  _buildOrdersList(\n                    ordersController.readyOrdersList,\n                    OrderStatus.readyForPickup,\n                    width,\n                    height,\n                    const Color(0xFF4CAF50), // أخضر\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء شريط الإحصائيات المتحرك\n  Widget _buildAnimatedStatsBar(OrdersController controller, double width) {\n    return AnimatedBuilder(\n      animation: _statsAnimationController,\n      builder: (context, child) {\n        return Container(\n          margin: const EdgeInsets.fromLTRB(16, 8, 16, 0),\n          padding: const EdgeInsets.all(16),\n          decoration: BoxDecoration(\n            gradient: LinearGradient(\n              colors: [\n                Theme.of(context).primaryColor.withOpacity(0.1),\n                Theme.of(context).primaryColor.withOpacity(0.05),\n              ],\n              begin: Alignment.topLeft,\n              end: Alignment.bottomRight,\n            ),\n            borderRadius: BorderRadius.circular(20),\n            boxShadow: [\n              BoxShadow(\n                color: Theme.of(context).primaryColor.withOpacity(0.1),\n                blurRadius: 10,\n                offset: const Offset(0, 5),\n              ),\n            ],\n          ),\n          child: Row(\n            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n            children: [\n              _buildStatItem(\n                controller.newOrdersCount,\n                'جديد',\n                Icons.fiber_new,\n                const Color(0xFF2196F3),\n                0.0,\n              ),\n              _buildVerticalDivider(),\n              _buildStatItem(\n                controller.acceptedOrdersCount,\n                'قيد التحضير',\n                Icons.restaurant,\n                const Color(0xFFFF9800),\n                0.2,\n              ),\n              _buildVerticalDivider(),\n              _buildStatItem(\n                controller.readyOrdersCount,\n                'جاهز',\n                Icons.check_circle,\n                const Color(0xFF4CAF50),\n                0.4,\n              ),\n            ],\n          ),\n        );\n      },\n    );\n  }\n\n  /// بناء عنصر إحصائي واحد\n  Widget _buildStatItem(\n    RxInt count,\n    String label,\n    IconData icon,\n    Color color,\n    double delay,\n  ) {\n    return Obx(() {\n      final animation = Tween<double>(begin: 0.0, end: 1.0).animate(\n        CurvedAnimation(\n          parent: _statsAnimationController,\n          curve: Interval(delay, delay + 0.5, curve: Curves.elasticOut),\n        ),\n      );\n\n      return AnimatedBuilder(\n        animation: animation,\n        builder: (context, child) {\n          return Transform.scale(\n            scale: animation.value,\n            child: Column(\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                Container(\n                  padding: const EdgeInsets.all(12),\n                  decoration: BoxDecoration(\n                    color: color.withOpacity(0.15),\n                    shape: BoxShape.circle,\n                  ),\n                  child: Icon(icon, color: color, size: 24),\n                ),\n                const SizedBox(height: 8),\n                TweenAnimationBuilder<int>(\n                  tween: IntTween(begin: 0, end: count.value),\n                  duration: const Duration(milliseconds: 1000),\n                  builder: (context, value, child) {\n                    return Text(\n                      '$value',\n                      style: TextStyle(\n                        fontSize: 20,\n                        fontWeight: FontWeight.bold,\n                        color: color,\n                      ),\n                    );\n                  },\n                ),\n                Text(\n                  label,\n                  style: TextStyle(fontSize: 12, color: Colors.grey[600]),\n                ),\n              ],\n            ),\n          );\n        },\n      );\n    });\n  }\n\n  /// فاصل عمودي\n  Widget _buildVerticalDivider() {\n    return Container(height: 50, width: 1, color: Colors.grey[300]);\n  }\n\n  /// بناء شريط التبويب الاحترافي\n  Widget _buildProfessionalTabBar(OrdersController controller, double width) {\n    return Container(\n      margin: const EdgeInsets.symmetric(horizontal: 16),\n      height: 55,\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.circular(30),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.05),\n            blurRadius: 15,\n            offset: const Offset(0, 5),\n          ),\n        ],\n      ),\n      child: TabBar(\n        controller: _tabController,\n        indicator: BoxDecoration(\n          gradient: LinearGradient(\n            colors: [\n              Theme.of(context).primaryColor,\n              Theme.of(context).primaryColor.withOpacity(0.8),\n            ],\n          ),\n          borderRadius: BorderRadius.circular(25),\n          boxShadow: [\n            BoxShadow(\n              color: Theme.of(context).primaryColor.withOpacity(0.3),\n              blurRadius: 10,\n              offset: const Offset(0, 3),\n            ),\n          ],\n        ),\n        indicatorSize: TabBarIndicatorSize.tab,\n        indicatorPadding: const EdgeInsets.all(5),\n        labelColor: Colors.white,\n        unselectedLabelColor: Colors.grey[600],\n        labelStyle: const TextStyle(fontWeight: FontWeight.bold, fontSize: 14),\n        tabs: [\n          _buildAnimatedTab(\n            'جديد',\n            controller.newOrdersCount,\n            const Color(0xFF2196F3),\n          ),\n          _buildAnimatedTab(\n            'قيد التحضير',\n            controller.acceptedOrdersCount,\n            const Color(0xFFFF9800),\n          ),\n          _buildAnimatedTab(\n            'جاهز',\n            controller.readyOrdersCount,\n            const Color(0xFF4CAF50),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء تاب متحرك\n  Widget _buildAnimatedTab(String label, RxInt count, Color color) {\n    return Tab(\n      child: Obx(\n        () => Row(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            Text(label),\n            if (count.value > 0) ...[\n              const SizedBox(width: 8),\n              TweenAnimationBuilder<double>(\n                tween: Tween(begin: 0.0, end: count.value > 0 ? 1.0 : 0.0),\n                duration: const Duration(milliseconds: 300),\n                curve: Curves.elasticOut,\n                builder: (context, value, child) {\n                  return Transform.scale(\n                    scale: value,\n                    child: Container(\n                      padding: const EdgeInsets.symmetric(\n                        horizontal: 8,\n                        vertical: 2,\n                      ),\n                      decoration: BoxDecoration(\n                        color: color,\n                        borderRadius: BorderRadius.circular(15),\n                      ),\n                      child: Text(\n                        '${count.value}',\n                        style: const TextStyle(\n                          fontSize: 11,\n                          fontWeight: FontWeight.bold,\n                          color: Colors.white,\n                        ),\n                      ),\n                    ),\n                  );\n                },\n              ),\n            ],\n          ],\n        ),\n      ),\n    );\n  }\n\n  /// بناء قائمة الطلبات لكل تبويب\n  Widget _buildOrdersList(\n    RxList<QueryDocumentSnapshot> ordersList,\n    OrderStatus status,\n    double width,\n    double height,\n    Color accentColor,\n  ) {\n    final ordersController = Get.find<OrdersController>();\n\n    return Obx(() {\n      if (ordersList.isEmpty) {\n        return _buildEmptyState(status, width, accentColor);\n      }\n\n      return RefreshIndicator(\n        onRefresh: () => ordersController.refreshOrders(),\n        color: accentColor,\n        backgroundColor: Colors.white,\n        child: ListView.builder(\n          padding: const EdgeInsets.symmetric(horizontal: 16),\n          itemCount: ordersList.length,\n          itemBuilder: (context, index) {\n            final orderDoc = ordersList[index];\n            final orderData = orderDoc.data() as Map<String, dynamic>;\n\n            // إنشاء animation controller لكل بطاقة\n            if (_cardControllers.length <= index) {\n              final controller = AnimationController(\n                duration: Duration(milliseconds: 800 + (index * 100)),\n                vsync: this,\n              );\n              _cardControllers.add(controller);\n              controller.forward();\n            }\n\n            return AnimatedBuilder(\n              animation: _cardControllers[index],\n              builder: (context, child) {\n                final slideAnimation = Tween<Offset>(\n                  begin: const Offset(1.0, 0.0),\n                  end: Offset.zero,\n                ).animate(\n                  CurvedAnimation(\n                    parent: _cardControllers[index],\n                    curve: Curves.easeOutBack,\n                  ),\n                );\n\n                final fadeAnimation = Tween<double>(\n                  begin: 0.0,\n                  end: 1.0,\n                ).animate(\n                  CurvedAnimation(\n                    parent: _cardControllers[index],\n                    curve: Curves.easeIn,\n                  ),\n                );\n\n                return SlideTransition(\n                  position: slideAnimation,\n                  child: FadeTransition(\n                    opacity: fadeAnimation,\n                    child: _buildProfessionalOrderCard(\n                      orderDoc,\n                      orderData,\n                      status,\n                      width,\n                      height,\n                      accentColor,\n                    ),\n                  ),\n                );\n              },\n            );\n          },\n        ),\n      );\n    });\n  }\n\n  /// بناء بطاقة الطلب الاحترافية\n  Widget _buildProfessionalOrderCard(\n    QueryDocumentSnapshot orderDoc,\n    Map<String, dynamic> orderData,\n    OrderStatus status,\n    double width,\n    double height,\n    Color accentColor,\n  ) {\n    return FutureBuilder<DocumentSnapshot>(\n      future:\n          FirebaseFirestore.instance\n              .collection(FirebaseX.collectionApp)\n              .doc(orderData['uidUser'])\n              .get(),\n      builder: (context, userSnapshot) {\n        if (userSnapshot.connectionState == ConnectionState.waiting) {\n          return _buildLoadingCard(height);\n        }\n\n        if (!userSnapshot.hasData || !userSnapshot.data!.exists) {\n          return const SizedBox.shrink();\n        }\n\n        final userData = userSnapshot.data!.data() as Map<String, dynamic>;\n\n        return Container(\n          margin: const EdgeInsets.only(bottom: 16),\n          child: Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                HapticFeedback.lightImpact();\n                _showOrderDetails(\n                  orderDoc,\n                  orderData,\n                  userData,\n                  status,\n                  accentColor,\n                );\n              },\n              borderRadius: BorderRadius.circular(20),\n              child: Container(\n                decoration: BoxDecoration(\n                  color: Colors.white,\n                  borderRadius: BorderRadius.circular(20),\n                  boxShadow: [\n                    BoxShadow(\n                      color: accentColor.withOpacity(0.1),\n                      blurRadius: 20,\n                      offset: const Offset(0, 10),\n                    ),\n                  ],\n                ),\n                child: Column(\n                  children: [\n                    // رأس البطاقة\n                    Container(\n                      padding: const EdgeInsets.all(16),\n                      decoration: BoxDecoration(\n                        gradient: LinearGradient(\n                          colors: [\n                            accentColor.withOpacity(0.1),\n                            accentColor.withOpacity(0.05),\n                          ],\n                          begin: Alignment.topLeft,\n                          end: Alignment.bottomRight,\n                        ),\n                        borderRadius: const BorderRadius.only(\n                          topLeft: Radius.circular(20),\n                          topRight: Radius.circular(20),\n                        ),\n                      ),\n                      child: Row(\n                        children: [\n                          // صورة المستخدم\n                          Hero(\n                            tag: 'user_${orderDoc.id}',\n                            child: Container(\n                              width: 60,\n                              height: 60,\n                              decoration: BoxDecoration(\n                                shape: BoxShape.circle,\n                                border: Border.all(\n                                  color: accentColor.withOpacity(0.3),\n                                  width: 3,\n                                ),\n                                boxShadow: [\n                                  BoxShadow(\n                                    color: accentColor.withOpacity(0.2),\n                                    blurRadius: 10,\n                                  ),\n                                ],\n                                image: DecorationImage(\n                                  fit: BoxFit.cover,\n                                  image: NetworkImage(userData['url'] ?? ''),\n                                ),\n                              ),\n                            ),\n                          ),\n                          const SizedBox(width: 16),\n                          // معلومات المستخدم\n                          Expanded(\n                            child: Column(\n                              crossAxisAlignment: CrossAxisAlignment.start,\n                              children: [\n                                Text(\n                                  userData['name'] ?? 'غير محدد',\n                                  style: const TextStyle(\n                                    fontSize: 18,\n                                    fontWeight: FontWeight.bold,\n                                  ),\n                                  overflow: TextOverflow.ellipsis,\n                                  maxLines: 1,\n                                ),\n                                const SizedBox(height: 4),\n                                Row(\n                                  children: [\n                                    Icon(\n                                      Icons.phone,\n                                      size: 14,\n                                      color: Colors.grey[600],\n                                    ),\n                                    const SizedBox(width: 4),\n                                    Flexible(\n                                      child: Text(\n                                        userData['phneNumber'] ?? 'غير محدد',\n                                        style: TextStyle(\n                                          fontSize: 14,\n                                          color: Colors.grey[600],\n                                        ),\n                                        overflow: TextOverflow.ellipsis,\n                                        maxLines: 1,\n                                      ),\n                                    ),\n                                  ],\n                                ),\n                              ],\n                            ),\n                          ),\n                          // التاريخ والوقت فقط\n                          GetBuilder<GetDateToText>(\n                            init: GetDateToText(),\n                            builder:\n                                (dateController) => Container(\n                                  padding: const EdgeInsets.symmetric(\n                                    horizontal: 14,\n                                    vertical: 8,\n                                  ),\n                                  decoration: BoxDecoration(\n                                    gradient: LinearGradient(\n                                      colors: [\n                                        accentColor.withOpacity(0.15),\n                                        accentColor.withOpacity(0.1),\n                                      ],\n                                    ),\n                                    borderRadius: BorderRadius.circular(20),\n                                    border: Border.all(\n                                      color: accentColor.withOpacity(0.3),\n                                      width: 1.5,\n                                    ),\n                                  ),\n                                  child: Row(\n                                    mainAxisSize: MainAxisSize.min,\n                                    children: [\n                                      Icon(\n                                        Icons.schedule,\n                                        size: 16,\n                                        color: accentColor,\n                                      ),\n                                      const SizedBox(width: 6),\n                                      Text(\n                                        dateController.dateToText(\n                                          orderData['timeOrder'],\n                                        ),\n                                        style: TextStyle(\n                                          fontSize: 12,\n                                          color: accentColor,\n                                          fontWeight: FontWeight.w600,\n                                        ),\n                                      ),\n                                    ],\n                                  ),\n                                ),\n                          ),\n                        ],\n                      ),\n                    ),\n                    // أزرار الأكشن\n                    _buildActionButtons(\n                      context,\n                      orderDoc.id,\n                      orderData,\n                      userData,\n                      status,\n                      width,\n                      height,\n                      accentColor,\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ),\n        );\n      },\n    );\n  }\n\n  /// بناء أزرار الأكشن حسب حالة الطلب\n  Widget _buildActionButtons(\n    BuildContext context,\n    String orderId,\n    Map<String, dynamic> orderData,\n    Map<String, dynamic> userData,\n    OrderStatus status,\n    double width,\n    double height,\n    Color accentColor,\n  ) {\n    // إنشاء animation controller للأزرار\n    _buttonAnimations[orderId] ??= AnimationController(\n      duration: const Duration(milliseconds: 300),\n      vsync: this,\n    );\n\n    Widget content;\n\n    switch (status) {\n      case OrderStatus.pending:\n        content = Row(\n          children: [\n            // زر الرفض\n            Expanded(\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.mediumImpact();\n                  _showRejectDialog(context, orderId);\n                },\n                label: 'رفض',\n                icon: Icons.close,\n                color: Colors.red,\n                isOutlined: true,\n              ),\n            ),\n            const SizedBox(width: 12),\n            // زر معاينة الطلب\n            Expanded(\n              flex: 2,\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.lightImpact();\n                  // الانتقال إلى صفحة معاينة الطلب\n                  _navigateToOrderPreview(orderId, orderData, userData);\n                },\n                label: 'معاينة الطلب',\n                icon: Icons.visibility,\n                color: Colors.blue,\n                isGradient: true,\n              ),\n            ),\n          ],\n        );\n        break;\n\n      case OrderStatus.accepted:\n        content = Row(\n          children: [\n            Expanded(\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.lightImpact();\n                  // الانتقال إلى صفحة معاينة الطلب\n                  _navigateToOrderPreview(orderId, orderData, userData);\n                },\n                label: 'معاينة الطلب',\n                icon: Icons.visibility,\n                color: Colors.blue,\n                isOutlined: true,\n              ),\n            ),\n            const SizedBox(width: 12),\n            Expanded(\n              flex: 2,\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.mediumImpact();\n                  _showReadyConfirmDialog(context, orderId);\n                },\n                label: 'جاهز للاستلام',\n                icon: Icons.inventory_2,\n                color: Colors.orange,\n                isGradient: true,\n              ),\n            ),\n          ],\n        );\n        break;\n\n      case OrderStatus.readyForPickup:\n        content = Column(\n          children: [\n            // زر معاينة الطلب\n            _buildAnimatedButton(\n              onPressed: () {\n                HapticFeedback.lightImpact();\n                // الانتقال إلى صفحة معاينة الطلب\n                _navigateToOrderPreview(orderId, orderData, userData);\n              },\n              label: 'معاينة الطلب',\n              icon: Icons.visibility,\n              color: Colors.blue,\n              isOutlined: true,\n              isFullWidth: true,\n            ),\n            const SizedBox(height: 16),\n            Text(\n              'في انتظار عامل التوصيل',\n              style: TextStyle(\n                fontSize: 15,\n                color: Colors.grey[700],\n                fontWeight: FontWeight.w500,\n              ),\n            ),\n            const SizedBox(height: 16),\n            // QR Code\n            GestureDetector(\n              onTap: () {\n                HapticFeedback.selectionClick();\n                BarcodeHelper.showBarcodeDialog(\n                  context,\n                  orderData['numberOfOrder'].toString(),\n                  'طلب من ${userData['name'] ?? 'عميل'}',\n                );\n              },\n              child: Container(\n                padding: const EdgeInsets.all(20),\n                decoration: BoxDecoration(\n                  gradient: LinearGradient(\n                    colors: [\n                      Colors.green.withOpacity(0.15),\n                      Colors.green.withOpacity(0.1),\n                    ],\n                    begin: Alignment.topLeft,\n                    end: Alignment.bottomRight,\n                  ),\n                  borderRadius: BorderRadius.circular(20),\n                  border: Border.all(\n                    color: Colors.green.withOpacity(0.3),\n                    width: 2,\n                  ),\n                  boxShadow: [\n                    BoxShadow(\n                      color: Colors.green.withOpacity(0.1),\n                      blurRadius: 10,\n                      offset: const Offset(0, 5),\n                    ),\n                  ],\n                ),\n                child: Column(\n                  children: [\n                    Icon(Icons.qr_code_2, color: Colors.green[700], size: 48),\n                    const SizedBox(height: 12),\n                    Text(\n                      'عرض رمز QR للتسليم',\n                      style: TextStyle(\n                        color: Colors.green[700],\n                        fontWeight: FontWeight.bold,\n                        fontSize: 18,\n                      ),\n                    ),\n                    const SizedBox(height: 6),\n                    Text(\n                      'اطلب من عامل التوصيل مسح الرمز',\n                      style: TextStyle(color: Colors.green[600], fontSize: 13),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ],\n        );\n        break;\n\n      default:\n        content = const SizedBox.shrink();\n    }\n\n    return Container(padding: const EdgeInsets.all(16), child: content);\n  }\n\n  /// بناء زر متحرك احترافي\n  Widget _buildAnimatedButton({\n    required VoidCallback onPressed,\n    required String label,\n    required IconData icon,\n    required Color color,\n    bool isOutlined = false,\n    bool isGradient = false,\n    bool isFullWidth = false,\n  }) {\n    return TweenAnimationBuilder<double>(\n      tween: Tween(begin: 0.95, end: 1.0),\n      duration: const Duration(milliseconds: 200),\n      builder: (context, value, child) {\n        return Transform.scale(\n          scale: value,\n          child: Container(\n            width: isFullWidth ? double.infinity : null,\n            height: 50,\n            decoration: BoxDecoration(\n              gradient:\n                  isGradient && !isOutlined\n                      ? LinearGradient(\n                        colors: [color, color.withOpacity(0.8)],\n                        begin: Alignment.topLeft,\n                        end: Alignment.bottomRight,\n                      )\n                      : null,\n              color: isOutlined ? null : (isGradient ? null : color),\n              borderRadius: BorderRadius.circular(15),\n              border: isOutlined ? Border.all(color: color, width: 2) : null,\n              boxShadow:\n                  !isOutlined\n                      ? [\n                        BoxShadow(\n                          color: color.withOpacity(0.3),\n                          blurRadius: 10,\n                          offset: const Offset(0, 5),\n                        ),\n                      ]\n                      : null,\n            ),\n            child: Material(\n              color: Colors.transparent,\n              child: InkWell(\n                onTap: onPressed,\n                borderRadius: BorderRadius.circular(15),\n                child: Container(\n                  padding: const EdgeInsets.symmetric(horizontal: 20),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    children: [\n                      Icon(\n                        icon,\n                        color: isOutlined ? color : Colors.white,\n                        size: 22,\n                      ),\n                      const SizedBox(width: 8),\n                      Text(\n                        label,\n                        style: TextStyle(\n                          color: isOutlined ? color : Colors.white,\n                          fontWeight: FontWeight.bold,\n                          fontSize: 15,\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        );\n      },\n    );\n  }\n\n  /// عرض تفاصيل الطلب\n  void _showOrderDetails(\n    QueryDocumentSnapshot orderDoc,\n    Map<String, dynamic> orderData,\n    Map<String, dynamic> userData,\n    OrderStatus status,\n    Color accentColor,\n  ) {\n    HapticFeedback.lightImpact();\n\n    Get.bottomSheet(\n      Container(\n        constraints: BoxConstraints(\n          maxHeight: MediaQuery.of(context).size.height * 0.8,\n        ),\n        decoration: const BoxDecoration(\n          color: Colors.white,\n          borderRadius: BorderRadius.only(\n            topLeft: Radius.circular(30),\n            topRight: Radius.circular(30),\n          ),\n        ),\n        child: Column(\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            // مقبض السحب\n            Container(\n              margin: const EdgeInsets.only(top: 12),\n              width: 60,\n              height: 5,\n              decoration: BoxDecoration(\n                color: Colors.grey[300],\n                borderRadius: BorderRadius.circular(10),\n              ),\n            ),\n            // محتوى التفاصيل\n            Expanded(\n              child: SingleChildScrollView(\n                padding: const EdgeInsets.all(20),\n                child: Column(\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    // عنوان التفاصيل\n                    Row(\n                      children: [\n                        Container(\n                          padding: const EdgeInsets.all(8),\n                          decoration: BoxDecoration(\n                            color: accentColor.withOpacity(0.1),\n                            shape: BoxShape.circle,\n                          ),\n                          child: Icon(\n                            Icons.receipt_long,\n                            color: accentColor,\n                            size: 20,\n                          ),\n                        ),\n                        const SizedBox(width: 12),\n                        const Text(\n                          'تفاصيل الطلب',\n                          style: TextStyle(\n                            fontSize: 22,\n                            fontWeight: FontWeight.bold,\n                          ),\n                        ),\n                      ],\n                    ),\n                    const SizedBox(height: 24),\n\n                    // معلومات الطلب\n                    Container(\n                      width: double.infinity,\n                      padding: const EdgeInsets.all(16),\n                      decoration: BoxDecoration(\n                        color: Colors.white,\n                        borderRadius: BorderRadius.circular(12),\n                        border: Border.all(color: Colors.grey.withOpacity(0.2)),\n                        boxShadow: [\n                          BoxShadow(\n                            color: Colors.black.withOpacity(0.05),\n                            blurRadius: 10,\n                            offset: const Offset(0, 2),\n                          ),\n                        ],\n                      ),\n                      child: Column(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Row(\n                            children: [\n                              Icon(\n                                Icons.info_outline,\n                                color: accentColor,\n                                size: 20,\n                              ),\n                              const SizedBox(width: 8),\n                              Text(\n                                'معلومات الطلب',\n                                style: TextStyle(\n                                  fontSize: 16,\n                                  fontWeight: FontWeight.bold,\n                                  color: accentColor,\n                                ),\n                              ),\n                            ],\n                          ),\n                          const SizedBox(height: 12),\n                          Text('رقم الطلب: ${orderDoc.id.substring(0, 8)}'),\n                          const SizedBox(height: 8),\n\n                          // عرض نوع الطلب\n                          if (orderData['orderType'] == 'wholesale_to_retail')\n                            Container(\n                              margin: const EdgeInsets.only(bottom: 8),\n                              padding: const EdgeInsets.symmetric(\n                                horizontal: 8,\n                                vertical: 4,\n                              ),\n                              decoration: BoxDecoration(\n                                color: Colors.orange.withOpacity(0.1),\n                                borderRadius: BorderRadius.circular(8),\n                                border: Border.all(\n                                  color: Colors.orange.withOpacity(0.3),\n                                ),\n                              ),\n                              child: Row(\n                                mainAxisSize: MainAxisSize.min,\n                                children: [\n                                  Icon(\n                                    Icons.storefront,\n                                    size: 16,\n                                    color: Colors.orange[700],\n                                  ),\n                                  const SizedBox(width: 4),\n                                  Text(\n                                    'طلب جملة لتجزئة',\n                                    style: TextStyle(\n                                      color: Colors.orange[700],\n                                      fontWeight: FontWeight.bold,\n                                      fontSize: 12,\n                                    ),\n                                  ),\n                                ],\n                              ),\n                            ),\n\n                          // عرض نوع المشتري\n                          if (orderData['buyerType'] == 'retailer')\n                            Container(\n                              padding: const EdgeInsets.symmetric(\n                                horizontal: 8,\n                                vertical: 4,\n                              ),\n                              decoration: BoxDecoration(\n                                color: Colors.blue.withOpacity(0.1),\n                                borderRadius: BorderRadius.circular(8),\n                                border: Border.all(\n                                  color: Colors.blue.withOpacity(0.3),\n                                ),\n                              ),\n                              child: Row(\n                                mainAxisSize: MainAxisSize.min,\n                                children: [\n                                  Icon(\n                                    Icons.person_outline,\n                                    size: 16,\n                                    color: Colors.blue[700],\n                                  ),\n                                  const SizedBox(width: 4),\n                                  Text(\n                                    'مشتري: تاجر تجزئة',\n                                    style: TextStyle(\n                                      color: Colors.blue[700],\n                                      fontWeight: FontWeight.bold,\n                                      fontSize: 12,\n                                    ),\n                                  ),\n                                ],\n                              ),\n                            ),\n                        ],\n                      ),\n                    ),\n                    const SizedBox(height: 16),\n\n                    // معلومات العميل\n                    Container(\n                      width: double.infinity,\n                      padding: const EdgeInsets.all(16),\n                      decoration: BoxDecoration(\n                        color: Colors.white,\n                        borderRadius: BorderRadius.circular(12),\n                        border: Border.all(color: Colors.grey.withOpacity(0.2)),\n                        boxShadow: [\n                          BoxShadow(\n                            color: Colors.black.withOpacity(0.05),\n                            blurRadius: 10,\n                            offset: const Offset(0, 2),\n                          ),\n                        ],\n                      ),\n                      child: Column(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Row(\n                            children: [\n                              Icon(\n                                Icons.person_outline,\n                                color: accentColor,\n                                size: 20,\n                              ),\n                              const SizedBox(width: 8),\n                              Text(\n                                'معلومات العميل',\n                                style: TextStyle(\n                                  fontSize: 16,\n                                  fontWeight: FontWeight.bold,\n                                  color: accentColor,\n                                ),\n                              ),\n                            ],\n                          ),\n                          const SizedBox(height: 12),\n                          Text('الاسم: ${userData['name'] ?? 'غير محدد'}'),\n                          if (userData['shopName'] != null &&\n                              userData['shopName'].toString().isNotEmpty) ...[\n                            const SizedBox(height: 8),\n                            Text('اسم المتجر: ${userData['shopName']}'),\n                          ],\n                          const SizedBox(height: 8),\n                          Text(\n                            'الهاتف: ${userData['phoneNumber'] ?? 'غير محدد'}',\n                          ),\n                        ],\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n\n            // أزرار الإجراءات (إذا كان الطلب جديد)\n            if (status == OrderStatus.pending)\n              Container(\n                padding: const EdgeInsets.all(20),\n                decoration: BoxDecoration(\n                  color: Colors.grey[50],\n                  borderRadius: const BorderRadius.only(\n                    topLeft: Radius.circular(20),\n                    topRight: Radius.circular(20),\n                  ),\n                ),\n                child: Row(\n                  children: [\n                    Expanded(\n                      child: ElevatedButton.icon(\n                        onPressed: () {\n                          Get.back();\n                          _showRejectDialog(context, orderDoc.id);\n                        },\n                        icon: const Icon(Icons.close, color: Colors.white),\n                        label: const Text('رفض'),\n                        style: ElevatedButton.styleFrom(\n                          backgroundColor: Colors.red,\n                          foregroundColor: Colors.white,\n                          padding: const EdgeInsets.symmetric(vertical: 12),\n                          shape: RoundedRectangleBorder(\n                            borderRadius: BorderRadius.circular(12),\n                          ),\n                        ),\n                      ),\n                    ),\n                    const SizedBox(width: 12),\n                    Expanded(\n                      flex: 2,\n                      child: ElevatedButton.icon(\n                        onPressed: () {\n                          Get.back();\n                          Get.to(\n                            () => OrderPreviewPage(\n                              orderId: orderDoc.id,\n                              orderData: orderData,\n                              userData: userData,\n                            ),\n                          );\n                        },\n                        icon: const Icon(Icons.visibility, color: Colors.white),\n                        label: const Text('معاينة وقبول'),\n                        style: ElevatedButton.styleFrom(\n                          backgroundColor: Colors.green,\n                          foregroundColor: Colors.white,\n                          padding: const EdgeInsets.symmetric(vertical: 12),\n                          shape: RoundedRectangleBorder(\n                            borderRadius: BorderRadius.circular(12),\n                          ),\n                        ),\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n          ],\n        ),\n      ),\n      backgroundColor: Colors.transparent,\n      isScrollControlled: true,\n      enterBottomSheetDuration: const Duration(milliseconds: 300),\n      exitBottomSheetDuration: const Duration(milliseconds: 200),\n    );\n  }\n\n  /// عرض حوار تأكيد الرفض\n  void _showRejectDialog(BuildContext context, String orderId) {\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),\n        title: Row(\n          children: [\n            Container(\n              padding: const EdgeInsets.all(8),\n              decoration: BoxDecoration(\n                color: Colors.orange.withOpacity(0.1),\n                shape: BoxShape.circle,\n              ),\n              child: Icon(\n                Icons.warning_amber_rounded,\n                color: Colors.orange[700],\n                size: 24,\n              ),\n            ),\n            const SizedBox(width: 12),\n            const Text('تأكيد رفض الطلب', style: TextStyle(fontSize: 18)),\n          ],\n        ),\n        content: const Text(\n          'هل أنت متأكد من رفض هذا الطلب؟\\nلا يمكن التراجع عن هذا الإجراء.',\n          style: TextStyle(height: 1.5),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Get.back(),\n            child: Text('إلغاء', style: TextStyle(color: Colors.grey[600])),\n          ),\n          const SizedBox(width: 8),\n          ElevatedButton(\n            onPressed: () {\n              HapticFeedback.mediumImpact();\n              Get.back();\n              Get.find<OrdersController>().rejectOrder(orderId);\n            },\n            style: ElevatedButton.styleFrom(\n              backgroundColor: Colors.red,\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(12),\n              ),\n              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),\n            ),\n            child: const Text(\n              'رفض الطلب',\n              style: TextStyle(\n                color: Colors.white,\n                fontWeight: FontWeight.bold,\n              ),\n            ),\n          ),\n        ],\n      ),\n      barrierDismissible: false,\n    );\n  }\n\n  /// حوار تأكيد الطلب الجاهز\n  void _showReadyConfirmDialog(BuildContext context, String orderId) {\n    HapticFeedback.mediumImpact();\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),\n        title: Row(\n          children: [\n            Container(\n              padding: const EdgeInsets.all(8),\n              decoration: BoxDecoration(\n                color: Colors.orange.withOpacity(0.1),\n                shape: BoxShape.circle,\n              ),\n              child: Icon(\n                Icons.inventory_2,\n                color: Colors.orange[700],\n                size: 24,\n              ),\n            ),\n            const SizedBox(width: 12),\n            const Text('تأكيد جاهزية الطلب', style: TextStyle(fontSize: 18)),\n          ],\n        ),\n        content: const Text(\n          'هل أنت متأكد من انتهاء تجهيز الطلب؟\\n\\nسوف يتم استدعاء عامل التوصيل لأخذ الطلب.',\n          style: TextStyle(height: 1.5),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Get.back(),\n            child: Text('إلغاء', style: TextStyle(color: Colors.grey[600])),\n          ),\n          const SizedBox(width: 8),\n          ElevatedButton(\n            onPressed: () {\n              HapticFeedback.mediumImpact();\n              Get.back();\n              Get.find<OrdersController>().markOrderReady(orderId);\n            },\n            style: ElevatedButton.styleFrom(\n              backgroundColor: Colors.orange,\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(12),\n              ),\n              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),\n            ),\n            child: const Text(\n              'نعم، الطلب جاهز',\n              style: TextStyle(\n                color: Colors.white,\n                fontWeight: FontWeight.bold,\n              ),\n            ),\n          ),\n        ],\n      ),\n      barrierDismissible: false,\n    );\n  }\n\n  /// بناء بطاقة التحميل\n  Widget _buildLoadingCard(double height) {\n    return Container(\n      height: height * 0.15,\n      margin: const EdgeInsets.only(bottom: 16),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.circular(20),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey.withOpacity(0.1),\n            blurRadius: 10,\n            offset: const Offset(0, 5),\n          ),\n        ],\n      ),\n      child: const Center(child: CircularProgressIndicator(strokeWidth: 2)),\n    );\n  }\n\n  /// حالة القائمة الفارغة\n  Widget _buildEmptyState(OrderStatus status, double width, Color color) {\n    final Map<OrderStatus, Map<String, dynamic>> emptyStateData = {\n      OrderStatus.pending: {\n        'icon': Icons.inbox_outlined,\n        'title': 'لا توجد طلبات جديدة',\n        'subtitle': 'ستظهر الطلبات الجديدة هنا تلقائياً',\n        'animation': 'bounce',\n      },\n      OrderStatus.accepted: {\n        'icon': Icons.restaurant_menu,\n        'title': 'لا توجد طلبات قيد التحضير',\n        'subtitle': 'ابدأ بقبول الطلبات الجديدة',\n        'animation': 'rotate',\n      },\n      OrderStatus.readyForPickup: {\n        'icon': Icons.inventory_2_outlined,\n        'title': 'لا توجد طلبات جاهزة',\n        'subtitle': 'قم بتجهيز الطلبات المقبولة',\n        'animation': 'pulse',\n      },\n    };\n\n    final data = emptyStateData[status]!;\n\n    return Center(\n      child: TweenAnimationBuilder<double>(\n        tween: Tween(begin: 0.0, end: 1.0),\n        duration: const Duration(milliseconds: 800),\n        curve: Curves.elasticOut,\n        builder: (context, value, child) {\n          return Transform.scale(\n            scale: value,\n            child: Column(\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                _buildAnimatedEmptyIcon(data['icon'], color, data['animation']),\n                const SizedBox(height: 24),\n                Text(\n                  data['title'],\n                  style: TextStyle(\n                    fontSize: 20,\n                    fontWeight: FontWeight.bold,\n                    color: Colors.grey[700],\n                  ),\n                ),\n                const SizedBox(height: 8),\n                Text(\n                  data['subtitle'],\n                  style: TextStyle(fontSize: 15, color: Colors.grey[500]),\n                ),\n              ],\n            ),\n          );\n        },\n      ),\n    );\n  }\n\n  /// بناء أيقونة متحركة للحالة الفارغة\n  Widget _buildAnimatedEmptyIcon(\n    IconData icon,\n    Color color,\n    String animationType,\n  ) {\n    switch (animationType) {\n      case 'bounce':\n        return TweenAnimationBuilder<double>(\n          tween: Tween(begin: 0, end: 1),\n          duration: const Duration(seconds: 2),\n          curve: Curves.elasticInOut,\n          builder: (context, value, child) {\n            return Transform.translate(\n              offset: Offset(0, math.sin(value * math.pi * 2) * 10),\n              child: Icon(icon, size: 80, color: color.withOpacity(0.3)),\n            );\n          },\n          onEnd: () {\n            setState(() {});\n          },\n        );\n\n      case 'rotate':\n        return TweenAnimationBuilder<double>(\n          tween: Tween(begin: 0, end: 2 * math.pi),\n          duration: const Duration(seconds: 3),\n          builder: (context, value, child) {\n            return Transform.rotate(\n              angle: value,\n              child: Icon(icon, size: 80, color: color.withOpacity(0.3)),\n            );\n          },\n          onEnd: () {\n            setState(() {});\n          },\n        );\n\n      case 'pulse':\n        return TweenAnimationBuilder<double>(\n          tween: Tween(begin: 0.8, end: 1.2),\n          duration: const Duration(seconds: 1),\n          curve: Curves.easeInOut,\n          builder: (context, value, child) {\n            return Transform.scale(\n              scale: value,\n              child: Icon(icon, size: 80, color: color.withOpacity(0.3)),\n            );\n          },\n          onEnd: () {\n            setState(() {});\n          },\n        );\n\n      default:\n        return Icon(icon, size: 80, color: color.withOpacity(0.3));\n    }\n  }\n\n  /// الانتقال إلى صفحة معاينة الطلب\n  void _navigateToOrderPreview(\n    String orderId,\n    Map<String, dynamic> orderData,\n    Map<String, dynamic> userData,\n  ) {\n    HapticFeedback.lightImpact();\n\n    Get.to(\n      () => OrderPreviewPage(\n        orderId: orderId,\n        orderData: orderData,\n        userData: userData,\n      ),\n      transition: Transition.rightToLeft,\n      duration: const Duration(milliseconds: 300),\n    );\n  }\n}\n"
        }
    ]
}