{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/seller_app_auth/ui/seller_type_selection_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753181638995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753181638995,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:get/get.dart';\nimport '../../../XXX/xxx_firebase.dart';\nimport '../controllers/seller_auth_controller.dart';\nimport '../../../services/gpu_service.dart';\n\nclass SellerTypeSelectionScreen extends GetView<SellerAuthController> {\n  const SellerTypeSelectionScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    // تحسين GPU عند بناء الصفحة بشكل آمن\n    WidgetsBinding.instance.addPostFrameCallback((_) {\n      try {\n        GPUService.optimizeForMaliGPU();\n      } catch (e) {\n        debugPrint(\"GPU Service error: $e\");\n      }\n    });\n\n    // التأكد من تهيئة وحدة التحكم إذا لم تكن قد تهيأت بعد\n    if (!Get.isRegistered<SellerAuthController>()) {\n      debugPrint(\"⚠️ SellerAuthController غير مسجل، جاري التسجيل...\");\n      Get.put(SellerAuthController(), permanent: true);\n    }\n\n    return Scaffold(\n      body: Container(\n        decoration: BoxDecoration(\n          image: DecorationImage(\n            image: AssetImage(ImageX.ImageOfSignUp),\n            fit: BoxFit.cover,\n            colorFilter: ColorFilter.mode(\n              Colors.black.withOpacity(0.4),\n              BlendMode.darken,\n            ),\n          ),\n        ),\n        child: Stack(\n          fit: StackFit.expand,\n          children: <Widget>[\n            Center(\n              child: SingleChildScrollView(\n                padding: const EdgeInsets.all(24.0),\n                child: Column(\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  crossAxisAlignment: CrossAxisAlignment.stretch,\n                  children: <Widget>[\n                    Text(\n                      'اختر نوع حساب البائع',\n                      textAlign: TextAlign.center,\n                      style: TextStyle(\n                        fontSize: 28,\n                        fontWeight: FontWeight.bold,\n                        color:\n                            Colors.white, // لون النص ليتناسب مع الخلفية المعتمة\n                      ),\n                    ),\n                    const SizedBox(height: 40),\n                    ElevatedButton(\n                      style: ElevatedButton.styleFrom(\n                        backgroundColor: Theme.of(context).primaryColor,\n                        padding: const EdgeInsets.symmetric(vertical: 15),\n                        textStyle: const TextStyle(\n                          fontSize: 18,\n                          fontWeight: FontWeight.bold,\n                        ),\n                        shape: RoundedRectangleBorder(\n                          borderRadius: BorderRadius.circular(8),\n                        ),\n                      ),\n                      onPressed: () async {\n                        try {\n                          // تحسين GPU قبل التنقل بشكل آمن\n                          try {\n                            GPUService.handlePageTransition();\n                          } catch (gpuError) {\n                            debugPrint(\"GPU Service error: $gpuError\");\n                          }\n\n                          await Future.delayed(Duration(milliseconds: 100));\n\n                          // التأكد من وجود الكنترولر قبل الاستخدام\n                          final authController =\n                              Get.find<SellerAuthController>();\n                          await authController.selectSellerTypeAndNavigate(\n                            'wholesale',\n                          );\n                        } catch (e) {\n                          debugPrint(\"خطأ في اختيار نوع البائع: $e\");\n                          Get.snackbar(\n                            'خطأ',\n                            'حدث خطأ أثناء المعالجة، يرجى المحاولة مرة أخرى',\n                            snackPosition: SnackPosition.TOP,\n                            backgroundColor: Colors.red.withOpacity(0.1),\n                            colorText: Colors.red,\n                          );\n                        }\n                      },\n                      child: const Text(\n                        'بائع جملة',\n                        style: TextStyle(color: Colors.white),\n                      ),\n                    ),\n                    const SizedBox(height: 20),\n                    ElevatedButton(\n                      style: ElevatedButton.styleFrom(\n                        backgroundColor:\n                            Theme.of(context).colorScheme.secondary,\n                        padding: const EdgeInsets.symmetric(vertical: 15),\n                        textStyle: const TextStyle(\n                          fontSize: 18,\n                          fontWeight: FontWeight.bold,\n                        ),\n                        shape: RoundedRectangleBorder(\n                          borderRadius: BorderRadius.circular(8),\n                        ),\n                      ),\n                      onPressed: () async {\n                        try {\n                          // تحسين GPU قبل التنقل بشكل آمن\n                          try {\n                            GPUService.handlePageTransition();\n                          } catch (gpuError) {\n                            debugPrint(\"GPU Service error: $gpuError\");\n                          }\n\n                          await Future.delayed(Duration(milliseconds: 100));\n\n                          // التأكد من وجود الكنترولر قبل الاستخدام\n                          final authController =\n                              Get.find<SellerAuthController>();\n                          await authController.selectSellerTypeAndNavigate(\n                            'retail',\n                          );\n                        } catch (e) {\n                          debugPrint(\"خطأ في اختيار نوع البائع: $e\");\n                          Get.snackbar(\n                            'خطأ',\n                            'حدث خطأ أثناء المعالجة، يرجى المحاولة مرة أخرى',\n                            snackPosition: SnackPosition.TOP,\n                            backgroundColor: Colors.red.withOpacity(0.1),\n                            colorText: Colors.red,\n                          );\n                        }\n                      },\n                      child: const Text(\n                        'بائع تجزئة',\n                        style: TextStyle(color: Colors.white),\n                      ),\n                    ),\n                    const SizedBox(height: 30),\n                    TextButton(\n                      onPressed: () async {\n                        try {\n                          // تحسين GPU قبل الرجوع بشكل آمن\n                          try {\n                            GPUService.handlePageTransition();\n                          } catch (gpuError) {\n                            debugPrint(\"GPU Service error: $gpuError\");\n                          }\n\n                          await Future.delayed(Duration(milliseconds: 100));\n\n                          // يمكن إضافة انتقال للرجوع أو إلى شاشة تسجيل الدخول\n                          if (Get.previousRoute.isNotEmpty) {\n                            Get.back();\n                          } else {\n                            // Get.offAll(() => SellerLoginScreen()); // مثال\n                          }\n                        } catch (e) {\n                          debugPrint(\"خطأ في الرجوع: $e\");\n                          Get.back(); // رجوع بسيط في حالة الخطأ\n                        }\n                      },\n                      child: Text(\n                        'الرجوع',\n                        style: TextStyle(\n                          color: Colors.white.withOpacity(0.8),\n                          fontSize: 16,\n                        ),\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}