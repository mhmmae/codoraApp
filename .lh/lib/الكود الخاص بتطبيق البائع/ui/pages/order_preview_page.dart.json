{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/ui/pages/order_preview_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1752751503157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753183783749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\n import 'package:flutter/services.dart';\n+import 'package:flutter_screenutil/flutter_screenutil.dart';\n import 'package:get/get.dart';\n import 'package:cloud_firestore/cloud_firestore.dart';\n \n import '../../controllers/orders_controller.dart';\n@@ -35,8 +36,29 @@\n   bool _isLoading = false;\n   List<Map<String, dynamic>> _orderItems = [];\n   double _totalPrice = 0.0;\n \n+  /// تحديد حالة الطلب الحالية\n+  OrderStatus get _orderStatus {\n+    final statusString = widget.orderData['orderStatus'] ?? 'pending';\n+    switch (statusString) {\n+      case 'pending':\n+        return OrderStatus.pending;\n+      case 'accepted':\n+        return OrderStatus.accepted;\n+      case 'readyForPickup':\n+        return OrderStatus.readyForPickup;\n+      case 'pickedUp':\n+        return OrderStatus.pickedUp;\n+      case 'delivered':\n+        return OrderStatus.delivered;\n+      case 'cancelled':\n+        return OrderStatus.cancelled;\n+      default:\n+        return OrderStatus.pending;\n+    }\n+  }\n+\n   @override\n   void initState() {\n     super.initState();\n \n@@ -171,47 +193,45 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n-    final size = MediaQuery.of(context).size;\n-\n     return Scaffold(\n       backgroundColor: Colors.grey[50],\n       body: CustomScrollView(\n         slivers: [\n           // App Bar متحرك\n-          _buildAnimatedAppBar(size),\n+          _buildAnimatedAppBar(),\n \n           // محتوى الصفحة\n           SliverToBoxAdapter(\n             child: FadeTransition(\n               opacity: _fadeAnimation,\n               child: SlideTransition(\n                 position: _slideAnimation,\n                 child: Padding(\n-                  padding: const EdgeInsets.all(16),\n+                  padding: EdgeInsets.all(16.w),\n                   child: Column(\n                     crossAxisAlignment: CrossAxisAlignment.start,\n                     children: [\n                       // معلومات العميل\n-                      _buildCustomerInfo(size),\n-                      const SizedBox(height: 24),\n+                      _buildCustomerInfo(),\n+                      SizedBox(height: 24.h),\n \n                       // معلومات الطلب\n-                      _buildOrderInfo(size),\n-                      const SizedBox(height: 24),\n+                      _buildOrderInfo(),\n+                      SizedBox(height: 24.h),\n \n                       // قائمة المنتجات\n-                      _buildProductsList(size),\n-                      const SizedBox(height: 24),\n+                      _buildProductsList(),\n+                      SizedBox(height: 24.h),\n \n                       // ملخص السعر\n-                      _buildPriceSummary(size),\n-                      const SizedBox(height: 32),\n+                      _buildPriceSummary(),\n+                      SizedBox(height: 32.h),\n \n                       // أزرار الإجراءات\n-                      _buildActionButtons(size),\n-                      const SizedBox(height: 32),\n+                      _buildActionButtons(),\n+                      SizedBox(height: 32.h),\n                     ],\n                   ),\n                 ),\n               ),\n@@ -222,19 +242,19 @@\n     );\n   }\n \n   /// بناء App Bar متحرك\n-  Widget _buildAnimatedAppBar(Size size) {\n+  Widget _buildAnimatedAppBar() {\n     return SliverAppBar(\n-      expandedHeight: 200,\n+      expandedHeight: 200.h,\n       floating: false,\n       pinned: true,\n       stretch: true,\n       backgroundColor: Theme.of(context).primaryColor,\n       flexibleSpace: FlexibleSpaceBar(\n-        title: const Text(\n+        title: Text(\n           'معاينة الطلب',\n-          style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n+          style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),\n         ),\n         background: Container(\n           decoration: BoxDecoration(\n             gradient: LinearGradient(\n@@ -252,25 +272,25 @@\n               child: Column(\n                 mainAxisAlignment: MainAxisAlignment.center,\n                 children: [\n                   Container(\n-                    padding: const EdgeInsets.all(20),\n+                    padding: EdgeInsets.all(20.w),\n                     decoration: BoxDecoration(\n                       color: Colors.white.withOpacity(0.2),\n                       shape: BoxShape.circle,\n                     ),\n-                    child: const Icon(\n+                    child: Icon(\n                       Icons.receipt_long,\n-                      size: 50,\n+                      size: 50.sp,\n                       color: Colors.white,\n                     ),\n                   ),\n-                  const SizedBox(height: 16),\n+                  SizedBox(height: 16.h),\n                   Text(\n                     'طلب #${widget.orderData['numberOfOrder']}',\n-                    style: const TextStyle(\n+                    style: TextStyle(\n                       color: Colors.white,\n-                      fontSize: 24,\n+                      fontSize: 24.sp,\n                       fontWeight: FontWeight.bold,\n                     ),\n                   ),\n                 ],\n@@ -289,19 +309,19 @@\n     );\n   }\n \n   /// بناء معلومات العميل\n-  Widget _buildCustomerInfo(Size size) {\n+  Widget _buildCustomerInfo() {\n     return Container(\n-      padding: const EdgeInsets.all(16),\n+      padding: EdgeInsets.all(16.w),\n       decoration: BoxDecoration(\n         color: Colors.white,\n-        borderRadius: BorderRadius.circular(16),\n+        borderRadius: BorderRadius.circular(16.r),\n         boxShadow: [\n           BoxShadow(\n             color: Colors.black.withOpacity(0.05),\n-            blurRadius: 10,\n-            offset: const Offset(0, 5),\n+            blurRadius: 10.r,\n+            offset: Offset(0, 5.h),\n           ),\n         ],\n       ),\n       child: Row(\n@@ -309,10 +329,10 @@\n           // صورة العميل\n           Hero(\n             tag: 'user_${widget.orderId}',\n             child: Container(\n-              width: 70,\n-              height: 70,\n+              width: 70.w,\n+              height: 70.h,\n               decoration: BoxDecoration(\n                 shape: BoxShape.circle,\n                 border: Border.all(\n                   color: Theme.of(context).primaryColor.withOpacity(0.3),\n@@ -324,18 +344,18 @@\n                 ),\n               ),\n             ),\n           ),\n-          const SizedBox(width: 16),\n+          SizedBox(width: 16.w),\n           // معلومات العميل\n           Expanded(\n             child: Column(\n               crossAxisAlignment: CrossAxisAlignment.start,\n               children: [\n                 Text(\n                   widget.userData['name'] ?? 'عميل',\n-                  style: const TextStyle(\n-                    fontSize: 18,\n+                  style: TextStyle(\n+                    fontSize: 18.sp,\n                     fontWeight: FontWeight.bold,\n                   ),\n                   overflow: TextOverflow.ellipsis,\n                   maxLines: 1,\n@@ -348,18 +368,18 @@\n     );\n   }\n \n   /// بناء معلومات الطلب\n-  Widget _buildOrderInfo(Size size) {\n+  Widget _buildOrderInfo() {\n     return Container(\n-      padding: const EdgeInsets.all(16),\n+      padding: EdgeInsets.all(16.w),\n       decoration: BoxDecoration(\n         gradient: LinearGradient(\n           colors: [Colors.blue.withOpacity(0.1), Colors.blue.withOpacity(0.05)],\n           begin: Alignment.topLeft,\n           end: Alignment.bottomRight,\n         ),\n-        borderRadius: BorderRadius.circular(16),\n+        borderRadius: BorderRadius.circular(16.r),\n         border: Border.all(color: Colors.blue.withOpacity(0.2), width: 1),\n       ),\n       child: Column(\n         children: [\n@@ -373,9 +393,9 @@\n                   widget.orderData['timeOrder'],\n                 ),\n                 color: Colors.blue,\n               ),\n-              Container(height: 40, width: 1, color: Colors.grey[300]),\n+              Container(height: 40.h, width: 1, color: Colors.grey[300]),\n               _buildInfoItem(\n                 icon: Icons.shopping_basket,\n                 label: 'عدد المنتجات',\n                 value: '${_orderItems.length}',\n@@ -396,15 +416,15 @@\n     required Color color,\n   }) {\n     return Column(\n       children: [\n-        Icon(icon, color: color, size: 24),\n-        const SizedBox(height: 4),\n-        Text(label, style: TextStyle(fontSize: 12, color: Colors.grey[600])),\n+        Icon(icon, color: color, size: 24.sp),\n+        SizedBox(height: 4.h),\n+        Text(label, style: TextStyle(fontSize: 12.sp, color: Colors.grey[600])),\n         Text(\n           value,\n           style: TextStyle(\n-            fontSize: 14,\n+            fontSize: 14.sp,\n             fontWeight: FontWeight.bold,\n             color: Colors.grey[800],\n           ),\n         ),\n@@ -412,41 +432,42 @@\n     );\n   }\n \n   /// بناء قائمة المنتجات\n-  Widget _buildProductsList(Size size) {\n+  Widget _buildProductsList() {\n     return Column(\n       crossAxisAlignment: CrossAxisAlignment.start,\n       children: [\n         Row(\n           mainAxisAlignment: MainAxisAlignment.spaceBetween,\n           children: [\n-            const Text(\n+            Text(\n               'المنتجات المطلوبة',\n-              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n+              style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),\n             ),\n             Container(\n-              padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n+              padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),\n               decoration: BoxDecoration(\n                 color: Theme.of(context).primaryColor.withOpacity(0.1),\n-                borderRadius: BorderRadius.circular(20),\n+                borderRadius: BorderRadius.circular(20.r),\n               ),\n               child: Text(\n                 '${_orderItems.length} منتج',\n                 style: TextStyle(\n                   color: Theme.of(context).primaryColor,\n                   fontWeight: FontWeight.bold,\n+                  fontSize: 14.sp,\n                 ),\n               ),\n             ),\n           ],\n         ),\n-        const SizedBox(height: 16),\n+        SizedBox(height: 16.h),\n \n         if (_isLoading)\n           Center(\n             child: Container(\n-              padding: const EdgeInsets.all(40),\n+              padding: EdgeInsets.all(40.w),\n               child: const CircularProgressIndicator(),\n             ),\n           )\n         else\n@@ -472,9 +493,9 @@\n                 return Transform.scale(\n                   scale: animation.value,\n                   child: FadeTransition(\n                     opacity: animation,\n-                    child: _buildProductItem(item, size),\n+                    child: _buildProductItem(item),\n                   ),\n                 );\n               },\n             );\n@@ -483,31 +504,31 @@\n     );\n   }\n \n   /// بناء عنصر منتج\n-  Widget _buildProductItem(Map<String, dynamic> item, Size size) {\n+  Widget _buildProductItem(Map<String, dynamic> item) {\n     return Container(\n-      margin: const EdgeInsets.only(bottom: 12),\n-      padding: const EdgeInsets.all(12),\n+      margin: EdgeInsets.only(bottom: 12.h),\n+      padding: EdgeInsets.all(12.w),\n       decoration: BoxDecoration(\n         color: Colors.white,\n-        borderRadius: BorderRadius.circular(16),\n+        borderRadius: BorderRadius.circular(16.r),\n         boxShadow: [\n           BoxShadow(\n             color: Colors.black.withOpacity(0.05),\n-            blurRadius: 10,\n-            offset: const Offset(0, 5),\n+            blurRadius: 10.r,\n+            offset: Offset(0, 5.h),\n           ),\n         ],\n       ),\n       child: Row(\n         children: [\n           // صورة المنتج\n           Container(\n-            width: 80,\n-            height: 80,\n+            width: 80.w,\n+            height: 80.h,\n             decoration: BoxDecoration(\n-              borderRadius: BorderRadius.circular(12),\n+              borderRadius: BorderRadius.circular(12.r),\n               image: DecorationImage(\n                 fit: BoxFit.cover,\n                 image: NetworkImage(item['imageUrl']),\n               ),\n@@ -516,127 +537,130 @@\n                 item['isOffer']\n                     ? Align(\n                       alignment: Alignment.topRight,\n                       child: Container(\n-                        padding: const EdgeInsets.all(4),\n+                        padding: EdgeInsets.all(4.w),\n                         decoration: BoxDecoration(\n                           color: Colors.red,\n-                          borderRadius: const BorderRadius.only(\n-                            topRight: Radius.circular(12),\n-                            bottomLeft: Radius.circular(12),\n+                          borderRadius: BorderRadius.only(\n+                            topRight: Radius.circular(12.r),\n+                            bottomLeft: Radius.circular(12.r),\n                           ),\n                         ),\n-                        child: const Text(\n+                        child: Text(\n                           'عرض',\n                           style: TextStyle(\n                             color: Colors.white,\n-                            fontSize: 10,\n+                            fontSize: 10.sp,\n                             fontWeight: FontWeight.bold,\n                           ),\n                         ),\n                       ),\n                     )\n                     : null,\n           ),\n-          const SizedBox(width: 12),\n+          SizedBox(width: 12.w),\n           // معلومات المنتج\n           Expanded(\n             child: Column(\n               crossAxisAlignment: CrossAxisAlignment.start,\n               children: [\n                 Text(\n                   item['name'],\n-                  style: const TextStyle(\n-                    fontSize: 16,\n+                  style: TextStyle(\n+                    fontSize: 16.sp,\n                     fontWeight: FontWeight.bold,\n                   ),\n                   maxLines: 2,\n                   overflow: TextOverflow.ellipsis,\n                 ),\n-                const SizedBox(height: 8),\n+                SizedBox(height: 8.h),\n                 Container(\n-                  padding: const EdgeInsets.symmetric(\n-                    horizontal: 12,\n-                    vertical: 4,\n+                  padding: EdgeInsets.symmetric(\n+                    horizontal: 12.w,\n+                    vertical: 4.h,\n                   ),\n                   decoration: BoxDecoration(\n                     color: Colors.orange.withOpacity(0.1),\n-                    borderRadius: BorderRadius.circular(8),\n+                    borderRadius: BorderRadius.circular(8.r),\n                     border: Border.all(\n                       color: Colors.orange.withOpacity(0.3),\n-                      width: 1,\n+                      width: 1.w,\n                     ),\n                   ),\n                   child: Row(\n                     mainAxisSize: MainAxisSize.min,\n                     children: [\n                       Icon(\n                         Icons.shopping_cart,\n-                        size: 16,\n+                        size: 16.sp,\n                         color: Colors.orange[700],\n                       ),\n-                      const SizedBox(width: 4),\n+                      SizedBox(width: 4.w),\n                       Text(\n                         'الكمية المطلوبة: ${item['quantity']}',\n                         style: TextStyle(\n-                          fontSize: 14,\n+                          fontSize: 14.sp,\n                           fontWeight: FontWeight.bold,\n                           color: Colors.orange[700],\n                         ),\n                       ),\n                     ],\n                   ),\n                 ),\n-                const SizedBox(height: 4),\n+                SizedBox(height: 4.h),\n                 Row(\n                   children: [\n                     Text(\n                       'السعر: ${item['price']} ${FirebaseX.currency}',\n-                      style: TextStyle(fontSize: 13, color: Colors.grey[700]),\n+                      style: TextStyle(\n+                        fontSize: 13.sp,\n+                        color: Colors.grey[700],\n+                      ),\n                     ),\n-                    const SizedBox(width: 8),\n+                    SizedBox(width: 8.w),\n                     // عرض نوع السعر\n                     if (item['priceType'] == 'wholesale')\n                       Container(\n-                        padding: const EdgeInsets.symmetric(\n-                          horizontal: 6,\n-                          vertical: 2,\n+                        padding: EdgeInsets.symmetric(\n+                          horizontal: 6.w,\n+                          vertical: 2.h,\n                         ),\n                         decoration: BoxDecoration(\n                           color: Colors.orange.withOpacity(0.1),\n-                          borderRadius: BorderRadius.circular(4),\n+                          borderRadius: BorderRadius.circular(4.r),\n                           border: Border.all(\n                             color: Colors.orange.withOpacity(0.3),\n-                            width: 0.5,\n+                            width: 0.5.w,\n                           ),\n                         ),\n                         child: Text(\n                           'جملة',\n                           style: TextStyle(\n-                            fontSize: 10,\n+                            fontSize: 10.sp,\n                             fontWeight: FontWeight.bold,\n                             color: Colors.orange[700],\n                           ),\n                         ),\n                       )\n                     else\n                       Container(\n-                        padding: const EdgeInsets.symmetric(\n-                          horizontal: 6,\n-                          vertical: 2,\n+                        padding: EdgeInsets.symmetric(\n+                          horizontal: 6.w,\n+                          vertical: 2.h,\n                         ),\n                         decoration: BoxDecoration(\n                           color: Colors.blue.withOpacity(0.1),\n-                          borderRadius: BorderRadius.circular(4),\n+                          borderRadius: BorderRadius.circular(4.r),\n                           border: Border.all(\n                             color: Colors.blue.withOpacity(0.3),\n-                            width: 0.5,\n+                            width: 0.5.w,\n                           ),\n                         ),\n                         child: Text(\n                           'تجزئة',\n                           style: TextStyle(\n-                            fontSize: 10,\n+                            fontSize: 10.sp,\n                             fontWeight: FontWeight.bold,\n                             color: Colors.blue[700],\n                           ),\n                         ),\n@@ -647,18 +671,19 @@\n             ),\n           ),\n           // السعر الإجمالي للمنتج\n           Container(\n-            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n+            padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),\n             decoration: BoxDecoration(\n               color: Theme.of(context).primaryColor.withOpacity(0.1),\n-              borderRadius: BorderRadius.circular(8),\n+              borderRadius: BorderRadius.circular(8.r),\n             ),\n             child: Text(\n               '${item['total']} ${FirebaseX.currency}',\n               style: TextStyle(\n                 color: Theme.of(context).primaryColor,\n                 fontWeight: FontWeight.bold,\n+                fontSize: 14.sp,\n               ),\n             ),\n           ),\n         ],\n@@ -666,11 +691,11 @@\n     );\n   }\n \n   /// بناء ملخص السعر\n-  Widget _buildPriceSummary(Size size) {\n+  Widget _buildPriceSummary() {\n     return Container(\n-      padding: const EdgeInsets.all(16),\n+      padding: EdgeInsets.all(16.w),\n       decoration: BoxDecoration(\n         gradient: LinearGradient(\n           colors: [\n             Colors.green.withOpacity(0.1),\n@@ -678,81 +703,138 @@\n           ],\n           begin: Alignment.topLeft,\n           end: Alignment.bottomRight,\n         ),\n-        borderRadius: BorderRadius.circular(16),\n-        border: Border.all(color: Colors.green.withOpacity(0.2), width: 1),\n+        borderRadius: BorderRadius.circular(16.r),\n+        border: Border.all(color: Colors.green.withOpacity(0.2), width: 1.w),\n       ),\n       child: Column(\n         children: [\n           Row(\n             mainAxisAlignment: MainAxisAlignment.spaceBetween,\n             children: [\n-              const Text(\n+              Text(\n                 'المجموع الكلي',\n-                style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500),\n+                style: TextStyle(fontSize: 16.sp, fontWeight: FontWeight.w500),\n               ),\n               TweenAnimationBuilder<double>(\n                 tween: Tween(begin: 0, end: _totalPrice),\n                 duration: const Duration(milliseconds: 1000),\n                 curve: Curves.easeOutBack,\n                 builder: (context, value, child) {\n                   return Text(\n                     '${value.toStringAsFixed(0)} ${FirebaseX.currency}',\n-                    style: const TextStyle(\n-                      fontSize: 24,\n+                    style: TextStyle(\n+                      fontSize: 24.sp,\n                       fontWeight: FontWeight.bold,\n                       color: Colors.green,\n                     ),\n                   );\n                 },\n               ),\n             ],\n           ),\n-          const SizedBox(height: 8),\n+          SizedBox(height: 8.h),\n           // يمكن إضافة تفاصيل أخرى مثل رسوم التوصيل هنا\n         ],\n       ),\n     );\n   }\n \n   /// بناء أزرار الإجراءات\n-  Widget _buildActionButtons(Size size) {\n-    return Row(\n-      children: [\n-        // زر الرفض\n-        Expanded(\n-          child: _buildAnimatedButton(\n-            onPressed: () {\n-              HapticFeedback.mediumImpact();\n-              _showRejectDialog();\n-            },\n-            label: 'رفض',\n-            icon: Icons.close,\n-            color: Colors.red,\n-            isOutlined: true,\n+  Widget _buildActionButtons() {\n+    // تحديد الأزرار بناءً على حالة الطلب\n+    switch (_orderStatus) {\n+      case OrderStatus.pending:\n+        // الطلبات الجديدة: زر قبول وزر رفض\n+        return Row(\n+          children: [\n+            // زر الرفض\n+            Expanded(\n+              child: _buildAnimatedButton(\n+                onPressed: () {\n+                  HapticFeedback.mediumImpact();\n+                  _showRejectDialog();\n+                },\n+                label: 'رفض',\n+                icon: Icons.close,\n+                color: Colors.red,\n+                isOutlined: true,\n+              ),\n+            ),\n+            SizedBox(width: 16.w),\n+            // زر القبول\n+            Expanded(\n+              flex: 2,\n+              child: _buildAnimatedButton(\n+                onPressed:\n+                    _isLoading\n+                        ? null\n+                        : () {\n+                          HapticFeedback.lightImpact();\n+                          _acceptOrder();\n+                        },\n+                label: 'قبول الطلب',\n+                icon: Icons.check_circle,\n+                color: Colors.green,\n+                isGradient: true,\n+              ),\n+            ),\n+          ],\n+        );\n+\n+      case OrderStatus.accepted:\n+        // الطلبات المقبولة (قيد التحضير): زر \"الطلب جاهز\"\n+        return Row(\n+          children: [\n+            Expanded(\n+              child: _buildAnimatedButton(\n+                onPressed:\n+                    _isLoading\n+                        ? null\n+                        : () {\n+                          HapticFeedback.lightImpact();\n+                          _markOrderReady();\n+                        },\n+                label: 'الطلب جاهز',\n+                icon: Icons.check_circle_outline,\n+                color: Colors.blue,\n+                isGradient: true,\n+              ),\n+            ),\n+          ],\n+        );\n+\n+      case OrderStatus.readyForPickup:\n+        // الطلبات الجاهزة: لا توجد أزرار\n+        return Container(\n+          padding: EdgeInsets.all(16.w),\n+          decoration: BoxDecoration(\n+            color: Colors.green.withOpacity(0.1),\n+            borderRadius: BorderRadius.circular(16.r),\n+            border: Border.all(color: Colors.green.withOpacity(0.3)),\n           ),\n-        ),\n-        const SizedBox(width: 16),\n-        // زر القبول\n-        Expanded(\n-          flex: 2,\n-          child: _buildAnimatedButton(\n-            onPressed:\n-                _isLoading\n-                    ? null\n-                    : () {\n-                      HapticFeedback.lightImpact();\n-                      _acceptOrder();\n-                    },\n-            label: 'قبول الطلب',\n-            icon: Icons.check_circle,\n-            color: Colors.green,\n-            isGradient: true,\n+          child: Row(\n+            mainAxisAlignment: MainAxisAlignment.center,\n+            children: [\n+              Icon(Icons.check_circle, color: Colors.green, size: 24.sp),\n+              SizedBox(width: 8.w),\n+              Text(\n+                'الطلب جاهز للاستلام',\n+                style: TextStyle(\n+                  color: Colors.green,\n+                  fontWeight: FontWeight.bold,\n+                  fontSize: 16.sp,\n+                ),\n+              ),\n+            ],\n           ),\n-        ),\n-      ],\n-    );\n+        );\n+\n+      default:\n+        // للطلبات الأخرى: لا توجد أزرار\n+        return const SizedBox.shrink();\n+    }\n   }\n \n   /// بناء زر متحرك\n   Widget _buildAnimatedButton({\n@@ -769,9 +851,9 @@\n       builder: (context, value, child) {\n         return Transform.scale(\n           scale: value,\n           child: Container(\n-            height: 56,\n+            height: 56.h,\n             decoration: BoxDecoration(\n               gradient:\n                   isGradient && !isOutlined\n                       ? LinearGradient(\n@@ -780,43 +862,43 @@\n                         end: Alignment.bottomRight,\n                       )\n                       : null,\n               color: isOutlined ? null : (isGradient ? null : color),\n-              borderRadius: BorderRadius.circular(16),\n-              border: isOutlined ? Border.all(color: color, width: 2) : null,\n+              borderRadius: BorderRadius.circular(16.r),\n+              border: isOutlined ? Border.all(color: color, width: 2.w) : null,\n               boxShadow:\n                   !isOutlined\n                       ? [\n                         BoxShadow(\n                           color: color.withOpacity(0.3),\n-                          blurRadius: 10,\n-                          offset: const Offset(0, 5),\n+                          blurRadius: 10.r,\n+                          offset: Offset(0, 5.h),\n                         ),\n                       ]\n                       : null,\n             ),\n             child: Material(\n               color: Colors.transparent,\n               child: InkWell(\n                 onTap: onPressed,\n-                borderRadius: BorderRadius.circular(16),\n+                borderRadius: BorderRadius.circular(16.r),\n                 child: Container(\n-                  padding: const EdgeInsets.symmetric(horizontal: 20),\n+                  padding: EdgeInsets.symmetric(horizontal: 20.w),\n                   child: Row(\n                     mainAxisAlignment: MainAxisAlignment.center,\n                     children: [\n                       Icon(\n                         icon,\n                         color: isOutlined ? color : Colors.white,\n-                        size: 24,\n+                        size: 24.sp,\n                       ),\n-                      const SizedBox(width: 8),\n+                      SizedBox(width: 8.w),\n                       Text(\n                         label,\n                         style: TextStyle(\n                           color: isOutlined ? color : Colors.white,\n                           fontWeight: FontWeight.bold,\n-                          fontSize: 16,\n+                          fontSize: 16.sp,\n                         ),\n                       ),\n                     ],\n                   ),\n@@ -858,8 +940,38 @@\n       );\n     }\n   }\n \n+  /// تحديد الطلب كجاهز للاستلام\n+  Future<void> _markOrderReady() async {\n+    setState(() => _isLoading = true);\n+\n+    try {\n+      final ordersController = Get.find<OrdersController>();\n+      await ordersController.markOrderReady(widget.orderId);\n+\n+      // إغلاق الصفحة والعودة\n+      Get.back();\n+      Get.back(); // للعودة من bottom sheet أيضاً إذا كان مفتوحاً\n+\n+      Get.snackbar(\n+        '📦 الطلب جاهز!',\n+        'تم تحديد الطلب كجاهز للاستلام من قبل عامل التوصيل',\n+        backgroundColor: Colors.blue.withOpacity(0.1),\n+        colorText: Colors.blue,\n+        duration: const Duration(seconds: 3),\n+      );\n+    } catch (e) {\n+      setState(() => _isLoading = false);\n+      Get.snackbar(\n+        '❌ خطأ',\n+        'فشل في تحديث حالة الطلب، حاول مرة أخرى',\n+        backgroundColor: Colors.red.withOpacity(0.1),\n+        colorText: Colors.red,\n+      );\n+    }\n+  }\n+\n   /// عرض حوار الرفض\n   void _showRejectDialog() {\n     Get.dialog(\n       AlertDialog(\n"
                },
                {
                    "date": 1753238043449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,59 @@\n         return OrderStatus.pending;\n     }\n   }\n \n+  /// تحديد نوع الطلب (جملة أو تجزئة)\n+  Map<String, dynamic> _getOrderTypeInfo() {\n+    final orderType = widget.orderData['orderType'] ?? '';\n+    final buyerType = widget.orderData['buyerType'] ?? '';\n+    final source = widget.orderData['source'] ?? '';\n+\n+    // تحديد نوع الطلب\n+    bool isRetail = false;\n+\n+    // طلبات التجزئة من تطبيق العميل\n+    if (orderType == 'retail' ||\n+        buyerType == 'customer' ||\n+        source == 'customer_app' ||\n+        orderType == 'customer_order') {\n+      isRetail = true;\n+    }\n+    // طلبات الجملة من تطبيق البائع\n+    else if (orderType == 'wholesale' ||\n+        buyerType == 'retailer' ||\n+        source == 'seller_app' ||\n+        orderType == 'wholesale_to_retail') {\n+      isRetail = false;\n+    }\n+    // افتراضي: إذا لم نتمكن من تحديد النوع نعتبره تجزئة\n+    else {\n+      isRetail = true;\n+    }\n+\n+    if (isRetail) {\n+      return {\n+        'type': 'retail',\n+        'label': 'تجزئة',\n+        'icon': Icons.person,\n+        'color': Colors.blue,\n+        'bgColor': Colors.blue.withOpacity(0.1),\n+        'borderColor': Colors.blue.withOpacity(0.3),\n+        'description': 'طلب من العميل',\n+      };\n+    } else {\n+      return {\n+        'type': 'wholesale',\n+        'label': 'جملة',\n+        'icon': Icons.business,\n+        'color': Colors.orange,\n+        'bgColor': Colors.orange.withOpacity(0.1),\n+        'borderColor': Colors.orange.withOpacity(0.3),\n+        'description': 'طلب من البائع',\n+      };\n+    }\n+  }\n+\n   @override\n   void initState() {\n     super.initState();\n \n@@ -137,24 +188,14 @@\n \n         if (productDoc.exists) {\n           final productData = productDoc.data()!;\n \n-          // تحديد السعر المناسب حسب نوع الطلب\n-          double price;\n-          final orderType = widget.orderData['orderType'] ?? '';\n-          final buyerType = widget.orderData['buyerType'] ?? '';\n+          // استخدام السعر من ItemModel بشكل موحد لكلا نوعي الطلبات\n+          double price =\n+              (productData['price'] as num?)?.toDouble() ??\n+              (productData['priceOfItem'] as num?)?.toDouble() ??\n+              0.0;\n \n-          if (orderType == 'wholesale_to_retail' || buyerType == 'retailer') {\n-            // إذا كان طلب جملة لتجزئة، استخدم سعر الجملة\n-            price = (productData['priceOfItem'] as num?)?.toDouble() ?? 0.0;\n-          } else {\n-            // للطلبات العادية، استخدم سعر التجزئة المقترح\n-            price =\n-                (productData['suggestedRetailPrice'] as num?)?.toDouble() ??\n-                (productData['priceOfItem'] as num?)?.toDouble() ??\n-                0.0;\n-          }\n-\n           final itemTotal = price * quantity;\n           total += itemTotal;\n \n           items.add({\n@@ -163,12 +204,9 @@\n             'quantity': quantity,\n             'total': itemTotal,\n             'imageUrl': productData['url'] ?? '',\n             'isOffer': isOffer,\n-            'priceType':\n-                orderType == 'wholesale_to_retail' || buyerType == 'retailer'\n-                    ? 'wholesale'\n-                    : 'retail',\n+            'priceType': 'unified', // نوع سعر موحد\n           });\n         }\n       }\n \n@@ -243,14 +281,17 @@\n   }\n \n   /// بناء App Bar متحرك\n   Widget _buildAnimatedAppBar() {\n+    final orderTypeInfo = _getOrderTypeInfo();\n+    final typeColor = orderTypeInfo['color'] as Color;\n+\n     return SliverAppBar(\n-      expandedHeight: 200.h,\n+      expandedHeight: 250.h, // زيادة الارتفاع لإضافة نوع الطلب\n       floating: false,\n       pinned: true,\n       stretch: true,\n-      backgroundColor: Theme.of(context).primaryColor,\n+      backgroundColor: typeColor,\n       flexibleSpace: FlexibleSpaceBar(\n         title: Text(\n           'معاينة الطلب',\n           style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),\n@@ -259,38 +300,84 @@\n           decoration: BoxDecoration(\n             gradient: LinearGradient(\n               begin: Alignment.topLeft,\n               end: Alignment.bottomRight,\n-              colors: [\n-                Theme.of(context).primaryColor,\n-                Theme.of(context).primaryColor.withOpacity(0.7),\n-              ],\n+              colors: [typeColor, typeColor.withOpacity(0.7)],\n             ),\n           ),\n           child: Center(\n             child: ScaleTransition(\n               scale: _scaleAnimation,\n               child: Column(\n                 mainAxisAlignment: MainAxisAlignment.center,\n                 children: [\n+                  // شعار نوع الطلب\n                   Container(\n                     padding: EdgeInsets.all(20.w),\n                     decoration: BoxDecoration(\n                       color: Colors.white.withOpacity(0.2),\n                       shape: BoxShape.circle,\n+                      border: Border.all(\n+                        color: Colors.white.withOpacity(0.3),\n+                        width: 2.w,\n+                      ),\n                     ),\n                     child: Icon(\n-                      Icons.receipt_long,\n+                      orderTypeInfo['icon'] as IconData,\n                       size: 50.sp,\n                       color: Colors.white,\n                     ),\n                   ),\n                   SizedBox(height: 16.h),\n+                  // نوع الطلب\n+                  Container(\n+                    padding: EdgeInsets.symmetric(\n+                      horizontal: 20.w,\n+                      vertical: 8.h,\n+                    ),\n+                    decoration: BoxDecoration(\n+                      color: Colors.white.withOpacity(0.2),\n+                      borderRadius: BorderRadius.circular(25.r),\n+                      border: Border.all(\n+                        color: Colors.white.withOpacity(0.3),\n+                        width: 1.w,\n+                      ),\n+                    ),\n+                    child: Row(\n+                      mainAxisSize: MainAxisSize.min,\n+                      children: [\n+                        Icon(\n+                          orderTypeInfo['icon'] as IconData,\n+                          color: Colors.white,\n+                          size: 16.sp,\n+                        ),\n+                        SizedBox(width: 8.w),\n+                        Text(\n+                          orderTypeInfo['label'] as String,\n+                          style: TextStyle(\n+                            color: Colors.white,\n+                            fontWeight: FontWeight.bold,\n+                            fontSize: 16.sp,\n+                          ),\n+                        ),\n+                        SizedBox(width: 4.w),\n+                        Text(\n+                          '• ${orderTypeInfo['description']}',\n+                          style: TextStyle(\n+                            color: Colors.white.withOpacity(0.9),\n+                            fontSize: 14.sp,\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                  ),\n+                  SizedBox(height: 12.h),\n+                  // رقم الطلب\n                   Text(\n                     'طلب #${widget.orderData['numberOfOrder']}',\n                     style: TextStyle(\n-                      color: Colors.white,\n-                      fontSize: 24.sp,\n+                      color: Colors.white.withOpacity(0.9),\n+                      fontSize: 18.sp,\n                       fontWeight: FontWeight.bold,\n                     ),\n                   ),\n                 ],\n@@ -310,16 +397,20 @@\n   }\n \n   /// بناء معلومات العميل\n   Widget _buildCustomerInfo() {\n+    final orderTypeInfo = _getOrderTypeInfo();\n+    final typeColor = orderTypeInfo['color'] as Color;\n+\n     return Container(\n       padding: EdgeInsets.all(16.w),\n       decoration: BoxDecoration(\n         color: Colors.white,\n         borderRadius: BorderRadius.circular(16.r),\n+        border: Border.all(color: typeColor.withOpacity(0.3), width: 2.w),\n         boxShadow: [\n           BoxShadow(\n-            color: Colors.black.withOpacity(0.05),\n+            color: typeColor.withOpacity(0.1),\n             blurRadius: 10.r,\n             offset: Offset(0, 5.h),\n           ),\n         ],\n@@ -333,12 +424,9 @@\n               width: 70.w,\n               height: 70.h,\n               decoration: BoxDecoration(\n                 shape: BoxShape.circle,\n-                border: Border.all(\n-                  color: Theme.of(context).primaryColor.withOpacity(0.3),\n-                  width: 3,\n-                ),\n+                border: Border.all(color: typeColor, width: 3.w),\n                 image: DecorationImage(\n                   fit: BoxFit.cover,\n                   image: NetworkImage(widget.userData['url'] ?? ''),\n                 ),\n@@ -359,8 +447,43 @@\n                   ),\n                   overflow: TextOverflow.ellipsis,\n                   maxLines: 1,\n                 ),\n+                SizedBox(height: 8.h),\n+                // نوع الطلب في معلومات العميل\n+                Container(\n+                  padding: EdgeInsets.symmetric(\n+                    horizontal: 12.w,\n+                    vertical: 6.h,\n+                  ),\n+                  decoration: BoxDecoration(\n+                    color: typeColor.withOpacity(0.1),\n+                    borderRadius: BorderRadius.circular(20.r),\n+                    border: Border.all(\n+                      color: typeColor.withOpacity(0.3),\n+                      width: 1.w,\n+                    ),\n+                  ),\n+                  child: Row(\n+                    mainAxisSize: MainAxisSize.min,\n+                    children: [\n+                      Icon(\n+                        orderTypeInfo['icon'] as IconData,\n+                        color: typeColor,\n+                        size: 16.sp,\n+                      ),\n+                      SizedBox(width: 6.w),\n+                      Text(\n+                        orderTypeInfo['label'] as String,\n+                        style: TextStyle(\n+                          color: typeColor,\n+                          fontWeight: FontWeight.bold,\n+                          fontSize: 14.sp,\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                ),\n               ],\n             ),\n           ),\n         ],\n@@ -433,8 +556,11 @@\n   }\n \n   /// بناء قائمة المنتجات\n   Widget _buildProductsList() {\n+    final orderTypeInfo = _getOrderTypeInfo();\n+    final typeColor = orderTypeInfo['color'] as Color;\n+\n     return Column(\n       crossAxisAlignment: CrossAxisAlignment.start,\n       children: [\n         Row(\n@@ -443,22 +569,62 @@\n             Text(\n               'المنتجات المطلوبة',\n               style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),\n             ),\n-            Container(\n-              padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),\n-              decoration: BoxDecoration(\n-                color: Theme.of(context).primaryColor.withOpacity(0.1),\n-                borderRadius: BorderRadius.circular(20.r),\n-              ),\n-              child: Text(\n-                '${_orderItems.length} منتج',\n-                style: TextStyle(\n-                  color: Theme.of(context).primaryColor,\n-                  fontWeight: FontWeight.bold,\n-                  fontSize: 14.sp,\n+            Row(\n+              children: [\n+                // شارة نوع الطلب\n+                Container(\n+                  padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),\n+                  decoration: BoxDecoration(\n+                    color: typeColor.withOpacity(0.1),\n+                    borderRadius: BorderRadius.circular(15.r),\n+                    border: Border.all(\n+                      color: typeColor.withOpacity(0.3),\n+                      width: 1.w,\n+                    ),\n+                  ),\n+                  child: Row(\n+                    mainAxisSize: MainAxisSize.min,\n+                    children: [\n+                      Icon(\n+                        orderTypeInfo['icon'] as IconData,\n+                        color: typeColor,\n+                        size: 12.sp,\n+                      ),\n+                      SizedBox(width: 4.w),\n+                      Text(\n+                        orderTypeInfo['label'] as String,\n+                        style: TextStyle(\n+                          color: typeColor,\n+                          fontWeight: FontWeight.bold,\n+                          fontSize: 11.sp,\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n                 ),\n-              ),\n+                SizedBox(width: 8.w),\n+                // عدد المنتجات\n+                Container(\n+                  padding: EdgeInsets.symmetric(\n+                    horizontal: 12.w,\n+                    vertical: 6.h,\n+                  ),\n+                  decoration: BoxDecoration(\n+                    color: typeColor.withOpacity(0.1),\n+                    borderRadius: BorderRadius.circular(20.r),\n+                  ),\n+                  child: Text(\n+                    '${_orderItems.length} منتج',\n+                    style: TextStyle(\n+                      color: typeColor,\n+                      fontWeight: FontWeight.bold,\n+                      fontSize: 14.sp,\n+                    ),\n+                  ),\n+                ),\n+              ],\n             ),\n           ],\n         ),\n         SizedBox(height: 16.h),\n@@ -507,9 +673,9 @@\n   /// بناء عنصر منتج\n   Widget _buildProductItem(Map<String, dynamic> item) {\n     return Container(\n       margin: EdgeInsets.only(bottom: 12.h),\n-      padding: EdgeInsets.all(12.w),\n+      padding: EdgeInsets.all(9.w),\n       decoration: BoxDecoration(\n         color: Colors.white,\n         borderRadius: BorderRadius.circular(16.r),\n         boxShadow: [\n@@ -591,16 +757,16 @@\n                     mainAxisSize: MainAxisSize.min,\n                     children: [\n                       Icon(\n                         Icons.shopping_cart,\n-                        size: 16.sp,\n+                        size: 14.sp,\n                         color: Colors.orange[700],\n                       ),\n                       SizedBox(width: 4.w),\n                       Text(\n                         'الكمية المطلوبة: ${item['quantity']}',\n                         style: TextStyle(\n-                          fontSize: 14.sp,\n+                          fontSize: 12.sp,\n                           fontWeight: FontWeight.bold,\n                           color: Colors.orange[700],\n                         ),\n                       ),\n@@ -610,62 +776,17 @@\n                 SizedBox(height: 4.h),\n                 Row(\n                   children: [\n                     Text(\n-                      'السعر: ${item['price']} ${FirebaseX.currency}',\n+                      'السعر: ${item['price'].toInt()} ${FirebaseX.currency}',\n                       style: TextStyle(\n-                        fontSize: 13.sp,\n+                        fontSize: 12.sp,\n                         color: Colors.grey[700],\n                       ),\n                     ),\n-                    SizedBox(width: 8.w),\n-                    // عرض نوع السعر\n-                    if (item['priceType'] == 'wholesale')\n-                      Container(\n-                        padding: EdgeInsets.symmetric(\n-                          horizontal: 6.w,\n-                          vertical: 2.h,\n-                        ),\n-                        decoration: BoxDecoration(\n-                          color: Colors.orange.withOpacity(0.1),\n-                          borderRadius: BorderRadius.circular(4.r),\n-                          border: Border.all(\n-                            color: Colors.orange.withOpacity(0.3),\n-                            width: 0.5.w,\n-                          ),\n-                        ),\n-                        child: Text(\n-                          'جملة',\n-                          style: TextStyle(\n-                            fontSize: 10.sp,\n-                            fontWeight: FontWeight.bold,\n-                            color: Colors.orange[700],\n-                          ),\n-                        ),\n-                      )\n-                    else\n-                      Container(\n-                        padding: EdgeInsets.symmetric(\n-                          horizontal: 6.w,\n-                          vertical: 2.h,\n-                        ),\n-                        decoration: BoxDecoration(\n-                          color: Colors.blue.withOpacity(0.1),\n-                          borderRadius: BorderRadius.circular(4.r),\n-                          border: Border.all(\n-                            color: Colors.blue.withOpacity(0.3),\n-                            width: 0.5.w,\n-                          ),\n-                        ),\n-                        child: Text(\n-                          'تجزئة',\n-                          style: TextStyle(\n-                            fontSize: 10.sp,\n-                            fontWeight: FontWeight.bold,\n-                            color: Colors.blue[700],\n-                          ),\n-                        ),\n-                      ),\n+                    SizedBox(width: 6.w),\n+\n+                    // عرض السعر الإجمالي للمنتج\n                   ],\n                 ),\n               ],\n             ),\n@@ -677,13 +798,13 @@\n               color: Theme.of(context).primaryColor.withOpacity(0.1),\n               borderRadius: BorderRadius.circular(8.r),\n             ),\n             child: Text(\n-              '${item['total']} ${FirebaseX.currency}',\n+              '${item['total'].toInt()} ${FirebaseX.currency}',\n               style: TextStyle(\n                 color: Theme.of(context).primaryColor,\n                 fontWeight: FontWeight.bold,\n-                fontSize: 14.sp,\n+                fontSize: 10.sp,\n               ),\n             ),\n           ),\n         ],\n@@ -692,8 +813,11 @@\n   }\n \n   /// بناء ملخص السعر\n   Widget _buildPriceSummary() {\n+    final orderTypeInfo = _getOrderTypeInfo();\n+    final typeColor = orderTypeInfo['color'] as Color;\n+\n     return Container(\n       padding: EdgeInsets.all(16.w),\n       decoration: BoxDecoration(\n         gradient: LinearGradient(\n@@ -708,22 +832,67 @@\n         border: Border.all(color: Colors.green.withOpacity(0.2), width: 1.w),\n       ),\n       child: Column(\n         children: [\n+          // نوع الطلب في ملخص السعر\n           Row(\n+            mainAxisAlignment: MainAxisAlignment.center,\n+            children: [\n+              Container(\n+                padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),\n+                decoration: BoxDecoration(\n+                  color: typeColor.withOpacity(0.1),\n+                  borderRadius: BorderRadius.circular(20.r),\n+                  border: Border.all(\n+                    color: typeColor.withOpacity(0.3),\n+                    width: 1.w,\n+                  ),\n+                ),\n+                child: Row(\n+                  mainAxisSize: MainAxisSize.min,\n+                  children: [\n+                    Icon(\n+                      orderTypeInfo['icon'] as IconData,\n+                      color: typeColor,\n+                      size: 16.sp,\n+                    ),\n+                    SizedBox(width: 6.w),\n+                    Text(\n+                      'طلب ${orderTypeInfo['label']} - ${orderTypeInfo['description']}',\n+                      style: TextStyle(\n+                        color: typeColor,\n+                        fontWeight: FontWeight.bold,\n+                        fontSize: 12.sp,\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+            ],\n+          ),\n+          SizedBox(height: 16.h),\n+          Row(\n             mainAxisAlignment: MainAxisAlignment.spaceBetween,\n             children: [\n-              Text(\n-                'المجموع الكلي',\n-                style: TextStyle(fontSize: 16.sp, fontWeight: FontWeight.w500),\n+              Column(\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                  Text(\n+                    'المجموع الكلي',\n+                    style: TextStyle(\n+                      fontSize: 16.sp,\n+                      fontWeight: FontWeight.w500,\n+                    ),\n+                  ),\n+                ],\n               ),\n               TweenAnimationBuilder<double>(\n                 tween: Tween(begin: 0, end: _totalPrice),\n                 duration: const Duration(milliseconds: 1000),\n                 curve: Curves.easeOutBack,\n                 builder: (context, value, child) {\n                   return Text(\n-                    '${value.toStringAsFixed(0)} ${FirebaseX.currency}',\n+                    '${value.toInt()} ${FirebaseX.currency}',\n                     style: TextStyle(\n                       fontSize: 24.sp,\n                       fontWeight: FontWeight.bold,\n                       color: Colors.green,\n@@ -918,11 +1087,13 @@\n     try {\n       final ordersController = Get.find<OrdersController>();\n       await ordersController.acceptOrder(widget.orderId);\n \n+      // إعادة تعيين loading قبل الخروج\n+      setState(() => _isLoading = false);\n+\n       // إغلاق الصفحة والعودة\n       Get.back();\n-      Get.back(); // للعودة من bottom sheet أيضاً إذا كان مفتوحاً\n \n       Get.snackbar(\n         '✅ تم قبول الطلب',\n         'يمكنك الآن البدء في تحضير المنتجات',\n@@ -948,11 +1119,13 @@\n     try {\n       final ordersController = Get.find<OrdersController>();\n       await ordersController.markOrderReady(widget.orderId);\n \n+      // إعادة تعيين loading قبل الخروج\n+      setState(() => _isLoading = false);\n+\n       // إغلاق الصفحة والعودة\n       Get.back();\n-      Get.back(); // للعودة من bottom sheet أيضاً إذا كان مفتوحاً\n \n       Get.snackbar(\n         '📦 الطلب جاهز!',\n         'تم تحديد الطلب كجاهز للاستلام من قبل عامل التوصيل',\n"
                }
            ],
            "date": 1752751503157,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:get/get.dart';\nimport 'package:cloud_firestore/cloud_firestore.dart';\n\nimport '../../controllers/orders_controller.dart';\nimport '../../../XXX/xxx_firebase.dart';\nimport '../../ViewOrderSeller/GetDateToText.dart';\n\n/// صفحة معاينة تفاصيل الطلب قبل قبوله\nclass OrderPreviewPage extends StatefulWidget {\n  final String orderId;\n  final Map<String, dynamic> orderData;\n  final Map<String, dynamic> userData;\n\n  const OrderPreviewPage({\n    super.key,\n    required this.orderId,\n    required this.orderData,\n    required this.userData,\n  });\n\n  @override\n  State<OrderPreviewPage> createState() => _OrderPreviewPageState();\n}\n\nclass _OrderPreviewPageState extends State<OrderPreviewPage>\n    with TickerProviderStateMixin {\n  late AnimationController _animationController;\n  late AnimationController _itemsAnimationController;\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n  late Animation<double> _scaleAnimation;\n\n  bool _isLoading = false;\n  List<Map<String, dynamic>> _orderItems = [];\n  double _totalPrice = 0.0;\n\n  @override\n  void initState() {\n    super.initState();\n\n    // إعداد الأنيميشن\n    _animationController = AnimationController(\n      duration: const Duration(milliseconds: 800),\n      vsync: this,\n    );\n\n    _itemsAnimationController = AnimationController(\n      duration: const Duration(milliseconds: 1200),\n      vsync: this,\n    );\n\n    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n      CurvedAnimation(parent: _animationController, curve: Curves.easeOut),\n    );\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.3),\n      end: Offset.zero,\n    ).animate(\n      CurvedAnimation(parent: _animationController, curve: Curves.easeOutBack),\n    );\n\n    _scaleAnimation = Tween<double>(begin: 0.8, end: 1.0).animate(\n      CurvedAnimation(parent: _animationController, curve: Curves.elasticOut),\n    );\n\n    // بدء الأنيميشن\n    _animationController.forward();\n\n    // جلب تفاصيل الطلب\n    _loadOrderItems();\n  }\n\n  @override\n  void dispose() {\n    _animationController.dispose();\n    _itemsAnimationController.dispose();\n    super.dispose();\n  }\n\n  /// جلب منتجات الطلب من subcollection\n  Future<void> _loadOrderItems() async {\n    setState(() => _isLoading = true);\n\n    try {\n      // جلب منتجات الطلب من subcollection\n      final itemsSnapshot =\n          await FirebaseFirestore.instance\n              .collection(FirebaseX.ordersCollection)\n              .doc(widget.orderId)\n              .collection('OrderItems')\n              .get();\n\n      List<Map<String, dynamic>> items = [];\n      double total = 0.0;\n\n      // جلب تفاصيل كل منتج\n      for (var doc in itemsSnapshot.docs) {\n        final itemData = doc.data();\n        final isOffer = itemData['isOfer'] ?? false;\n        final itemId = itemData['uidItem'];\n        final quantity = itemData['number'] ?? 1;\n\n        // جلب معلومات المنتج من المجموعة المناسبة\n        final collectionName =\n            isOffer ? FirebaseX.offersCollection : FirebaseX.itemsCollection;\n\n        final productDoc =\n            await FirebaseFirestore.instance\n                .collection(collectionName)\n                .doc(itemId)\n                .get();\n\n        if (productDoc.exists) {\n          final productData = productDoc.data()!;\n\n          // تحديد السعر المناسب حسب نوع الطلب\n          double price;\n          final orderType = widget.orderData['orderType'] ?? '';\n          final buyerType = widget.orderData['buyerType'] ?? '';\n\n          if (orderType == 'wholesale_to_retail' || buyerType == 'retailer') {\n            // إذا كان طلب جملة لتجزئة، استخدم سعر الجملة\n            price = (productData['priceOfItem'] as num?)?.toDouble() ?? 0.0;\n          } else {\n            // للطلبات العادية، استخدم سعر التجزئة المقترح\n            price =\n                (productData['suggestedRetailPrice'] as num?)?.toDouble() ??\n                (productData['priceOfItem'] as num?)?.toDouble() ??\n                0.0;\n          }\n\n          final itemTotal = price * quantity;\n          total += itemTotal;\n\n          items.add({\n            'name': productData['nameOfItem'] ?? 'منتج غير معروف',\n            'price': price,\n            'quantity': quantity,\n            'total': itemTotal,\n            'imageUrl': productData['url'] ?? '',\n            'isOffer': isOffer,\n            'priceType':\n                orderType == 'wholesale_to_retail' || buyerType == 'retailer'\n                    ? 'wholesale'\n                    : 'retail',\n          });\n        }\n      }\n\n      setState(() {\n        _orderItems = items;\n        _totalPrice = total;\n        _isLoading = false;\n      });\n\n      // بدء أنيميشن المنتجات\n      _itemsAnimationController.forward();\n    } catch (e) {\n      debugPrint('Error loading order items: $e');\n      setState(() => _isLoading = false);\n      Get.snackbar(\n        'خطأ',\n        'فشل في تحميل تفاصيل الطلب',\n        backgroundColor: Colors.red.withOpacity(0.1),\n        colorText: Colors.red,\n      );\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final size = MediaQuery.of(context).size;\n\n    return Scaffold(\n      backgroundColor: Colors.grey[50],\n      body: CustomScrollView(\n        slivers: [\n          // App Bar متحرك\n          _buildAnimatedAppBar(size),\n\n          // محتوى الصفحة\n          SliverToBoxAdapter(\n            child: FadeTransition(\n              opacity: _fadeAnimation,\n              child: SlideTransition(\n                position: _slideAnimation,\n                child: Padding(\n                  padding: const EdgeInsets.all(16),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      // معلومات العميل\n                      _buildCustomerInfo(size),\n                      const SizedBox(height: 24),\n\n                      // معلومات الطلب\n                      _buildOrderInfo(size),\n                      const SizedBox(height: 24),\n\n                      // قائمة المنتجات\n                      _buildProductsList(size),\n                      const SizedBox(height: 24),\n\n                      // ملخص السعر\n                      _buildPriceSummary(size),\n                      const SizedBox(height: 32),\n\n                      // أزرار الإجراءات\n                      _buildActionButtons(size),\n                      const SizedBox(height: 32),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء App Bar متحرك\n  Widget _buildAnimatedAppBar(Size size) {\n    return SliverAppBar(\n      expandedHeight: 200,\n      floating: false,\n      pinned: true,\n      stretch: true,\n      backgroundColor: Theme.of(context).primaryColor,\n      flexibleSpace: FlexibleSpaceBar(\n        title: const Text(\n          'معاينة الطلب',\n          style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n        ),\n        background: Container(\n          decoration: BoxDecoration(\n            gradient: LinearGradient(\n              begin: Alignment.topLeft,\n              end: Alignment.bottomRight,\n              colors: [\n                Theme.of(context).primaryColor,\n                Theme.of(context).primaryColor.withOpacity(0.7),\n              ],\n            ),\n          ),\n          child: Center(\n            child: ScaleTransition(\n              scale: _scaleAnimation,\n              child: Column(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                  Container(\n                    padding: const EdgeInsets.all(20),\n                    decoration: BoxDecoration(\n                      color: Colors.white.withOpacity(0.2),\n                      shape: BoxShape.circle,\n                    ),\n                    child: const Icon(\n                      Icons.receipt_long,\n                      size: 50,\n                      color: Colors.white,\n                    ),\n                  ),\n                  const SizedBox(height: 16),\n                  Text(\n                    'طلب #${widget.orderData['numberOfOrder']}',\n                    style: const TextStyle(\n                      color: Colors.white,\n                      fontSize: 24,\n                      fontWeight: FontWeight.bold,\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ),\n      ),\n      leading: IconButton(\n        icon: const Icon(Icons.arrow_back_ios),\n        onPressed: () {\n          HapticFeedback.lightImpact();\n          Get.back();\n        },\n      ),\n    );\n  }\n\n  /// بناء معلومات العميل\n  Widget _buildCustomerInfo(Size size) {\n    return Container(\n      padding: const EdgeInsets.all(16),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.circular(16),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.05),\n            blurRadius: 10,\n            offset: const Offset(0, 5),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          // صورة العميل\n          Hero(\n            tag: 'user_${widget.orderId}',\n            child: Container(\n              width: 70,\n              height: 70,\n              decoration: BoxDecoration(\n                shape: BoxShape.circle,\n                border: Border.all(\n                  color: Theme.of(context).primaryColor.withOpacity(0.3),\n                  width: 3,\n                ),\n                image: DecorationImage(\n                  fit: BoxFit.cover,\n                  image: NetworkImage(widget.userData['url'] ?? ''),\n                ),\n              ),\n            ),\n          ),\n          const SizedBox(width: 16),\n          // معلومات العميل\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  widget.userData['name'] ?? 'عميل',\n                  style: const TextStyle(\n                    fontSize: 18,\n                    fontWeight: FontWeight.bold,\n                  ),\n                  overflow: TextOverflow.ellipsis,\n                  maxLines: 1,\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء معلومات الطلب\n  Widget _buildOrderInfo(Size size) {\n    return Container(\n      padding: const EdgeInsets.all(16),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          colors: [Colors.blue.withOpacity(0.1), Colors.blue.withOpacity(0.05)],\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n        ),\n        borderRadius: BorderRadius.circular(16),\n        border: Border.all(color: Colors.blue.withOpacity(0.2), width: 1),\n      ),\n      child: Column(\n        children: [\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n              _buildInfoItem(\n                icon: Icons.calendar_today,\n                label: 'التاريخ',\n                value: GetDateToText().dateToText(\n                  widget.orderData['timeOrder'],\n                ),\n                color: Colors.blue,\n              ),\n              Container(height: 40, width: 1, color: Colors.grey[300]),\n              _buildInfoItem(\n                icon: Icons.shopping_basket,\n                label: 'عدد المنتجات',\n                value: '${_orderItems.length}',\n                color: Colors.orange,\n              ),\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء عنصر معلومات\n  Widget _buildInfoItem({\n    required IconData icon,\n    required String label,\n    required String value,\n    required Color color,\n  }) {\n    return Column(\n      children: [\n        Icon(icon, color: color, size: 24),\n        const SizedBox(height: 4),\n        Text(label, style: TextStyle(fontSize: 12, color: Colors.grey[600])),\n        Text(\n          value,\n          style: TextStyle(\n            fontSize: 14,\n            fontWeight: FontWeight.bold,\n            color: Colors.grey[800],\n          ),\n        ),\n      ],\n    );\n  }\n\n  /// بناء قائمة المنتجات\n  Widget _buildProductsList(Size size) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        Row(\n          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n          children: [\n            const Text(\n              'المنتجات المطلوبة',\n              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n            ),\n            Container(\n              padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n              decoration: BoxDecoration(\n                color: Theme.of(context).primaryColor.withOpacity(0.1),\n                borderRadius: BorderRadius.circular(20),\n              ),\n              child: Text(\n                '${_orderItems.length} منتج',\n                style: TextStyle(\n                  color: Theme.of(context).primaryColor,\n                  fontWeight: FontWeight.bold,\n                ),\n              ),\n            ),\n          ],\n        ),\n        const SizedBox(height: 16),\n\n        if (_isLoading)\n          Center(\n            child: Container(\n              padding: const EdgeInsets.all(40),\n              child: const CircularProgressIndicator(),\n            ),\n          )\n        else\n          ..._orderItems.asMap().entries.map((entry) {\n            final index = entry.key;\n            final item = entry.value;\n\n            return AnimatedBuilder(\n              animation: _itemsAnimationController,\n              builder: (context, child) {\n                final delay = index * 0.1;\n                final animation = Tween<double>(begin: 0.0, end: 1.0).animate(\n                  CurvedAnimation(\n                    parent: _itemsAnimationController,\n                    curve: Interval(\n                      delay,\n                      delay + 0.5,\n                      curve: Curves.easeOutBack,\n                    ),\n                  ),\n                );\n\n                return Transform.scale(\n                  scale: animation.value,\n                  child: FadeTransition(\n                    opacity: animation,\n                    child: _buildProductItem(item, size),\n                  ),\n                );\n              },\n            );\n          }),\n      ],\n    );\n  }\n\n  /// بناء عنصر منتج\n  Widget _buildProductItem(Map<String, dynamic> item, Size size) {\n    return Container(\n      margin: const EdgeInsets.only(bottom: 12),\n      padding: const EdgeInsets.all(12),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.circular(16),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.05),\n            blurRadius: 10,\n            offset: const Offset(0, 5),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          // صورة المنتج\n          Container(\n            width: 80,\n            height: 80,\n            decoration: BoxDecoration(\n              borderRadius: BorderRadius.circular(12),\n              image: DecorationImage(\n                fit: BoxFit.cover,\n                image: NetworkImage(item['imageUrl']),\n              ),\n            ),\n            child:\n                item['isOffer']\n                    ? Align(\n                      alignment: Alignment.topRight,\n                      child: Container(\n                        padding: const EdgeInsets.all(4),\n                        decoration: BoxDecoration(\n                          color: Colors.red,\n                          borderRadius: const BorderRadius.only(\n                            topRight: Radius.circular(12),\n                            bottomLeft: Radius.circular(12),\n                          ),\n                        ),\n                        child: const Text(\n                          'عرض',\n                          style: TextStyle(\n                            color: Colors.white,\n                            fontSize: 10,\n                            fontWeight: FontWeight.bold,\n                          ),\n                        ),\n                      ),\n                    )\n                    : null,\n          ),\n          const SizedBox(width: 12),\n          // معلومات المنتج\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  item['name'],\n                  style: const TextStyle(\n                    fontSize: 16,\n                    fontWeight: FontWeight.bold,\n                  ),\n                  maxLines: 2,\n                  overflow: TextOverflow.ellipsis,\n                ),\n                const SizedBox(height: 8),\n                Container(\n                  padding: const EdgeInsets.symmetric(\n                    horizontal: 12,\n                    vertical: 4,\n                  ),\n                  decoration: BoxDecoration(\n                    color: Colors.orange.withOpacity(0.1),\n                    borderRadius: BorderRadius.circular(8),\n                    border: Border.all(\n                      color: Colors.orange.withOpacity(0.3),\n                      width: 1,\n                    ),\n                  ),\n                  child: Row(\n                    mainAxisSize: MainAxisSize.min,\n                    children: [\n                      Icon(\n                        Icons.shopping_cart,\n                        size: 16,\n                        color: Colors.orange[700],\n                      ),\n                      const SizedBox(width: 4),\n                      Text(\n                        'الكمية المطلوبة: ${item['quantity']}',\n                        style: TextStyle(\n                          fontSize: 14,\n                          fontWeight: FontWeight.bold,\n                          color: Colors.orange[700],\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                const SizedBox(height: 4),\n                Row(\n                  children: [\n                    Text(\n                      'السعر: ${item['price']} ${FirebaseX.currency}',\n                      style: TextStyle(fontSize: 13, color: Colors.grey[700]),\n                    ),\n                    const SizedBox(width: 8),\n                    // عرض نوع السعر\n                    if (item['priceType'] == 'wholesale')\n                      Container(\n                        padding: const EdgeInsets.symmetric(\n                          horizontal: 6,\n                          vertical: 2,\n                        ),\n                        decoration: BoxDecoration(\n                          color: Colors.orange.withOpacity(0.1),\n                          borderRadius: BorderRadius.circular(4),\n                          border: Border.all(\n                            color: Colors.orange.withOpacity(0.3),\n                            width: 0.5,\n                          ),\n                        ),\n                        child: Text(\n                          'جملة',\n                          style: TextStyle(\n                            fontSize: 10,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.orange[700],\n                          ),\n                        ),\n                      )\n                    else\n                      Container(\n                        padding: const EdgeInsets.symmetric(\n                          horizontal: 6,\n                          vertical: 2,\n                        ),\n                        decoration: BoxDecoration(\n                          color: Colors.blue.withOpacity(0.1),\n                          borderRadius: BorderRadius.circular(4),\n                          border: Border.all(\n                            color: Colors.blue.withOpacity(0.3),\n                            width: 0.5,\n                          ),\n                        ),\n                        child: Text(\n                          'تجزئة',\n                          style: TextStyle(\n                            fontSize: 10,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.blue[700],\n                          ),\n                        ),\n                      ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n          // السعر الإجمالي للمنتج\n          Container(\n            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n            decoration: BoxDecoration(\n              color: Theme.of(context).primaryColor.withOpacity(0.1),\n              borderRadius: BorderRadius.circular(8),\n            ),\n            child: Text(\n              '${item['total']} ${FirebaseX.currency}',\n              style: TextStyle(\n                color: Theme.of(context).primaryColor,\n                fontWeight: FontWeight.bold,\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء ملخص السعر\n  Widget _buildPriceSummary(Size size) {\n    return Container(\n      padding: const EdgeInsets.all(16),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          colors: [\n            Colors.green.withOpacity(0.1),\n            Colors.green.withOpacity(0.05),\n          ],\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n        ),\n        borderRadius: BorderRadius.circular(16),\n        border: Border.all(color: Colors.green.withOpacity(0.2), width: 1),\n      ),\n      child: Column(\n        children: [\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n              const Text(\n                'المجموع الكلي',\n                style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500),\n              ),\n              TweenAnimationBuilder<double>(\n                tween: Tween(begin: 0, end: _totalPrice),\n                duration: const Duration(milliseconds: 1000),\n                curve: Curves.easeOutBack,\n                builder: (context, value, child) {\n                  return Text(\n                    '${value.toStringAsFixed(0)} ${FirebaseX.currency}',\n                    style: const TextStyle(\n                      fontSize: 24,\n                      fontWeight: FontWeight.bold,\n                      color: Colors.green,\n                    ),\n                  );\n                },\n              ),\n            ],\n          ),\n          const SizedBox(height: 8),\n          // يمكن إضافة تفاصيل أخرى مثل رسوم التوصيل هنا\n        ],\n      ),\n    );\n  }\n\n  /// بناء أزرار الإجراءات\n  Widget _buildActionButtons(Size size) {\n    return Row(\n      children: [\n        // زر الرفض\n        Expanded(\n          child: _buildAnimatedButton(\n            onPressed: () {\n              HapticFeedback.mediumImpact();\n              _showRejectDialog();\n            },\n            label: 'رفض',\n            icon: Icons.close,\n            color: Colors.red,\n            isOutlined: true,\n          ),\n        ),\n        const SizedBox(width: 16),\n        // زر القبول\n        Expanded(\n          flex: 2,\n          child: _buildAnimatedButton(\n            onPressed:\n                _isLoading\n                    ? null\n                    : () {\n                      HapticFeedback.lightImpact();\n                      _acceptOrder();\n                    },\n            label: 'قبول الطلب',\n            icon: Icons.check_circle,\n            color: Colors.green,\n            isGradient: true,\n          ),\n        ),\n      ],\n    );\n  }\n\n  /// بناء زر متحرك\n  Widget _buildAnimatedButton({\n    required VoidCallback? onPressed,\n    required String label,\n    required IconData icon,\n    required Color color,\n    bool isOutlined = false,\n    bool isGradient = false,\n  }) {\n    return TweenAnimationBuilder<double>(\n      tween: Tween(begin: 0.95, end: 1.0),\n      duration: const Duration(milliseconds: 200),\n      builder: (context, value, child) {\n        return Transform.scale(\n          scale: value,\n          child: Container(\n            height: 56,\n            decoration: BoxDecoration(\n              gradient:\n                  isGradient && !isOutlined\n                      ? LinearGradient(\n                        colors: [color, color.withOpacity(0.8)],\n                        begin: Alignment.topLeft,\n                        end: Alignment.bottomRight,\n                      )\n                      : null,\n              color: isOutlined ? null : (isGradient ? null : color),\n              borderRadius: BorderRadius.circular(16),\n              border: isOutlined ? Border.all(color: color, width: 2) : null,\n              boxShadow:\n                  !isOutlined\n                      ? [\n                        BoxShadow(\n                          color: color.withOpacity(0.3),\n                          blurRadius: 10,\n                          offset: const Offset(0, 5),\n                        ),\n                      ]\n                      : null,\n            ),\n            child: Material(\n              color: Colors.transparent,\n              child: InkWell(\n                onTap: onPressed,\n                borderRadius: BorderRadius.circular(16),\n                child: Container(\n                  padding: const EdgeInsets.symmetric(horizontal: 20),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    children: [\n                      Icon(\n                        icon,\n                        color: isOutlined ? color : Colors.white,\n                        size: 24,\n                      ),\n                      const SizedBox(width: 8),\n                      Text(\n                        label,\n                        style: TextStyle(\n                          color: isOutlined ? color : Colors.white,\n                          fontWeight: FontWeight.bold,\n                          fontSize: 16,\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        );\n      },\n    );\n  }\n\n  /// قبول الطلب\n  Future<void> _acceptOrder() async {\n    setState(() => _isLoading = true);\n\n    try {\n      final ordersController = Get.find<OrdersController>();\n      await ordersController.acceptOrder(widget.orderId);\n\n      // إغلاق الصفحة والعودة\n      Get.back();\n      Get.back(); // للعودة من bottom sheet أيضاً إذا كان مفتوحاً\n\n      Get.snackbar(\n        '✅ تم قبول الطلب',\n        'يمكنك الآن البدء في تحضير المنتجات',\n        backgroundColor: Colors.green.withOpacity(0.1),\n        colorText: Colors.green,\n        duration: const Duration(seconds: 3),\n      );\n    } catch (e) {\n      setState(() => _isLoading = false);\n      Get.snackbar(\n        '❌ خطأ',\n        'فشل في قبول الطلب، حاول مرة أخرى',\n        backgroundColor: Colors.red.withOpacity(0.1),\n        colorText: Colors.red,\n      );\n    }\n  }\n\n  /// عرض حوار الرفض\n  void _showRejectDialog() {\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),\n        title: Row(\n          children: [\n            Container(\n              padding: const EdgeInsets.all(8),\n              decoration: BoxDecoration(\n                color: Colors.orange.withOpacity(0.1),\n                shape: BoxShape.circle,\n              ),\n              child: Icon(\n                Icons.warning_amber_rounded,\n                color: Colors.orange[700],\n                size: 24,\n              ),\n            ),\n            const SizedBox(width: 12),\n            const Text('تأكيد رفض الطلب', style: TextStyle(fontSize: 18)),\n          ],\n        ),\n        content: const Text(\n          'هل أنت متأكد من رفض هذا الطلب؟\\nلا يمكن التراجع عن هذا الإجراء.',\n          style: TextStyle(height: 1.5),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Get.back(),\n            child: Text('إلغاء', style: TextStyle(color: Colors.grey[600])),\n          ),\n          const SizedBox(width: 8),\n          ElevatedButton(\n            onPressed: () {\n              HapticFeedback.mediumImpact();\n              Get.back();\n              final ordersController = Get.find<OrdersController>();\n              ordersController.rejectOrder(widget.orderId);\n              Get.back(); // إغلاق صفحة المعاينة\n            },\n            style: ElevatedButton.styleFrom(\n              backgroundColor: Colors.red,\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(12),\n              ),\n              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),\n            ),\n            child: const Text(\n              'رفض الطلب',\n              style: TextStyle(\n                color: Colors.white,\n                fontWeight: FontWeight.bold,\n              ),\n            ),\n          ),\n        ],\n      ),\n      barrierDismissible: false,\n    );\n  }\n}\n"
        }
    ]
}