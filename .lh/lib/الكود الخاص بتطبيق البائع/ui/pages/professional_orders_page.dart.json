{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/ui/pages/professional_orders_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1753181638995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753183783732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -890,20 +890,50 @@\n                 color: Colors.orange.withOpacity(0.1),\n                 shape: BoxShape.circle,\n               ),\n               child: Icon(\n-                Icons.inventory_2,\n+                Icons.delivery_dining,\n                 color: Colors.orange[700],\n                 size: 24.sp,\n               ),\n             ),\n             SizedBox(width: 12.w),\n             Text('تأكيد جاهزية الطلب', style: TextStyle(fontSize: 18.sp)),\n           ],\n         ),\n-        content: Text(\n-          'هل أنت متأكد من انتهاء تجهيز الطلب؟\\n\\nسوف يتم استدعاء عامل التوصيل لأخذ الطلب.',\n-          style: TextStyle(height: 1.5, fontSize: 14.sp),\n+        content: Column(\n+          mainAxisSize: MainAxisSize.min,\n+          crossAxisAlignment: CrossAxisAlignment.start,\n+          children: [\n+            Text(\n+              'هل أنت متأكد من انتهاء تجهيز الطلب؟',\n+              style: TextStyle(fontSize: 16.sp, fontWeight: FontWeight.w500),\n+            ),\n+            SizedBox(height: 12.h),\n+            Container(\n+              padding: EdgeInsets.all(12.w),\n+              decoration: BoxDecoration(\n+                color: Colors.blue.withOpacity(0.1),\n+                borderRadius: BorderRadius.circular(8.r),\n+                border: Border.all(color: Colors.blue.withOpacity(0.3)),\n+              ),\n+              child: Row(\n+                children: [\n+                  Icon(Icons.info_outline, color: Colors.blue, size: 20.sp),\n+                  SizedBox(width: 8.w),\n+                  Expanded(\n+                    child: Text(\n+                      'سيتم إشعار عامل التوصيل تلقائياً لاستلام الطلب',\n+                      style: TextStyle(\n+                        fontSize: 14.sp,\n+                        color: Colors.blue[700],\n+                      ),\n+                    ),\n+                  ),\n+                ],\n+              ),\n+            ),\n+          ],\n         ),\n         actions: [\n           TextButton(\n             onPressed: () => Get.back(),\n@@ -913,12 +943,32 @@\n             ),\n           ),\n           SizedBox(width: 8.w),\n           ElevatedButton(\n-            onPressed: () {\n+            onPressed: () async {\n               HapticFeedback.mediumImpact();\n               Get.back();\n-              Get.find<OrdersController>().markOrderReady(orderId);\n+\n+              try {\n+                await Get.find<OrdersController>().markOrderReady(orderId);\n+\n+                // إشعار إضافي لاستدعاء عامل التوصيل\n+                Get.snackbar(\n+                  '🚚 تم استدعاء عامل التوصيل',\n+                  'تم إشعار عامل التوصيل لاستلام الطلب',\n+                  backgroundColor: Colors.blue.withOpacity(0.1),\n+                  colorText: Colors.blue,\n+                  duration: const Duration(seconds: 4),\n+                  icon: const Icon(Icons.delivery_dining, color: Colors.blue),\n+                );\n+              } catch (e) {\n+                Get.snackbar(\n+                  '❌ خطأ',\n+                  'فشل في تحديث حالة الطلب',\n+                  backgroundColor: Colors.red.withOpacity(0.1),\n+                  colorText: Colors.red,\n+                );\n+              }\n             },\n             style: ElevatedButton.styleFrom(\n               backgroundColor: Colors.orange,\n               shape: RoundedRectangleBorder(\n"
                },
                {
                    "date": 1753238043429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,59 @@\n     _tabController.dispose();\n     super.dispose();\n   }\n \n+  /// تحديد نوع الطلب (جملة أو تجزئة)\n+  Map<String, dynamic> _getOrderTypeInfo(Map<String, dynamic> orderData) {\n+    final orderType = orderData['orderType'] ?? '';\n+    final buyerType = orderData['buyerType'] ?? '';\n+    final source = orderData['source'] ?? '';\n+\n+    // تحديد نوع الطلب\n+    bool isRetail = false;\n+\n+    // طلبات التجزئة من تطبيق العميل\n+    if (orderType == 'retail' ||\n+        buyerType == 'customer' ||\n+        source == 'customer_app' ||\n+        orderType == 'customer_order') {\n+      isRetail = true;\n+    }\n+    // طلبات الجملة من تطبيق البائع\n+    else if (orderType == 'wholesale' ||\n+        buyerType == 'retailer' ||\n+        source == 'seller_app' ||\n+        orderType == 'wholesale_to_retail') {\n+      isRetail = false;\n+    }\n+    // افتراضي: إذا لم نتمكن من تحديد النوع نعتبره تجزئة\n+    else {\n+      isRetail = true;\n+    }\n+\n+    if (isRetail) {\n+      return {\n+        'type': 'retail',\n+        'label': 'تجزئة',\n+        'icon': Icons.person,\n+        'color': Colors.blue,\n+        'bgColor': Colors.blue.withOpacity(0.1),\n+        'borderColor': Colors.blue.withOpacity(0.3),\n+        'description': 'طلب من العميل',\n+      };\n+    } else {\n+      return {\n+        'type': 'wholesale',\n+        'label': 'جملة',\n+        'icon': Icons.business,\n+        'color': Colors.orange,\n+        'bgColor': Colors.orange.withOpacity(0.1),\n+        'borderColor': Colors.orange.withOpacity(0.3),\n+        'description': 'طلب من البائع',\n+      };\n+    }\n+  }\n+\n   @override\n   Widget build(BuildContext context) {\n     final ordersController = Get.put(OrdersController());\n \n@@ -389,8 +440,14 @@\n     Map<String, dynamic> orderData,\n     OrderStatus status,\n     Color accentColor,\n   ) {\n+    // تحديد نوع الطلب\n+    final orderTypeInfo = _getOrderTypeInfo(orderData);\n+    final typeColor = orderTypeInfo['color'] as Color;\n+    final typeBgColor = orderTypeInfo['bgColor'] as Color;\n+    final typeBorderColor = orderTypeInfo['borderColor'] as Color;\n+\n     return FutureBuilder<DocumentSnapshot>(\n       future:\n           FirebaseFirestore.instance\n               .collection(FirebaseX.collectionApp)\n@@ -408,39 +465,77 @@\n           child: Material(\n             color: Colors.white,\n             borderRadius: BorderRadius.circular(20.r),\n             elevation: 2,\n-            shadowColor: accentColor.withOpacity(0.2),\n+            shadowColor: typeColor.withOpacity(0.2),\n             child: InkWell(\n               borderRadius: BorderRadius.circular(20.r),\n               onTap:\n                   () =>\n                       _showOrderDetails(orderDoc, orderData, userData, status),\n               child: Container(\n                 decoration: BoxDecoration(\n                   borderRadius: BorderRadius.circular(20.r),\n-                  border: Border.all(\n-                    color: accentColor.withOpacity(0.2),\n-                    width: 1,\n+                  border: Border.all(color: typeBorderColor, width: 2.w),\n+                  // إضافة تدرج لوني خفيف\n+                  gradient: LinearGradient(\n+                    colors: [typeBgColor, Colors.white],\n+                    begin: Alignment.topLeft,\n+                    end: Alignment.bottomRight,\n                   ),\n                 ),\n                 child: Column(\n                   children: [\n+                    // شريط علوي لنوع الطلب\n+                    Container(\n+                      width: double.infinity,\n+                      padding: EdgeInsets.symmetric(\n+                        vertical: 8.h,\n+                        horizontal: 16.w,\n+                      ),\n+                      decoration: BoxDecoration(\n+                        color: typeColor,\n+                        borderRadius: BorderRadius.only(\n+                          topLeft: Radius.circular(18.r),\n+                          topRight: Radius.circular(18.r),\n+                        ),\n+                      ),\n+                      child: Row(\n+                        mainAxisAlignment: MainAxisAlignment.center,\n+                        children: [\n+                          Icon(\n+                            orderTypeInfo['icon'] as IconData,\n+                            color: Colors.white,\n+                            size: 18.sp,\n+                          ),\n+                          SizedBox(width: 8.w),\n+                          Text(\n+                            orderTypeInfo['label'] as String,\n+                            style: TextStyle(\n+                              color: Colors.white,\n+                              fontWeight: FontWeight.bold,\n+                              fontSize: 14.sp,\n+                            ),\n+                          ),\n+                          SizedBox(width: 4.w),\n+                          Text(\n+                            '• ${orderTypeInfo['description']}',\n+                            style: TextStyle(\n+                              color: Colors.white.withOpacity(0.9),\n+                              fontSize: 12.sp,\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n                     // Header مع معلومات الطلب\n                     Container(\n                       padding: EdgeInsets.all(16.w),\n                       decoration: BoxDecoration(\n-                        gradient: LinearGradient(\n-                          colors: [\n-                            accentColor.withOpacity(0.1),\n-                            accentColor.withOpacity(0.05),\n-                          ],\n-                          begin: Alignment.topLeft,\n-                          end: Alignment.bottomRight,\n-                        ),\n+                        color: Colors.white,\n                         borderRadius: BorderRadius.only(\n-                          topLeft: Radius.circular(20.r),\n-                          topRight: Radius.circular(20.r),\n+                          bottomLeft: Radius.circular(18.r),\n+                          bottomRight: Radius.circular(18.r),\n                         ),\n                       ),\n                       child: Row(\n                         children: [\n@@ -452,10 +547,10 @@\n                               height: 60.h,\n                               decoration: BoxDecoration(\n                                 shape: BoxShape.circle,\n                                 border: Border.all(\n-                                  color: accentColor.withOpacity(0.3),\n-                                  width: 2,\n+                                  color: typeColor,\n+                                  width: 3.w,\n                                 ),\n                                 image: DecorationImage(\n                                   fit: BoxFit.cover,\n                                   image: NetworkImage(userData['url'] ?? ''),\n@@ -502,9 +597,9 @@\n                                 ),\n                               ],\n                             ),\n                           ),\n-                          // التاريخ والوقت فقط\n+                          // التاريخ والوقت\n                           GetBuilder<GetDateToText>(\n                             init: GetDateToText(),\n                             builder:\n                                 (dateController) => Container(\n@@ -512,31 +607,31 @@\n                                     horizontal: 12.w,\n                                     vertical: 6.h,\n                                   ),\n                                   decoration: BoxDecoration(\n-                                    color: accentColor.withOpacity(0.1),\n+                                    color: typeColor.withOpacity(0.1),\n                                     borderRadius: BorderRadius.circular(20.r),\n                                     border: Border.all(\n-                                      color: accentColor.withOpacity(0.3),\n-                                      width: 1,\n+                                      color: typeColor.withOpacity(0.3),\n+                                      width: 1.w,\n                                     ),\n                                   ),\n                                   child: Row(\n                                     mainAxisSize: MainAxisSize.min,\n                                     children: [\n                                       Icon(\n                                         Icons.access_time,\n                                         size: 14.sp,\n-                                        color: accentColor,\n+                                        color: typeColor,\n                                       ),\n                                       SizedBox(width: 4.w),\n                                       Text(\n                                         dateController.dateToText(\n                                           orderData['timeOrder'],\n                                         ),\n                                         style: TextStyle(\n                                           fontSize: 11.sp,\n-                                          color: accentColor,\n+                                          color: typeColor,\n                                           fontWeight: FontWeight.w500,\n                                         ),\n                                       ),\n                                     ],\n@@ -551,9 +646,9 @@\n                       orderDoc.id,\n                       orderData,\n                       userData,\n                       status,\n-                      accentColor,\n+                      typeColor, // استخدام لون نوع الطلب بدلاً من accentColor\n                     ),\n                   ],\n                 ),\n               ),\n"
                }
            ],
            "date": 1753181638995,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:get/get.dart';\nimport 'package:cloud_firestore/cloud_firestore.dart';\nimport 'dart:math' as math;\nimport '../../controllers/orders_controller.dart';\nimport '../../utils/barcode_helper.dart';\nimport '../../../XXX/xxx_firebase.dart';\nimport '../../ViewOrderSeller/GetDateToText.dart';\nimport 'order_preview_page.dart';\n\n/// واجهة عرض الطلبات الاحترافية مع أنيميشن متقدم\nclass ProfessionalOrdersPage extends StatefulWidget {\n  const ProfessionalOrdersPage({super.key});\n\n  @override\n  State<ProfessionalOrdersPage> createState() => _ProfessionalOrdersPageState();\n}\n\nclass _ProfessionalOrdersPageState extends State<ProfessionalOrdersPage>\n    with TickerProviderStateMixin {\n  late AnimationController _fadeController;\n  late AnimationController _slideController;\n  late AnimationController _scaleController;\n  late TabController _tabController;\n\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n  late Animation<double> _scaleAnimation;\n\n  @override\n  void initState() {\n    super.initState();\n\n    // إعداد متحكمات الأنيميشن\n    _fadeController = AnimationController(\n      duration: const Duration(milliseconds: 800),\n      vsync: this,\n    );\n\n    _slideController = AnimationController(\n      duration: const Duration(milliseconds: 600),\n      vsync: this,\n    );\n\n    _scaleController = AnimationController(\n      duration: const Duration(milliseconds: 400),\n      vsync: this,\n    );\n\n    _tabController = TabController(length: 3, vsync: this);\n\n    // إعداد الأنيميشن\n    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n      CurvedAnimation(parent: _fadeController, curve: Curves.easeInOut),\n    );\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.3),\n      end: Offset.zero,\n    ).animate(\n      CurvedAnimation(parent: _slideController, curve: Curves.easeOutBack),\n    );\n\n    _scaleAnimation = Tween<double>(begin: 0.8, end: 1.0).animate(\n      CurvedAnimation(parent: _scaleController, curve: Curves.elasticOut),\n    );\n\n    // بدء الأنيميشن\n    _fadeController.forward();\n    _slideController.forward();\n    _scaleController.forward();\n  }\n\n  @override\n  void dispose() {\n    _fadeController.dispose();\n    _slideController.dispose();\n    _scaleController.dispose();\n    _tabController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final ordersController = Get.put(OrdersController());\n\n    return Scaffold(\n      backgroundColor: Colors.grey[50],\n      body: SafeArea(\n        child: Column(\n          children: [\n            // Header مع أنيميشن\n            _buildAnimatedHeader(ordersController),\n\n            // TabBar احترافي\n            _buildProfessionalTabBar(ordersController),\n\n            // محتوى الطلبات\n            Expanded(\n              child: SlideTransition(\n                position: _slideAnimation,\n                child: FadeTransition(\n                  opacity: _fadeAnimation,\n                  child: TabBarView(\n                    controller: _tabController,\n                    children: [\n                      _buildOrdersSection(\n                        ordersController.newOrdersList,\n                        OrderStatus.pending,\n                        Colors.blue,\n                      ),\n                      _buildOrdersSection(\n                        ordersController.acceptedOrdersList,\n                        OrderStatus.accepted,\n                        Colors.orange,\n                      ),\n                      _buildOrdersSection(\n                        ordersController.readyOrdersList,\n                        OrderStatus.readyForPickup,\n                        Colors.green,\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  /// بناء الهيدر المتحرك\n  Widget _buildAnimatedHeader(OrdersController controller) {\n    return FadeTransition(\n      opacity: _fadeAnimation,\n      child: Container(\n        padding: EdgeInsets.all(20.w),\n        decoration: BoxDecoration(\n          color: Colors.white,\n          boxShadow: [\n            BoxShadow(\n              color: Colors.black.withOpacity(0.05),\n              blurRadius: 10.r,\n              offset: Offset(0, 5.h),\n            ),\n          ],\n        ),\n        child: Column(\n          children: [\n            // إحصائيات سريعة\n            Row(\n              mainAxisAlignment: MainAxisAlignment.spaceAround,\n              children: [\n                _buildStatCard(\n                  controller.newOrdersCount,\n                  'جديد',\n                  Colors.blue,\n                  Icons.new_releases,\n                ),\n                _buildStatCard(\n                  controller.acceptedOrdersCount,\n                  'قيد التحضير',\n                  Colors.orange,\n                  Icons.restaurant,\n                ),\n                _buildStatCard(\n                  controller.readyOrdersCount,\n                  'جاهز',\n                  Colors.green,\n                  Icons.check_circle,\n                ),\n              ],\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  /// بناء بطاقة الإحصائيات\n  Widget _buildStatCard(RxInt count, String label, Color color, IconData icon) {\n    return Obx(\n      () => ScaleTransition(\n        scale: _scaleAnimation,\n        child: AnimatedContainer(\n          duration: const Duration(milliseconds: 300),\n          padding: EdgeInsets.symmetric(horizontal: 20.w, vertical: 12.h),\n          decoration: BoxDecoration(\n            color: color.withOpacity(0.1),\n            borderRadius: BorderRadius.circular(15.r),\n            border: Border.all(color: color.withOpacity(0.3)),\n          ),\n          child: Row(\n            mainAxisSize: MainAxisSize.min,\n            children: [\n              Icon(icon, color: color, size: 24.sp),\n              SizedBox(width: 8.w),\n              Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  AnimatedSwitcher(\n                    duration: const Duration(milliseconds: 500),\n                    transitionBuilder: (\n                      Widget child,\n                      Animation<double> animation,\n                    ) {\n                      return FadeTransition(\n                        opacity: animation,\n                        child: ScaleTransition(scale: animation, child: child),\n                      );\n                    },\n                    child: Text(\n                      '${count.value}',\n                      key: ValueKey<int>(count.value),\n                      style: TextStyle(\n                        fontSize: 24.sp,\n                        fontWeight: FontWeight.bold,\n                        color: color,\n                      ),\n                    ),\n                  ),\n                  Text(\n                    label,\n                    style: TextStyle(\n                      fontSize: 12.sp,\n                      color: color.withOpacity(0.8),\n                    ),\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  /// بناء TabBar احترافي\n  Widget _buildProfessionalTabBar(OrdersController controller) {\n    return Container(\n      margin: EdgeInsets.all(16.w),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.circular(20.r),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.05),\n            blurRadius: 10.r,\n            offset: Offset(0, 5.h),\n          ),\n        ],\n      ),\n      child: TabBar(\n        controller: _tabController,\n        indicator: BoxDecoration(\n          gradient: LinearGradient(\n            colors: [\n              Theme.of(context).primaryColor,\n              Theme.of(context).primaryColor.withOpacity(0.8),\n            ],\n          ),\n          borderRadius: BorderRadius.circular(20.r),\n          boxShadow: [\n            BoxShadow(\n              color: Theme.of(context).primaryColor.withOpacity(0.3),\n              blurRadius: 8.r,\n              offset: Offset(0, 3.h),\n            ),\n          ],\n        ),\n        indicatorSize: TabBarIndicatorSize.tab,\n        labelColor: Colors.white,\n        unselectedLabelColor: Colors.grey[600],\n        tabs: [\n          _buildAnimatedTab('جديد', controller.newOrdersCount, Colors.blue),\n          _buildAnimatedTab(\n            'قيد التحضير',\n            controller.acceptedOrdersCount,\n            Colors.orange,\n          ),\n          _buildAnimatedTab('جاهز', controller.readyOrdersCount, Colors.green),\n        ],\n      ),\n    );\n  }\n\n  /// بناء تاب متحرك\n  Widget _buildAnimatedTab(String label, RxInt count, Color color) {\n    return Tab(\n      child: Obx(\n        () => AnimatedContainer(\n          duration: const Duration(milliseconds: 300),\n          child: Row(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n              Text(label, style: TextStyle(fontSize: 10.sp)),\n              if (count.value > 0) ...[\n                // SizedBox(width: 1.w),\n                AnimatedScale(\n                  scale: count.value > 0 ? 1.0 : 0.0,\n                  duration: const Duration(milliseconds: 300),\n                  child: Container(\n                    padding: EdgeInsets.symmetric(\n                      horizontal: 6.w,\n                      vertical: 2.h,\n                    ),\n                    decoration: BoxDecoration(\n                      color: color,\n                      borderRadius: BorderRadius.circular(12.r),\n                    ),\n                    child: Text(\n                      '${count.value}',\n                      style: TextStyle(\n                        fontSize: 12.sp,\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  /// بناء قسم الطلبات\n  Widget _buildOrdersSection(\n    RxList<QueryDocumentSnapshot> ordersList,\n    OrderStatus status,\n    Color accentColor,\n  ) {\n    final ordersController = Get.find<OrdersController>();\n\n    return Obx(() {\n      if (ordersList.isEmpty) {\n        return _buildEmptyState(status, accentColor);\n      }\n\n      return RefreshIndicator(\n        onRefresh: () => ordersController.refreshOrders(),\n        color: accentColor,\n        child: ListView.builder(\n          padding: EdgeInsets.all(16.w),\n          itemCount: ordersList.length,\n          itemBuilder: (context, index) {\n            final orderDoc = ordersList[index];\n            final orderData = orderDoc.data() as Map<String, dynamic>;\n\n            return AnimatedBuilder(\n              animation: _scaleController,\n              builder: (context, child) {\n                final delay = index * 0.1;\n                final animation = Tween<double>(begin: 0.0, end: 1.0).animate(\n                  CurvedAnimation(\n                    parent: _scaleController,\n                    curve: Interval(\n                      delay,\n                      delay + 0.5,\n                      curve: Curves.easeOutBack,\n                    ),\n                  ),\n                );\n\n                return Transform.scale(\n                  scale: animation.value,\n                  child: _buildProfessionalOrderCard(\n                    orderDoc,\n                    orderData,\n                    status,\n                    accentColor,\n                  ),\n                );\n              },\n            );\n          },\n        ),\n      );\n    });\n  }\n\n  /// بناء بطاقة طلب احترافية\n  Widget _buildProfessionalOrderCard(\n    QueryDocumentSnapshot orderDoc,\n    Map<String, dynamic> orderData,\n    OrderStatus status,\n    Color accentColor,\n  ) {\n    return FutureBuilder<DocumentSnapshot>(\n      future:\n          FirebaseFirestore.instance\n              .collection(FirebaseX.collectionApp)\n              .doc(orderData['uidUser'])\n              .get(),\n      builder: (context, userSnapshot) {\n        if (!userSnapshot.hasData || !userSnapshot.data!.exists) {\n          return const SizedBox.shrink();\n        }\n\n        final userData = userSnapshot.data!.data() as Map<String, dynamic>;\n\n        return Container(\n          margin: EdgeInsets.only(bottom: 16.h),\n          child: Material(\n            color: Colors.white,\n            borderRadius: BorderRadius.circular(20.r),\n            elevation: 2,\n            shadowColor: accentColor.withOpacity(0.2),\n            child: InkWell(\n              borderRadius: BorderRadius.circular(20.r),\n              onTap:\n                  () =>\n                      _showOrderDetails(orderDoc, orderData, userData, status),\n              child: Container(\n                decoration: BoxDecoration(\n                  borderRadius: BorderRadius.circular(20.r),\n                  border: Border.all(\n                    color: accentColor.withOpacity(0.2),\n                    width: 1,\n                  ),\n                ),\n                child: Column(\n                  children: [\n                    // Header مع معلومات الطلب\n                    Container(\n                      padding: EdgeInsets.all(16.w),\n                      decoration: BoxDecoration(\n                        gradient: LinearGradient(\n                          colors: [\n                            accentColor.withOpacity(0.1),\n                            accentColor.withOpacity(0.05),\n                          ],\n                          begin: Alignment.topLeft,\n                          end: Alignment.bottomRight,\n                        ),\n                        borderRadius: BorderRadius.only(\n                          topLeft: Radius.circular(20.r),\n                          topRight: Radius.circular(20.r),\n                        ),\n                      ),\n                      child: Row(\n                        children: [\n                          // صورة المستخدم مع أنيميشن\n                          Hero(\n                            tag: 'user_${orderDoc.id}',\n                            child: Container(\n                              width: 60.w,\n                              height: 60.h,\n                              decoration: BoxDecoration(\n                                shape: BoxShape.circle,\n                                border: Border.all(\n                                  color: accentColor.withOpacity(0.3),\n                                  width: 2,\n                                ),\n                                image: DecorationImage(\n                                  fit: BoxFit.cover,\n                                  image: NetworkImage(userData['url'] ?? ''),\n                                ),\n                              ),\n                            ),\n                          ),\n                          SizedBox(width: 12.w),\n                          // معلومات العميل\n                          Expanded(\n                            child: Column(\n                              crossAxisAlignment: CrossAxisAlignment.start,\n                              children: [\n                                Text(\n                                  userData['name'] ?? 'عميل',\n                                  style: TextStyle(\n                                    fontSize: 16.sp,\n                                    fontWeight: FontWeight.bold,\n                                  ),\n                                  overflow: TextOverflow.ellipsis,\n                                  maxLines: 1,\n                                ),\n                                SizedBox(height: 4.h),\n                                Row(\n                                  children: [\n                                    Icon(\n                                      Icons.phone,\n                                      size: 14.sp,\n                                      color: Colors.grey[600],\n                                    ),\n                                    SizedBox(width: 4.w),\n                                    Flexible(\n                                      child: Text(\n                                        userData['phneNumber'] ?? 'غير محدد',\n                                        style: TextStyle(\n                                          fontSize: 12.sp,\n                                          color: Colors.grey[600],\n                                        ),\n                                        overflow: TextOverflow.ellipsis,\n                                        maxLines: 1,\n                                      ),\n                                    ),\n                                  ],\n                                ),\n                              ],\n                            ),\n                          ),\n                          // التاريخ والوقت فقط\n                          GetBuilder<GetDateToText>(\n                            init: GetDateToText(),\n                            builder:\n                                (dateController) => Container(\n                                  padding: EdgeInsets.symmetric(\n                                    horizontal: 12.w,\n                                    vertical: 6.h,\n                                  ),\n                                  decoration: BoxDecoration(\n                                    color: accentColor.withOpacity(0.1),\n                                    borderRadius: BorderRadius.circular(20.r),\n                                    border: Border.all(\n                                      color: accentColor.withOpacity(0.3),\n                                      width: 1,\n                                    ),\n                                  ),\n                                  child: Row(\n                                    mainAxisSize: MainAxisSize.min,\n                                    children: [\n                                      Icon(\n                                        Icons.access_time,\n                                        size: 14.sp,\n                                        color: accentColor,\n                                      ),\n                                      SizedBox(width: 4.w),\n                                      Text(\n                                        dateController.dateToText(\n                                          orderData['timeOrder'],\n                                        ),\n                                        style: TextStyle(\n                                          fontSize: 11.sp,\n                                          color: accentColor,\n                                          fontWeight: FontWeight.w500,\n                                        ),\n                                      ),\n                                    ],\n                                  ),\n                                ),\n                          ),\n                        ],\n                      ),\n                    ),\n                    // أزرار الإجراءات\n                    _buildActionSection(\n                      orderDoc.id,\n                      orderData,\n                      userData,\n                      status,\n                      accentColor,\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ),\n        );\n      },\n    );\n  }\n\n  /// بناء قسم الإجراءات\n  Widget _buildActionSection(\n    String orderId,\n    Map<String, dynamic> orderData,\n    Map<String, dynamic> userData,\n    OrderStatus status,\n    Color accentColor,\n  ) {\n    return Container(\n      padding: EdgeInsets.all(16.w),\n      child: Row(\n        children: [\n          if (status == OrderStatus.pending) ...[\n            Expanded(\n              child: _buildAnimatedButton(\n                onPressed: () => _showRejectDialog(orderId),\n                label: 'رفض',\n                icon: Icons.close,\n                color: Colors.red,\n                isOutlined: true,\n              ),\n            ),\n            SizedBox(width: 12.w),\n            Expanded(\n              flex: 2,\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.lightImpact();\n                  // الانتقال إلى صفحة معاينة الطلب\n                  Get.to(\n                    () => OrderPreviewPage(\n                      orderId: orderId,\n                      orderData: orderData,\n                      userData: userData,\n                    ),\n                    transition: Transition.rightToLeft,\n                    duration: const Duration(milliseconds: 300),\n                  );\n                },\n                label: 'معاينة الطلب',\n                icon: Icons.visibility,\n                color: Colors.blue,\n              ),\n            ),\n          ] else if (status == OrderStatus.accepted) ...[\n            Expanded(\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.lightImpact();\n                  // الانتقال إلى صفحة معاينة الطلب\n                  Get.to(\n                    () => OrderPreviewPage(\n                      orderId: orderId,\n                      orderData: orderData,\n                      userData: userData,\n                    ),\n                    transition: Transition.rightToLeft,\n                    duration: const Duration(milliseconds: 300),\n                  );\n                },\n                label: 'معاينة الطلب',\n                icon: Icons.visibility,\n                color: Colors.blue,\n                isOutlined: true,\n              ),\n            ),\n            SizedBox(width: 12.w),\n            Expanded(\n              flex: 2,\n              child: _buildAnimatedButton(\n                onPressed: () {\n                  HapticFeedback.mediumImpact();\n                  _showReadyConfirmDialog(orderId);\n                },\n                label: 'جاهز للاستلام',\n                icon: Icons.inventory_2,\n                color: Colors.orange,\n              ),\n            ),\n          ] else if (status == OrderStatus.readyForPickup) ...[\n            Expanded(\n              child: Column(\n                children: [\n                  // زر معاينة الطلب\n                  _buildAnimatedButton(\n                    onPressed: () {\n                      HapticFeedback.lightImpact();\n                      // الانتقال إلى صفحة معاينة الطلب\n                      Get.to(\n                        () => OrderPreviewPage(\n                          orderId: orderId,\n                          orderData: orderData,\n                          userData: userData,\n                        ),\n                        transition: Transition.rightToLeft,\n                        duration: const Duration(milliseconds: 300),\n                      );\n                    },\n                    label: 'معاينة الطلب',\n                    icon: Icons.visibility,\n                    color: Colors.blue,\n                    isOutlined: true,\n                  ),\n                  SizedBox(height: 12.h),\n                  Text(\n                    'في انتظار عامل التوصيل',\n                    style: TextStyle(\n                      fontSize: 14.sp,\n                      color: Colors.grey[700],\n                      fontWeight: FontWeight.w500,\n                    ),\n                  ),\n                  SizedBox(height: 12.h),\n                  // QR Code\n                  GestureDetector(\n                    onTap:\n                        () => BarcodeHelper.showBarcodeDialog(\n                          context,\n                          orderData['numberOfOrder'].toString(),\n                          'طلب من ${userData['name'] ?? 'عميل'}',\n                        ),\n                    child: Container(\n                      padding: EdgeInsets.all(16.w),\n                      decoration: BoxDecoration(\n                        gradient: LinearGradient(\n                          colors: [\n                            Colors.green.withOpacity(0.15),\n                            Colors.green.withOpacity(0.1),\n                          ],\n                        ),\n                        borderRadius: BorderRadius.circular(16.r),\n                        border: Border.all(\n                          color: Colors.green.withOpacity(0.3),\n                          width: 1.5,\n                        ),\n                      ),\n                      child: Column(\n                        children: [\n                          Icon(\n                            Icons.qr_code_2,\n                            color: Colors.green[700],\n                            size: 40.sp,\n                          ),\n                          SizedBox(height: 8.h),\n                          Text(\n                            'عرض رمز QR للتسليم',\n                            style: TextStyle(\n                              color: Colors.green[700],\n                              fontWeight: FontWeight.bold,\n                              fontSize: 16.sp,\n                            ),\n                          ),\n                          SizedBox(height: 4.h),\n                          Text(\n                            'اطلب من عامل التوصيل مسح الرمز',\n                            style: TextStyle(\n                              color: Colors.green[600],\n                              fontSize: 12.sp,\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ],\n        ],\n      ),\n    );\n  }\n\n  /// بناء زر متحرك\n  Widget _buildAnimatedButton({\n    required VoidCallback onPressed,\n    required String label,\n    required IconData icon,\n    required Color color,\n    bool isOutlined = false,\n  }) {\n    return AnimatedContainer(\n      duration: const Duration(milliseconds: 200),\n      child: Material(\n        color: isOutlined ? Colors.transparent : color,\n        borderRadius: BorderRadius.circular(12.r),\n        child: InkWell(\n          onTap: onPressed,\n          borderRadius: BorderRadius.circular(12.r),\n          child: Container(\n            padding: EdgeInsets.symmetric(vertical: 12.h),\n            decoration: BoxDecoration(\n              borderRadius: BorderRadius.circular(12.r),\n              border: isOutlined ? Border.all(color: color, width: 1.5) : null,\n            ),\n            child: Row(\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                Icon(\n                  icon,\n                  color: isOutlined ? color : Colors.white,\n                  size: 16.sp,\n                ),\n                SizedBox(width: 8.w),\n                Text(\n                  label,\n                  style: TextStyle(\n                    color: isOutlined ? color : Colors.white,\n                    fontWeight: FontWeight.bold,\n                    fontSize: 10.sp,\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n\n  /// عرض تفاصيل الطلب\n  void _showOrderDetails(\n    QueryDocumentSnapshot orderDoc,\n    Map<String, dynamic> orderData,\n    Map<String, dynamic> userData,\n    OrderStatus status,\n  ) {\n    Get.bottomSheet(\n      Container(\n        padding: EdgeInsets.all(20.w),\n        decoration: BoxDecoration(\n          color: Colors.white,\n          borderRadius: BorderRadius.only(\n            topLeft: Radius.circular(25.r),\n            topRight: Radius.circular(25.r),\n          ),\n        ),\n        child: Column(\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            Container(\n              width: 50.w,\n              height: 5.h,\n              decoration: BoxDecoration(\n                color: Colors.grey[300],\n                borderRadius: BorderRadius.circular(10.r),\n              ),\n            ),\n            SizedBox(height: 20.h),\n            Text(\n              'تفاصيل الطلب',\n              style: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.bold),\n            ),\n            SizedBox(height: 20.h),\n            // يمكنك إضافة المزيد من التفاصيل هنا\n          ],\n        ),\n      ),\n      backgroundColor: Colors.transparent,\n      isScrollControlled: true,\n    );\n  }\n\n  /// حوار الرفض\n  void _showRejectDialog(String orderId) {\n    HapticFeedback.mediumImpact();\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(20.r),\n        ),\n        title: Row(\n          children: [\n            Icon(Icons.warning, color: Colors.orange[700]),\n            SizedBox(width: 8.w),\n            Text('تأكيد رفض الطلب', style: TextStyle(fontSize: 18.sp)),\n          ],\n        ),\n        content: Text(\n          'هل أنت متأكد من رفض هذا الطلب؟\\nلا يمكن التراجع عن هذا الإجراء.',\n          style: TextStyle(height: 1.5, fontSize: 14.sp),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Get.back(),\n            child: Text('إلغاء', style: TextStyle(fontSize: 14.sp)),\n          ),\n          ElevatedButton(\n            onPressed: () {\n              Get.back();\n              Get.find<OrdersController>().rejectOrder(orderId);\n            },\n            style: ElevatedButton.styleFrom(\n              backgroundColor: Colors.red,\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(10.r),\n              ),\n              padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 8.h),\n            ),\n            child: Text(\n              'رفض الطلب',\n              style: TextStyle(color: Colors.white, fontSize: 14.sp),\n            ),\n          ),\n        ],\n      ),\n      barrierDismissible: false,\n    );\n  }\n\n  /// حوار تأكيد الطلب الجاهز\n  void _showReadyConfirmDialog(String orderId) {\n    HapticFeedback.mediumImpact();\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(20.r),\n        ),\n        title: Row(\n          children: [\n            Container(\n              padding: EdgeInsets.all(8.w),\n              decoration: BoxDecoration(\n                color: Colors.orange.withOpacity(0.1),\n                shape: BoxShape.circle,\n              ),\n              child: Icon(\n                Icons.inventory_2,\n                color: Colors.orange[700],\n                size: 24.sp,\n              ),\n            ),\n            SizedBox(width: 12.w),\n            Text('تأكيد جاهزية الطلب', style: TextStyle(fontSize: 18.sp)),\n          ],\n        ),\n        content: Text(\n          'هل أنت متأكد من انتهاء تجهيز الطلب؟\\n\\nسوف يتم استدعاء عامل التوصيل لأخذ الطلب.',\n          style: TextStyle(height: 1.5, fontSize: 14.sp),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Get.back(),\n            child: Text(\n              'إلغاء',\n              style: TextStyle(color: Colors.grey[600], fontSize: 14.sp),\n            ),\n          ),\n          SizedBox(width: 8.w),\n          ElevatedButton(\n            onPressed: () {\n              HapticFeedback.mediumImpact();\n              Get.back();\n              Get.find<OrdersController>().markOrderReady(orderId);\n            },\n            style: ElevatedButton.styleFrom(\n              backgroundColor: Colors.orange,\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(12.r),\n              ),\n              padding: EdgeInsets.symmetric(horizontal: 20.w, vertical: 12.h),\n            ),\n            child: Text(\n              'نعم، الطلب جاهز',\n              style: TextStyle(\n                color: Colors.white,\n                fontWeight: FontWeight.bold,\n                fontSize: 14.sp,\n              ),\n            ),\n          ),\n        ],\n      ),\n      barrierDismissible: false,\n    );\n  }\n\n  /// حالة فارغة\n  Widget _buildEmptyState(OrderStatus status, Color color) {\n    final Map<OrderStatus, Map<String, dynamic>> emptyStateData = {\n      OrderStatus.pending: {\n        'icon': Icons.inbox_outlined,\n        'title': 'لا توجد طلبات جديدة',\n        'subtitle': 'ستظهر الطلبات الجديدة هنا',\n      },\n      OrderStatus.accepted: {\n        'icon': Icons.restaurant_menu,\n        'title': 'لا توجد طلبات قيد التحضير',\n        'subtitle': 'ابدأ بقبول الطلبات الجديدة',\n      },\n      OrderStatus.readyForPickup: {\n        'icon': Icons.inventory_2_outlined,\n        'title': 'لا توجد طلبات جاهزة',\n        'subtitle': 'قم بتجهيز الطلبات المقبولة',\n      },\n    };\n\n    final data = emptyStateData[status]!;\n\n    return Center(\n      child: ScaleTransition(\n        scale: _scaleAnimation,\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            TweenAnimationBuilder<double>(\n              tween: Tween(begin: 0, end: 1),\n              duration: const Duration(seconds: 2),\n              builder: (context, value, child) {\n                return Transform.rotate(\n                  angle: value * 2 * math.pi,\n                  child: Icon(\n                    data['icon'],\n                    size: 80.sp,\n                    color: color.withOpacity(0.3),\n                  ),\n                );\n              },\n            ),\n            SizedBox(height: 20.h),\n            Text(\n              data['title'],\n              style: TextStyle(\n                fontSize: 18.sp,\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[700],\n              ),\n            ),\n            SizedBox(height: 8.h),\n            Text(\n              data['subtitle'],\n              style: TextStyle(fontSize: 14.sp, color: Colors.grey[500]),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}