{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/ui/pages/retail_cart_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752570376963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752570376963,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:get/get.dart';\nimport 'package:cached_network_image/cached_network_image.dart';\nimport 'package:intl/intl.dart';\nimport 'package:flutter_animate/flutter_animate.dart';\nimport '../controllers/retail_cart_controller.dart';\n\nclass RetailCartPage extends StatelessWidget {\n  const RetailCartPage({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: const Color(0XFFF8FAFC),\n      body: SafeArea(\n        child: GetBuilder<RetailCartController>(\n          builder: (controller) {\n            // التحقق من وجود أي متاجر تحتوي على منتجات\n            if (controller.totalStoresCount == 0) {\n              return _buildEmptyCart(controller);\n            }\n\n            return Column(\n              children: [\n                _buildAppBar(controller),\n                // إضافة قائمة المتاجر إذا كان هناك أكثر من متجر\n                if (controller.totalStoresCount > 1)\n                  _buildStoreSelector(controller),\n                _buildStoreInfo(controller),\n                Expanded(child: _buildCartItems(controller)),\n                _buildBottomSection(controller),\n              ],\n            );\n          },\n        ),\n      ),\n    );\n  }\n\n  Widget _buildAppBar(RetailCartController controller) {\n    return Container(\n      padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.05),\n            blurRadius: 10.r,\n            offset: Offset(0, 2.h),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                HapticFeedback.lightImpact();\n                Get.back();\n              },\n              borderRadius: BorderRadius.circular(12.r),\n              splashColor: const Color(0xFF6366F1).withOpacity(0.3),\n              highlightColor: const Color(0xFF6366F1).withOpacity(0.1),\n              child: AnimatedContainer(\n                duration: const Duration(milliseconds: 150),\n                width: 40.w,\n                height: 40.w,\n                decoration: BoxDecoration(\n                  color: const Color(0xFF6366F1).withOpacity(0.1),\n                  borderRadius: BorderRadius.circular(12.r),\n                ),\n                child: Icon(\n                  Icons.arrow_back_ios_rounded,\n                  color: const Color(0xFF6366F1),\n                  size: 20.sp,\n                ),\n              ),\n            ),\n          ),\n          SizedBox(width: 16.w),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Row(\n                  children: [\n                    Text(\n                      'سلة التسوق',\n                      style: TextStyle(\n                        fontSize: 20.sp,\n                        fontWeight: FontWeight.bold,\n                        color: const Color(0xFF1F2937),\n                      ),\n                    ),\n                    if (controller.totalStoresCount > 1) ...[\n                      SizedBox(width: 8.w),\n                      Container(\n                        padding: EdgeInsets.symmetric(\n                          horizontal: 8.w,\n                          vertical: 2.h,\n                        ),\n                        decoration: BoxDecoration(\n                          color: const Color(0xFF6366F1).withOpacity(0.1),\n                          borderRadius: BorderRadius.circular(6.r),\n                        ),\n                        child: Text(\n                          '${controller.totalStoresCount} متجر',\n                          style: TextStyle(\n                            fontSize: 10.sp,\n                            color: const Color(0xFF6366F1),\n                            fontWeight: FontWeight.w600,\n                          ),\n                        ),\n                      ),\n                    ],\n                  ],\n                ),\n                Obx(\n                  () => Text(\n                    controller.totalStoresCount > 1\n                        ? '${controller.totalItemsCount} منتج في ${controller.totalStoresCount} متاجر'\n                        : '${controller.itemCount} منتج',\n                    style: TextStyle(\n                      fontSize: 12.sp,\n                      color: const Color(0xFF6B7280),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n          Row(\n            children: [\n              if (controller.totalStoresCount > 1)\n                Material(\n                  color: Colors.transparent,\n                  child: InkWell(\n                    onTap: () {\n                      HapticFeedback.selectionClick();\n                      _showAllStoresDialog(controller);\n                    },\n                    borderRadius: BorderRadius.circular(8.r),\n                    splashColor: const Color(0xFF6366F1).withOpacity(0.3),\n                    highlightColor: const Color(0xFF6366F1).withOpacity(0.1),\n                    child: AnimatedContainer(\n                      duration: const Duration(milliseconds: 150),\n                      padding: EdgeInsets.symmetric(\n                        horizontal: 12.w,\n                        vertical: 8.h,\n                      ),\n                      decoration: BoxDecoration(\n                        color: const Color(0xFF6366F1).withOpacity(0.1),\n                        borderRadius: BorderRadius.circular(8.r),\n                      ),\n                      child: Row(\n                        mainAxisSize: MainAxisSize.min,\n                        children: [\n                          Icon(\n                            Icons.store_outlined,\n                            color: const Color(0xFF6366F1),\n                            size: 16.sp,\n                          ),\n                          SizedBox(width: 4.w),\n                          Text(\n                            'جميع المتاجر',\n                            style: TextStyle(\n                              color: const Color(0xFF6366F1),\n                              fontSize: 12.sp,\n                              fontWeight: FontWeight.w600,\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ),\n                ),\n              if (controller.totalStoresCount > 1) SizedBox(width: 8.w),\n              if (controller.cartItems.isNotEmpty)\n                Material(\n                  color: Colors.transparent,\n                  child: InkWell(\n                    onTap: () {\n                      HapticFeedback.mediumImpact();\n                      _showClearCartDialog(controller);\n                    },\n                    borderRadius: BorderRadius.circular(8.r),\n                    splashColor: Colors.red.withOpacity(0.3),\n                    highlightColor: Colors.red.withOpacity(0.1),\n                    child: AnimatedContainer(\n                      duration: const Duration(milliseconds: 150),\n                      padding: EdgeInsets.symmetric(\n                        horizontal: 12.w,\n                        vertical: 8.h,\n                      ),\n                      decoration: BoxDecoration(\n                        color: Colors.red.withOpacity(0.1),\n                        borderRadius: BorderRadius.circular(8.r),\n                      ),\n                      child: Text(\n                        controller.totalStoresCount > 1\n                            ? 'مسح المتجر'\n                            : 'مسح الكل',\n                        style: TextStyle(\n                          color: Colors.red,\n                          fontSize: 12.sp,\n                          fontWeight: FontWeight.w600,\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء قائمة اختيار المتجر النشط\n  Widget _buildStoreSelector(RetailCartController controller) {\n    return Container(\n      margin: EdgeInsets.symmetric(horizontal: 16.w, vertical: 8.h),\n      padding: EdgeInsets.all(12.w),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.circular(12.r),\n        border: Border.all(\n          color: const Color(0xFF6366F1).withOpacity(0.2),\n          width: 1,\n        ),\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            'اختر المتجر:',\n            style: TextStyle(\n              fontSize: 14.sp,\n              fontWeight: FontWeight.w600,\n              color: const Color(0xFF1F2937),\n            ),\n          ),\n          SizedBox(height: 8.h),\n          SizedBox(\n            height: 40.h,\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              itemCount: controller.storesWithItems.length,\n              itemBuilder: (context, index) {\n                final store = controller.storesWithItems[index];\n                final isActive = controller.activeStoreId.value == store.uid;\n                final itemCount = controller.getStoreItemCount(store.uid);\n                final totalAmount = controller.getStoreTotalAmount(store.uid);\n                final formatter = NumberFormat('#,###', 'ar');\n\n                return Material(\n                      color: Colors.transparent,\n                      child: InkWell(\n                        onTap: () {\n                          HapticFeedback.selectionClick();\n                          controller.setActiveStore(store.uid);\n                        },\n                        borderRadius: BorderRadius.circular(8.r),\n                        splashColor:\n                            isActive\n                                ? Colors.white.withOpacity(0.3)\n                                : const Color(0xFF6366F1).withOpacity(0.2),\n                        highlightColor:\n                            isActive\n                                ? Colors.white.withOpacity(0.1)\n                                : const Color(0xFF6366F1).withOpacity(0.1),\n                        child: AnimatedContainer(\n                          duration: const Duration(milliseconds: 200),\n                          margin: EdgeInsets.only(left: 8.w),\n                          padding: EdgeInsets.symmetric(\n                            horizontal: 12.w,\n                            vertical: 8.h,\n                          ),\n                          decoration: BoxDecoration(\n                            gradient:\n                                isActive\n                                    ? LinearGradient(\n                                      colors: [\n                                        const Color(0xFF6366F1),\n                                        const Color(0xFF8B5CF6),\n                                      ],\n                                    )\n                                    : null,\n                            color: isActive ? null : const Color(0xFFF8FAFC),\n                            borderRadius: BorderRadius.circular(8.r),\n                            border: Border.all(\n                              color:\n                                  isActive\n                                      ? const Color(0xFF6366F1)\n                                      : const Color(0xFFE5E7EB),\n                              width: 1,\n                            ),\n                          ),\n                          child: Column(\n                            mainAxisAlignment: MainAxisAlignment.center,\n                            children: [\n                              Text(\n                                store.shopName.length > 10\n                                    ? '${store.shopName.substring(0, 10)}...'\n                                    : store.shopName,\n                                style: TextStyle(\n                                  fontSize: 12.sp,\n                                  fontWeight: FontWeight.w600,\n                                  color:\n                                      isActive\n                                          ? Colors.white\n                                          : const Color(0xFF1F2937),\n                                ),\n                              ),\n                              SizedBox(height: 2.h),\n                              Text(\n                                '$itemCount منتج - ${formatter.format(totalAmount.toInt())} د.ع',\n                                style: TextStyle(\n                                  fontSize: 9.sp,\n                                  color:\n                                      isActive\n                                          ? Colors.white.withOpacity(0.8)\n                                          : const Color(0xFF6B7280),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    )\n                    .animate(delay: (index * 100).ms)\n                    .fadeIn()\n                    .slideX(begin: 0.3, end: 0);\n              },\n            ),\n          ),\n        ],\n      ),\n    ).animate().fadeIn(duration: 400.ms).slideY(begin: -0.2, end: 0);\n  }\n\n  /// عرض حوار جميع المتاجر\n  void _showAllStoresDialog(RetailCartController controller) {\n    final formatter = NumberFormat('#,###', 'ar');\n\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(16.r),\n        ),\n        title: Row(\n          children: [\n            Icon(\n              Icons.store_rounded,\n              color: const Color(0xFF6366F1),\n              size: 24.sp,\n            ),\n            SizedBox(width: 8.w),\n            Text(\n              'جميع المتاجر في السلة',\n              style: TextStyle(\n                fontSize: 18.sp,\n                fontWeight: FontWeight.bold,\n                color: const Color(0xFF1F2937),\n              ),\n            ),\n          ],\n        ),\n        content: SizedBox(\n          width: double.maxFinite,\n          child: ListView.builder(\n            shrinkWrap: true,\n            itemCount: controller.storesWithItems.length,\n            itemBuilder: (context, index) {\n              final store = controller.storesWithItems[index];\n              final itemCount = controller.getStoreItemCount(store.uid);\n              final totalAmount = controller.getStoreTotalAmount(store.uid);\n              final isActive = controller.activeStoreId.value == store.uid;\n\n              return Material(\n                color: Colors.transparent,\n                child: InkWell(\n                  onTap: () {\n                    HapticFeedback.selectionClick();\n                    controller.setActiveStore(store.uid);\n                    Get.back();\n                  },\n                  borderRadius: BorderRadius.circular(8.r),\n                  splashColor:\n                      isActive\n                          ? const Color(0xFF6366F1).withOpacity(0.2)\n                          : const Color(0xFF6366F1).withOpacity(0.1),\n                  highlightColor: const Color(0xFF6366F1).withOpacity(0.05),\n                  child: AnimatedContainer(\n                    duration: const Duration(milliseconds: 200),\n                    margin: EdgeInsets.only(bottom: 8.h),\n                    padding: EdgeInsets.all(12.w),\n                    decoration: BoxDecoration(\n                      color:\n                          isActive\n                              ? const Color(0xFF6366F1).withOpacity(0.1)\n                              : const Color(0xFFF8FAFC),\n                      borderRadius: BorderRadius.circular(8.r),\n                      border: Border.all(\n                        color:\n                            isActive\n                                ? const Color(0xFF6366F1)\n                                : const Color(0xFFE5E7EB),\n                        width: 1,\n                      ),\n                    ),\n                    child: Row(\n                      children: [\n                        Container(\n                          width: 40.w,\n                          height: 40.w,\n                          decoration: BoxDecoration(\n                            borderRadius: BorderRadius.circular(8.r),\n                            border: Border.all(\n                              color: const Color(0xFF6366F1).withOpacity(0.3),\n                              width: 1,\n                            ),\n                          ),\n                          child: ClipRRect(\n                            borderRadius: BorderRadius.circular(7.r),\n                            child:\n                                store.shopFrontImageUrl != null\n                                    ? CachedNetworkImage(\n                                      imageUrl: store.shopFrontImageUrl!,\n                                      fit: BoxFit.cover,\n                                      errorWidget:\n                                          (context, url, error) => Container(\n                                            color: const Color(\n                                              0xFF6366F1,\n                                            ).withOpacity(0.1),\n                                            child: Icon(\n                                              Icons.store_rounded,\n                                              color: const Color(0xFF6366F1),\n                                              size: 20.sp,\n                                            ),\n                                          ),\n                                    )\n                                    : Container(\n                                      color: const Color(\n                                        0xFF6366F1,\n                                      ).withOpacity(0.1),\n                                      child: Icon(\n                                        Icons.store_rounded,\n                                        color: const Color(0xFF6366F1),\n                                        size: 20.sp,\n                                      ),\n                                    ),\n                          ),\n                        ),\n                        SizedBox(width: 12.w),\n                        Expanded(\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            children: [\n                              Text(\n                                store.shopName,\n                                style: TextStyle(\n                                  fontSize: 14.sp,\n                                  fontWeight: FontWeight.w600,\n                                  color: const Color(0xFF1F2937),\n                                ),\n                              ),\n                              SizedBox(height: 4.h),\n                              Text(\n                                '$itemCount منتج',\n                                style: TextStyle(\n                                  fontSize: 12.sp,\n                                  color: const Color(0xFF6B7280),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.end,\n                          children: [\n                            Text(\n                              '${formatter.format(totalAmount.toInt())} د.ع',\n                              style: TextStyle(\n                                fontSize: 14.sp,\n                                fontWeight: FontWeight.bold,\n                                color: const Color(0xFF10B981),\n                              ),\n                            ),\n                            if (isActive)\n                              Container(\n                                margin: EdgeInsets.only(top: 4.h),\n                                padding: EdgeInsets.symmetric(\n                                  horizontal: 6.w,\n                                  vertical: 2.h,\n                                ),\n                                decoration: BoxDecoration(\n                                  color: const Color(0xFF6366F1),\n                                  borderRadius: BorderRadius.circular(4.r),\n                                ),\n                                child: Text(\n                                  'نشط',\n                                  style: TextStyle(\n                                    fontSize: 10.sp,\n                                    color: Colors.white,\n                                    fontWeight: FontWeight.w600,\n                                  ),\n                                ),\n                              ),\n                          ],\n                        ),\n                        SizedBox(width: 8.w),\n                        PopupMenuButton<String>(\n                          onSelected: (value) {\n                            if (value == 'clear') {\n                              HapticFeedback.mediumImpact();\n                              Get.back();\n                              _showClearStoreDialog(controller, store);\n                            }\n                          },\n                          itemBuilder:\n                              (context) => [\n                                PopupMenuItem(\n                                  value: 'clear',\n                                  child: Row(\n                                    children: [\n                                      Icon(\n                                        Icons.delete_outline,\n                                        color: Colors.red,\n                                        size: 16.sp,\n                                      ),\n                                      SizedBox(width: 8.w),\n                                      Text(\n                                        'مسح سلة المتجر',\n                                        style: TextStyle(color: Colors.red),\n                                      ),\n                                    ],\n                                  ),\n                                ),\n                              ],\n                          child: Icon(\n                            Icons.more_vert,\n                            color: const Color(0xFF6B7280),\n                            size: 20.sp,\n                          ),\n                        ),\n                      ],\n                    ),\n                  ),\n                ),\n              );\n            },\n          ),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Get.back(),\n            child: Text(\n              'إغلاق',\n              style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n            ),\n          ),\n          if (controller.totalStoresCount > 1)\n            Material(\n              color: Colors.transparent,\n              child: InkWell(\n                onTap: () {\n                  HapticFeedback.mediumImpact();\n                  Get.back();\n                  _showClearAllStoresDialog(controller);\n                },\n                borderRadius: BorderRadius.circular(8.r),\n                splashColor: Colors.red.withOpacity(0.3),\n                highlightColor: Colors.red.withOpacity(0.1),\n                child: Container(\n                  padding: EdgeInsets.symmetric(\n                    horizontal: 16.w,\n                    vertical: 12.h,\n                  ),\n                  decoration: BoxDecoration(\n                    color: Colors.red,\n                    borderRadius: BorderRadius.circular(8.r),\n                  ),\n                  child: Text(\n                    'مسح الكل',\n                    style: TextStyle(\n                      fontSize: 14.sp,\n                      color: Colors.white,\n                      fontWeight: FontWeight.w600,\n                    ),\n                  ),\n                ),\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildEmptyCart(RetailCartController controller) {\n    return Column(\n      children: [\n        _buildAppBar(controller),\n        Expanded(\n          child: Center(\n            child: Column(\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                Container(\n                      width: 120.w,\n                      height: 120.w,\n                      decoration: BoxDecoration(\n                        color: const Color(0xFF6366F1).withOpacity(0.1),\n                        borderRadius: BorderRadius.circular(60.r),\n                      ),\n                      child: Icon(\n                        Icons.shopping_cart_outlined,\n                        size: 60.sp,\n                        color: const Color(0xFF6366F1),\n                      ),\n                    )\n                    .animate()\n                    .scale(duration: 600.ms, curve: Curves.elasticOut)\n                    .fadeIn(duration: 400.ms),\n                SizedBox(height: 24.h),\n                Text(\n                  'السلة فارغة',\n                  style: TextStyle(\n                    fontSize: 24.sp,\n                    fontWeight: FontWeight.bold,\n                    color: const Color(0xFF1F2937),\n                  ),\n                ).animate().fadeIn(delay: 200.ms, duration: 400.ms),\n                SizedBox(height: 8.h),\n                Text(\n                  'أضف بعض المنتجات لتبدأ التسوق',\n                  style: TextStyle(\n                    fontSize: 16.sp,\n                    color: const Color(0xFF6B7280),\n                  ),\n                  textAlign: TextAlign.center,\n                ).animate().fadeIn(delay: 300.ms, duration: 400.ms),\n                SizedBox(height: 32.h),\n                Container(\n                      decoration: BoxDecoration(\n                        gradient: LinearGradient(\n                          colors: [\n                            const Color(0xFF6366F1),\n                            const Color(0xFF8B5CF6),\n                          ],\n                        ),\n                        borderRadius: BorderRadius.circular(25.r),\n                        boxShadow: [\n                          BoxShadow(\n                            color: const Color(0xFF6366F1).withOpacity(0.3),\n                            blurRadius: 10.r,\n                            offset: Offset(0, 4.h),\n                          ),\n                        ],\n                      ),\n                      child: Material(\n                        color: Colors.transparent,\n                        child: InkWell(\n                          onTap: () {\n                            HapticFeedback.mediumImpact();\n                            Get.back();\n                          },\n                          borderRadius: BorderRadius.circular(25.r),\n                          splashColor: Colors.white.withOpacity(0.3),\n                          highlightColor: Colors.white.withOpacity(0.1),\n                          child: Container(\n                            padding: EdgeInsets.symmetric(\n                              horizontal: 32.w,\n                              vertical: 16.h,\n                            ),\n                            child: Text(\n                              'تصفح المنتجات',\n                              style: TextStyle(\n                                fontSize: 16.sp,\n                                fontWeight: FontWeight.w600,\n                                color: Colors.white,\n                              ),\n                            ),\n                          ),\n                        ),\n                      ),\n                    )\n                    .animate()\n                    .fadeIn(delay: 400.ms, duration: 400.ms)\n                    .slideY(begin: 0.2, end: 0),\n              ],\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n\n  Widget _buildStoreInfo(RetailCartController controller) {\n    if (controller.currentStore == null) return const SizedBox.shrink();\n\n    return Container(\n      margin: EdgeInsets.symmetric(horizontal: 16.w, vertical: 8.h),\n      padding: EdgeInsets.all(16.w),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n          colors: [\n            const Color(0xFF6366F1).withOpacity(0.1),\n            const Color(0xFF8B5CF6).withOpacity(0.05),\n          ],\n        ),\n        borderRadius: BorderRadius.circular(16.r),\n        border: Border.all(\n          color: const Color(0xFF6366F1).withOpacity(0.2),\n          width: 1,\n        ),\n      ),\n      child: Row(\n        children: [\n          Container(\n            width: 50.w,\n            height: 50.w,\n            decoration: BoxDecoration(\n              borderRadius: BorderRadius.circular(12.r),\n              border: Border.all(\n                color: const Color(0xFF6366F1).withOpacity(0.3),\n                width: 2,\n              ),\n            ),\n            child: ClipRRect(\n              borderRadius: BorderRadius.circular(10.r),\n              child:\n                  controller.currentStore!.shopFrontImageUrl != null\n                      ? CachedNetworkImage(\n                        imageUrl: controller.currentStore!.shopFrontImageUrl!,\n                        fit: BoxFit.cover,\n                        placeholder:\n                            (context, url) => Container(\n                              color: const Color(0xFF6366F1).withOpacity(0.1),\n                              child: Icon(\n                                Icons.store_rounded,\n                                color: const Color(0xFF6366F1),\n                                size: 25.sp,\n                              ),\n                            ),\n                        errorWidget:\n                            (context, url, error) => Container(\n                              color: const Color(0xFF6366F1).withOpacity(0.1),\n                              child: Icon(\n                                Icons.store_rounded,\n                                color: const Color(0xFF6366F1),\n                                size: 25.sp,\n                              ),\n                            ),\n                      )\n                      : Container(\n                        color: const Color(0xFF6366F1).withOpacity(0.1),\n                        child: Icon(\n                          Icons.store_rounded,\n                          color: const Color(0xFF6366F1),\n                          size: 25.sp,\n                        ),\n                      ),\n            ),\n          ),\n          SizedBox(width: 12.w),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  controller.currentStore!.shopName,\n                  style: TextStyle(\n                    fontSize: 16.sp,\n                    fontWeight: FontWeight.bold,\n                    color: const Color(0xFF1F2937),\n                  ),\n                ),\n                SizedBox(height: 4.h),\n                Row(\n                  children: [\n                    Icon(\n                      Icons.store_outlined,\n                      size: 14.sp,\n                      color: const Color(0xFF6366F1),\n                    ),\n                    SizedBox(width: 4.w),\n                    Expanded(\n                      child: Text(\n                        controller.currentStore!.shopCategories.join(', '),\n                        style: TextStyle(\n                          fontSize: 12.sp,\n                          color: const Color(0xFF6B7280),\n                        ),\n                      ),\n                    ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n          Container(\n            padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),\n            decoration: BoxDecoration(\n              color: const Color(0xFF10B981).withOpacity(0.1),\n              borderRadius: BorderRadius.circular(6.r),\n            ),\n            child: Text(\n              'متاح',\n              style: TextStyle(\n                fontSize: 10.sp,\n                color: const Color(0xFF10B981),\n                fontWeight: FontWeight.w600,\n              ),\n            ),\n          ),\n        ],\n      ),\n    ).animate().fadeIn(duration: 400.ms).slideX(begin: -0.2, end: 0);\n  }\n\n  Widget _buildCartItems(RetailCartController controller) {\n    return ListView.builder(\n      padding: EdgeInsets.symmetric(horizontal: 16.w),\n      itemCount: controller.cartItems.length,\n      itemBuilder: (context, index) {\n        final item = controller.cartItems[index];\n        return _buildCartItem(item, controller, index);\n      },\n    );\n  }\n\n  Widget _buildCartItem(\n    CartItem item,\n    RetailCartController controller,\n    int index,\n  ) {\n    return Container(\n          margin: EdgeInsets.only(bottom: 12.h),\n          decoration: BoxDecoration(\n            color: Colors.white,\n            borderRadius: BorderRadius.circular(16.r),\n            boxShadow: [\n              BoxShadow(\n                color: Colors.black.withOpacity(0.04),\n                spreadRadius: 0,\n                blurRadius: 15.r,\n                offset: Offset(0, 4.h),\n              ),\n            ],\n          ),\n          child: Padding(\n            padding: EdgeInsets.all(16.w),\n            child: Row(\n              children: [\n                // صورة المنتج مع تحسينات\n                _buildProductImage(item),\n                SizedBox(width: 16.w),\n\n                // معلومات المنتج\n                Expanded(\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      // اسم المنتج\n                      Text(\n                        item.productName,\n                        style: TextStyle(\n                          fontSize: 16.sp,\n                          fontWeight: FontWeight.w600,\n                          color: const Color(0xFF1F2937),\n                          height: 1.3,\n                        ),\n                        maxLines: 2,\n                        overflow: TextOverflow.ellipsis,\n                      ),\n                      SizedBox(height: 8.h),\n\n                      // السعر الفردي مع تصميم مميز\n                      _buildPriceDisplay(item.productPrice),\n                      SizedBox(height: 6.h),\n\n                      // عرض الكمية المتوفرة والكمية المطلوبة\n                      _buildQuantityInfo(item),\n                      SizedBox(height: 8.h),\n\n                      // معلومات الكارتونة وزر سريع (للمنتجات من بائع جملة)\n                      _buildCartonInfo(item, controller),\n                      SizedBox(height: 12.h),\n\n                      // التحكم في الكمية والسعر الإجمالي - مُحسن لتجنب overflow\n                      Column(\n                        children: [\n                          Row(\n                            children: [\n                              _buildQuantityControls(item, controller),\n                              const Spacer(),\n                              _buildDeleteButton(item, controller),\n                            ],\n                          ),\n                          SizedBox(height: 8.h),\n                          Row(\n                            mainAxisAlignment: MainAxisAlignment.end,\n                            children: [_buildTotalPrice(item)],\n                          ),\n                        ],\n                      ),\n                    ],\n                  ),\n                ),\n              ],\n            ),\n          ),\n        )\n        .animate(delay: (index * 100).ms)\n        .fadeIn(duration: 400.ms)\n        .slideX(begin: 0.2, end: 0);\n  }\n\n  Widget _buildProductImage(CartItem item) {\n    return Container(\n      width: 90.w,\n      height: 90.w,\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(12.r),\n        border: Border.all(\n          color: const Color(0xFF6366F1).withOpacity(0.1),\n          width: 1,\n        ),\n      ),\n      child: ClipRRect(\n        borderRadius: BorderRadius.circular(11.r),\n        child: Stack(\n          children: [\n            // الصورة الرئيسية مع تحسينات\n            if (item.productImage.isNotEmpty)\n              CachedNetworkImage(\n                imageUrl: item.productImage,\n                width: double.infinity,\n                height: double.infinity,\n                fit: BoxFit.cover,\n                placeholder:\n                    (context, url) => Container(\n                      color: const Color(0xFFF8FAFC),\n                      child: Column(\n                        mainAxisAlignment: MainAxisAlignment.center,\n                        children: [\n                          SizedBox(\n                            width: 20.w,\n                            height: 20.w,\n                            child: CircularProgressIndicator(\n                              strokeWidth: 2,\n                              color: const Color(0xFF6366F1),\n                            ),\n                          ),\n                          SizedBox(height: 8.h),\n                          Text(\n                            'جاري التحميل...',\n                            style: TextStyle(\n                              fontSize: 8.sp,\n                              color: const Color(0xFF9CA3AF),\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                errorWidget: (context, url, error) {\n                  debugPrint('خطأ في تحميل الصورة: $url, Error: $error');\n                  return _buildImagePlaceholder();\n                },\n              )\n            else\n              _buildImagePlaceholder(),\n\n            // تأثير التدرج\n            Positioned(\n              bottom: 0,\n              left: 0,\n              right: 0,\n              height: 30.h,\n              child: Container(\n                decoration: BoxDecoration(\n                  gradient: LinearGradient(\n                    begin: Alignment.topCenter,\n                    end: Alignment.bottomCenter,\n                    colors: [Colors.transparent, Colors.black.withOpacity(0.1)],\n                  ),\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  Widget _buildImagePlaceholder() {\n    return Container(\n      color: const Color(0xFFF8FAFC),\n      child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Icon(\n            Icons.broken_image_rounded,\n            color: const Color(0xFF9CA3AF),\n            size: 28.sp,\n          ),\n          SizedBox(height: 4.h),\n          Text(\n            'خطأ في التحميل',\n            style: TextStyle(fontSize: 8.sp, color: const Color(0xFF9CA3AF)),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildQuantityInfo(CartItem item) {\n    // استخراج الكمية الإجمالية من بيانات المنتج\n    final int originalQuantity = (item.productData['quantity'] as int?) ?? 0;\n    final int availableQuantity = originalQuantity - item.quantity;\n\n    return Container(\n      padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 6.h),\n      decoration: BoxDecoration(\n        color:\n            availableQuantity <= 0\n                ? Colors.red.withOpacity(0.1)\n                : availableQuantity <= 5\n                ? Colors.orange.withOpacity(0.1)\n                : Colors.green.withOpacity(0.1),\n        borderRadius: BorderRadius.circular(6.r),\n        border: Border.all(\n          color:\n              availableQuantity <= 0\n                  ? Colors.red.withOpacity(0.3)\n                  : availableQuantity <= 5\n                  ? Colors.orange.withOpacity(0.3)\n                  : Colors.green.withOpacity(0.3),\n          width: 1,\n        ),\n      ),\n      child: Row(\n        children: [\n          Icon(\n            availableQuantity <= 0\n                ? Icons.inventory_2_outlined\n                : Icons.inventory_2,\n            size: 14.sp,\n            color:\n                availableQuantity <= 0\n                    ? Colors.red\n                    : availableQuantity <= 5\n                    ? Colors.orange\n                    : Colors.green,\n          ),\n          SizedBox(width: 4.w),\n          Expanded(\n            child: Text(\n              'متوفر: $availableQuantity قطعة | في السلة: ${item.quantity}',\n              style: TextStyle(\n                fontSize: 11.sp,\n                color:\n                    availableQuantity <= 0\n                        ? Colors.red\n                        : availableQuantity <= 5\n                        ? Colors.orange\n                        : Colors.green,\n                fontWeight: FontWeight.w600,\n              ),\n            ),\n          ),\n          if (availableQuantity <= 0)\n            Container(\n              padding: EdgeInsets.symmetric(horizontal: 6.w, vertical: 2.h),\n              decoration: BoxDecoration(\n                color: Colors.red,\n                borderRadius: BorderRadius.circular(4.r),\n              ),\n              child: Text(\n                'نفدت',\n                style: TextStyle(\n                  fontSize: 8.sp,\n                  color: Colors.white,\n                  fontWeight: FontWeight.bold,\n                ),\n              ),\n            )\n          else if (availableQuantity <= 5)\n            Container(\n              padding: EdgeInsets.symmetric(horizontal: 6.w, vertical: 2.h),\n              decoration: BoxDecoration(\n                color: Colors.orange,\n                borderRadius: BorderRadius.circular(4.r),\n              ),\n              child: Text(\n                'قليلة',\n                style: TextStyle(\n                  fontSize: 8.sp,\n                  color: Colors.white,\n                  fontWeight: FontWeight.bold,\n                ),\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildCartonInfo(CartItem item, RetailCartController controller) {\n    // التحقق من وجود معلومات الكارتونة\n    final productData = item.productData;\n    if (productData['addedBySellerType'] != 'wholesale' ||\n        productData['quantityPerCarton'] == null ||\n        productData['quantityPerCarton'] <= 0) {\n      return const SizedBox.shrink();\n    }\n\n    final cartonQuantity = productData['quantityPerCarton'] as int;\n    final int originalQuantity = (productData['quantity'] as int?) ?? 0;\n    final int availableQuantity = originalQuantity - item.quantity;\n\n    // التحقق من توفر كمية كافية للكارتونة\n    final bool canAddCarton = availableQuantity >= cartonQuantity;\n\n    return Container(\n      padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 6.h),\n      decoration: BoxDecoration(\n        color:\n            canAddCarton\n                ? const Color(0xFF059669).withOpacity(0.1)\n                : Colors.grey.withOpacity(0.1),\n        borderRadius: BorderRadius.circular(6.r),\n        border: Border.all(\n          color:\n              canAddCarton\n                  ? const Color(0xFF059669).withOpacity(0.2)\n                  : Colors.grey.withOpacity(0.3),\n          width: 1,\n        ),\n      ),\n      child: Row(\n        children: [\n          Icon(\n            Icons.inventory_2,\n            size: 12.sp,\n            color: canAddCarton ? const Color(0xFF059669) : Colors.grey,\n          ),\n          SizedBox(width: 4.w),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'كارتونة: $cartonQuantity قطعة',\n                  style: TextStyle(\n                    fontSize: 10.sp,\n                    color: canAddCarton ? const Color(0xFF059669) : Colors.grey,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n                if (!canAddCarton)\n                  Text(\n                    'يتطلب $cartonQuantity قطعة (متوفر: $availableQuantity)',\n                    style: TextStyle(\n                      fontSize: 8.sp,\n                      color: Colors.grey[600],\n                      fontStyle: FontStyle.italic,\n                    ),\n                  ),\n              ],\n            ),\n          ),\n          // إظهار زر الإضافة فقط إذا كانت الكمية كافية\n          if (canAddCarton)\n            Material(\n              color: Colors.transparent,\n              child: InkWell(\n                onTap: () {\n                  HapticFeedback.lightImpact();\n                  // إضافة كارتونة كاملة\n                  controller.updateQuantity(\n                    item.productId,\n                    item.quantity + cartonQuantity,\n                  );\n                },\n                borderRadius: BorderRadius.circular(4.r),\n                splashColor: const Color(0xFF059669).withOpacity(0.3),\n                highlightColor: const Color(0xFF059669).withOpacity(0.1),\n                child: AnimatedContainer(\n                  duration: const Duration(milliseconds: 150),\n                  padding: EdgeInsets.symmetric(horizontal: 6.w, vertical: 2.h),\n                  decoration: BoxDecoration(\n                    color: const Color(0xFF059669),\n                    borderRadius: BorderRadius.circular(4.r),\n                  ),\n                  child: Text(\n                    'أضف',\n                    style: TextStyle(\n                      fontSize: 8.sp,\n                      color: Colors.white,\n                      fontWeight: FontWeight.w600,\n                    ),\n                  ),\n                ),\n              ),\n            )\n          else\n            // إظهار رسالة عدم توفر كمية كافية\n            Container(\n              padding: EdgeInsets.symmetric(horizontal: 6.w, vertical: 2.h),\n              decoration: BoxDecoration(\n                color: Colors.grey,\n                borderRadius: BorderRadius.circular(4.r),\n              ),\n              child: Text(\n                'غير متاح',\n                style: TextStyle(\n                  fontSize: 8.sp,\n                  color: Colors.white,\n                  fontWeight: FontWeight.w600,\n                ),\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildPriceDisplay(double price) {\n    final formatter = NumberFormat('#,###', 'ar');\n    return Container(\n      padding: EdgeInsets.symmetric(horizontal: 10.w, vertical: 6.h),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          colors: [\n            const Color(0xFF6366F1).withOpacity(0.1),\n            const Color(0xFF8B5CF6).withOpacity(0.05),\n          ],\n        ),\n        borderRadius: BorderRadius.circular(8.r),\n        border: Border.all(\n          color: const Color(0xFF6366F1).withOpacity(0.2),\n          width: 1,\n        ),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          Icon(\n            Icons.monetization_on_rounded,\n            size: 14.sp,\n            color: const Color(0xFF6366F1),\n          ),\n          SizedBox(width: 4.w),\n          Text(\n            '${formatter.format(price.toInt())} د.ع',\n            style: TextStyle(\n              fontSize: 14.sp,\n              fontWeight: FontWeight.bold,\n              color: const Color(0xFF6366F1),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildQuantityControls(\n    CartItem item,\n    RetailCartController controller,\n  ) {\n    // حساب الكمية المتوفرة\n    final int originalQuantity = (item.productData['quantity'] as int?) ?? 0;\n    final int availableQuantity = originalQuantity - item.quantity;\n\n    return Container(\n      decoration: BoxDecoration(\n        color: const Color(0xFFF8FAFC),\n        borderRadius: BorderRadius.circular(10.r),\n        border: Border.all(color: const Color(0xFFE5E7EB), width: 1),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          _buildQuantityButton(\n            icon: Icons.remove,\n            onPressed: () {\n              HapticFeedback.lightImpact();\n              controller.updateQuantity(item.productId, item.quantity - 1);\n            },\n            isEnabled: item.quantity > 1,\n          ),\n          Container(\n            padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 8.h),\n            child: Text(\n              '${item.quantity}',\n              style: TextStyle(\n                fontSize: 16.sp,\n                fontWeight: FontWeight.bold,\n                color: const Color(0xFF1F2937),\n              ),\n            ),\n          ),\n          _buildQuantityButton(\n            icon: Icons.add,\n            onPressed: () {\n              if (availableQuantity > 0) {\n                HapticFeedback.lightImpact();\n                controller.updateQuantity(item.productId, item.quantity + 1);\n              }\n            },\n            isEnabled: availableQuantity > 0,\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildQuantityButton({\n    required IconData icon,\n    required VoidCallback onPressed,\n    required bool isEnabled,\n  }) {\n    return Material(\n      color: Colors.transparent,\n      child: InkWell(\n        onTap:\n            isEnabled\n                ? () {\n                  HapticFeedback.lightImpact();\n                  onPressed();\n                }\n                : null,\n        borderRadius: BorderRadius.circular(8.r),\n        splashColor:\n            isEnabled\n                ? const Color(0xFF6366F1).withOpacity(0.3)\n                : Colors.transparent,\n        highlightColor:\n            isEnabled\n                ? const Color(0xFF6366F1).withOpacity(0.1)\n                : Colors.transparent,\n        child: AnimatedContainer(\n          duration: const Duration(milliseconds: 150),\n          width: 32.w,\n          height: 32.w,\n          decoration: BoxDecoration(\n            color:\n                isEnabled ? const Color(0xFF6366F1) : const Color(0xFFE5E7EB),\n            borderRadius: BorderRadius.circular(8.r),\n          ),\n          child: Icon(\n            icon,\n            size: 18.sp,\n            color: isEnabled ? Colors.white : const Color(0xFF9CA3AF),\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildTotalPrice(CartItem item) {\n    final formatter = NumberFormat('#,###', 'ar');\n    return Container(\n      padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          colors: [const Color(0xFF10B981), const Color(0xFF059669)],\n        ),\n        borderRadius: BorderRadius.circular(10.r),\n        boxShadow: [\n          BoxShadow(\n            color: const Color(0xFF10B981).withOpacity(0.3),\n            blurRadius: 8.r,\n            offset: Offset(0, 2.h),\n          ),\n        ],\n      ),\n      child: Text(\n        '${formatter.format(item.totalPrice.toInt())} د.ع',\n        style: TextStyle(\n          fontSize: 12.sp,\n          fontWeight: FontWeight.bold,\n          color: Colors.white,\n        ),\n      ),\n    );\n  }\n\n  Widget _buildDeleteButton(CartItem item, RetailCartController controller) {\n    return Material(\n      color: Colors.transparent,\n      child: InkWell(\n        onTap: () {\n          HapticFeedback.mediumImpact();\n          _showDeleteConfirmation(item, controller);\n        },\n        borderRadius: BorderRadius.circular(8.r),\n        splashColor: Colors.red.withOpacity(0.3),\n        highlightColor: Colors.red.withOpacity(0.1),\n        child: AnimatedContainer(\n          duration: const Duration(milliseconds: 150),\n          width: 32.w,\n          height: 32.w,\n          decoration: BoxDecoration(\n            color: Colors.red.withOpacity(0.1),\n            borderRadius: BorderRadius.circular(8.r),\n            border: Border.all(color: Colors.red.withOpacity(0.2), width: 1),\n          ),\n          child: Icon(\n            Icons.delete_outline_rounded,\n            color: Colors.red,\n            size: 16.sp,\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildBottomSection(RetailCartController controller) {\n    final formatter = NumberFormat('#,###', 'ar');\n\n    return Container(\n      padding: EdgeInsets.fromLTRB(20.w, 16.h, 20.w, 20.h),\n      decoration: BoxDecoration(\n        color: Colors.white,\n        borderRadius: BorderRadius.only(\n          topLeft: Radius.circular(20.r),\n          topRight: Radius.circular(20.r),\n        ),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.1),\n            spreadRadius: 0,\n            blurRadius: 20.r,\n            offset: Offset(0, -5.h),\n          ),\n        ],\n      ),\n      child: SafeArea(\n        child: Column(\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            // تفاصيل الحساب المُحسنة - مُقلصة الحجم\n            _buildCompactPriceBreakdown(controller, formatter),\n\n            SizedBox(height: 16.h),\n\n            // زر إتمام الشراء\n            _buildCheckoutButton(controller),\n          ],\n        ),\n      ),\n    ).animate().slideY(\n      begin: 1,\n      end: 0,\n      duration: 500.ms,\n      curve: Curves.easeOutBack,\n    );\n  }\n\n  Widget _buildCompactPriceBreakdown(\n    RetailCartController controller,\n    NumberFormat formatter,\n  ) {\n    return Container(\n      padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n          colors: [\n            const Color(0xFF6366F1).withOpacity(0.05),\n            const Color(0xFF8B5CF6).withOpacity(0.02),\n          ],\n        ),\n        borderRadius: BorderRadius.circular(12.r),\n        border: Border.all(\n          color: const Color(0xFF6366F1).withOpacity(0.1),\n          width: 1,\n        ),\n      ),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        children: [\n          Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                'المجموع الكلي',\n                style: TextStyle(\n                  fontSize: 14.sp,\n                  fontWeight: FontWeight.w600,\n                  color: const Color(0xFF1F2937),\n                ),\n              ),\n              Obx(\n                () => Text(\n                  '${controller.itemCount} منتج',\n                  style: TextStyle(\n                    fontSize: 12.sp,\n                    color: const Color(0xFF6B7280),\n                  ),\n                ),\n              ),\n            ],\n          ),\n          Obx(\n            () => Container(\n              padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),\n              decoration: BoxDecoration(\n                gradient: LinearGradient(\n                  colors: [const Color(0xFF10B981), const Color(0xFF059669)],\n                ),\n                borderRadius: BorderRadius.circular(8.r),\n              ),\n              child: Text(\n                    '${formatter.format(controller.totalAmount.value.toInt())} د.ع',\n                    style: TextStyle(\n                      fontSize: 16.sp,\n                      fontWeight: FontWeight.bold,\n                      color: Colors.white,\n                    ),\n                  )\n                  .animate(key: ValueKey(controller.totalAmount.value))\n                  .scale(duration: 300.ms, curve: Curves.elasticOut)\n                  .then()\n                  .shimmer(\n                    duration: 500.ms,\n                    color: Colors.white.withOpacity(0.3),\n                  ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildCheckoutButton(RetailCartController controller) {\n    return Container(\n          width: double.infinity,\n          height: 50.h,\n          decoration: BoxDecoration(\n            gradient: LinearGradient(\n              begin: Alignment.centerLeft,\n              end: Alignment.centerRight,\n              colors: [\n                const Color(0xFF6366F1),\n                const Color(0xFF8B5CF6),\n                const Color(0xFF6366F1),\n              ],\n            ),\n            borderRadius: BorderRadius.circular(16.r),\n            boxShadow: [\n              BoxShadow(\n                color: const Color(0xFF6366F1).withOpacity(0.4),\n                blurRadius: 15.r,\n                offset: Offset(0, 8.h),\n              ),\n            ],\n          ),\n          child: Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                if (controller.cartItems.isNotEmpty) {\n                  HapticFeedback.mediumImpact();\n                  Get.toNamed('/location-picker');\n                }\n              },\n              borderRadius: BorderRadius.circular(16.r),\n              splashColor: Colors.white.withOpacity(0.3),\n              highlightColor: Colors.white.withOpacity(0.1),\n              child: Container(\n                padding: EdgeInsets.symmetric(vertical: 16.h),\n                child: Row(\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  children: [\n                    Icon(\n                      Icons.shopping_bag_outlined,\n                      color: Colors.white,\n                      size: 20.sp,\n                    ),\n                    SizedBox(width: 12.w),\n                    Text(\n                      'إتمام عملية الشراء',\n                      style: TextStyle(\n                        fontSize: 16.sp,\n                        fontWeight: FontWeight.bold,\n                        color: Colors.white,\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ),\n        )\n        .animate()\n        .scale(duration: 200.ms, curve: Curves.easeOut)\n        .then()\n        .shimmer(duration: 2000.ms, color: Colors.white.withOpacity(0.2));\n  }\n\n  void _showClearCartDialog(RetailCartController controller) {\n    final isMultipleStores = controller.totalStoresCount > 1;\n    final currentStoreName = controller.currentStore?.shopName ?? 'المتجر';\n\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(16.r),\n        ),\n        title: Row(\n          children: [\n            Icon(\n              Icons.warning_amber_rounded,\n              color: Colors.orange,\n              size: 24.sp,\n            ),\n            SizedBox(width: 8.w),\n            Text(\n              isMultipleStores ? 'مسح سلة المتجر' : 'مسح السلة',\n              style: TextStyle(\n                fontSize: 18.sp,\n                fontWeight: FontWeight.bold,\n                color: const Color(0xFF1F2937),\n              ),\n            ),\n          ],\n        ),\n        content: Text(\n          isMultipleStores\n              ? 'هل أنت متأكد من مسح جميع العناصر من سلة \"$currentStoreName\"؟'\n              : 'هل أنت متأكد من مسح جميع العناصر من السلة؟',\n          style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () {\n              HapticFeedback.selectionClick();\n              Get.back();\n            },\n            child: Text(\n              'إلغاء',\n              style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n            ),\n          ),\n          Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                HapticFeedback.mediumImpact();\n                controller.clearCart();\n                Get.back();\n              },\n              borderRadius: BorderRadius.circular(8.r),\n              splashColor: Colors.red.withOpacity(0.3),\n              highlightColor: Colors.red.withOpacity(0.1),\n              child: Container(\n                padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n                decoration: BoxDecoration(\n                  color: Colors.red,\n                  borderRadius: BorderRadius.circular(8.r),\n                ),\n                child: Text(\n                  'مسح',\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    color: Colors.white,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// حوار مسح سلة متجر معين\n  void _showClearStoreDialog(RetailCartController controller, store) {\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(16.r),\n        ),\n        title: Row(\n          children: [\n            Icon(Icons.warning_amber_rounded, color: Colors.red, size: 24.sp),\n            SizedBox(width: 8.w),\n            Text(\n              'مسح سلة المتجر',\n              style: TextStyle(\n                fontSize: 18.sp,\n                fontWeight: FontWeight.bold,\n                color: const Color(0xFF1F2937),\n              ),\n            ),\n          ],\n        ),\n        content: Text(\n          'هل أنت متأكد من مسح جميع العناصر من سلة \"${store.shopName}\"؟',\n          style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () {\n              HapticFeedback.selectionClick();\n              Get.back();\n            },\n            child: Text(\n              'إلغاء',\n              style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n            ),\n          ),\n          Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                HapticFeedback.mediumImpact();\n                controller.clearStoreCart(store.uid);\n                Get.back();\n              },\n              borderRadius: BorderRadius.circular(8.r),\n              splashColor: Colors.red.withOpacity(0.3),\n              highlightColor: Colors.red.withOpacity(0.1),\n              child: Container(\n                padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n                decoration: BoxDecoration(\n                  color: Colors.red,\n                  borderRadius: BorderRadius.circular(8.r),\n                ),\n                child: Text(\n                  'مسح',\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    color: Colors.white,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// حوار مسح جميع السلال\n  void _showClearAllStoresDialog(RetailCartController controller) {\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(16.r),\n        ),\n        title: Row(\n          children: [\n            Icon(Icons.warning_amber_rounded, color: Colors.red, size: 24.sp),\n            SizedBox(width: 8.w),\n            Text(\n              'مسح جميع السلال',\n              style: TextStyle(\n                fontSize: 18.sp,\n                fontWeight: FontWeight.bold,\n                color: const Color(0xFF1F2937),\n              ),\n            ),\n          ],\n        ),\n        content: Text(\n          'هل أنت متأكد من مسح جميع العناصر من كل المتاجر؟ لا يمكن التراجع عن هذا الإجراء.',\n          style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () {\n              HapticFeedback.selectionClick();\n              Get.back();\n            },\n            child: Text(\n              'إلغاء',\n              style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n            ),\n          ),\n          Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                HapticFeedback.mediumImpact();\n                controller.clearAllCarts();\n                Get.back();\n              },\n              borderRadius: BorderRadius.circular(8.r),\n              splashColor: Colors.red.withOpacity(0.3),\n              highlightColor: Colors.red.withOpacity(0.1),\n              child: Container(\n                padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n                decoration: BoxDecoration(\n                  color: Colors.red,\n                  borderRadius: BorderRadius.circular(8.r),\n                ),\n                child: Text(\n                  'مسح الكل',\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    color: Colors.white,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  void _showDeleteConfirmation(CartItem item, RetailCartController controller) {\n    Get.dialog(\n      AlertDialog(\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(16.r),\n        ),\n        title: Text(\n          'حذف المنتج',\n          style: TextStyle(\n            fontSize: 18.sp,\n            fontWeight: FontWeight.bold,\n            color: const Color(0xFF1F2937),\n          ),\n        ),\n        content: Text(\n          'هل تريد حذف \"${item.productName}\" من السلة؟',\n          style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n        ),\n        actions: [\n          TextButton(\n            onPressed: () {\n              HapticFeedback.selectionClick();\n              Get.back();\n            },\n            child: Text(\n              'إلغاء',\n              style: TextStyle(fontSize: 14.sp, color: const Color(0xFF6B7280)),\n            ),\n          ),\n          Material(\n            color: Colors.transparent,\n            child: InkWell(\n              onTap: () {\n                HapticFeedback.mediumImpact();\n                controller.removeFromCart(item.productId);\n                Get.back();\n              },\n              borderRadius: BorderRadius.circular(8.r),\n              splashColor: Colors.red.withOpacity(0.3),\n              highlightColor: Colors.red.withOpacity(0.1),\n              child: Container(\n                padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n                decoration: BoxDecoration(\n                  color: Colors.red,\n                  borderRadius: BorderRadius.circular(8.r),\n                ),\n                child: Text(\n                  'حذف',\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    color: Colors.white,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n"
        }
    ]
}