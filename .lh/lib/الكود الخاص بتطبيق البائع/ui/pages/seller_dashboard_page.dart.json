{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/ui/pages/seller_dashboard_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752704601225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752704601225,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:get/get.dart';\nimport '../../addItem/addItem.dart'; // <-- استيراد شاشة إضافة المنتج\nimport '../../controllers/orders_controller.dart';\nimport '../../controllers/seller_main_controller.dart';\nimport '../../controllers/sales_analytics_controller.dart';\nimport 'sales_details_page.dart';\n\nclass SellerDashboardPage extends StatelessWidget {\n  const SellerDashboardPage({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    // الحصول على متحكم الطلبات\n    final OrdersController ordersController = Get.find<OrdersController>();\n    // إنشاء متحكم المبيعات\n    final SalesAnalyticsController salesController = Get.put(SalesAnalyticsController());\n    \n    // مثال مبدئي لمحتوى لوحة التحكم\n    // سنستخدم GridView لترتيب البطاقات بشكل متجاوب\n    return Padding(\n      padding: EdgeInsets.all(16.w),\n      child: GridView.count(\n        crossAxisCount: _calculateCrossAxisCount(context),\n        crossAxisSpacing: 16.w,\n        mainAxisSpacing: 16.h,\n        childAspectRatio: 1.1, // نسبة العرض إلى الارتفاع لتجنب الـ overflow\n        children: <Widget>[\n          _buildDashboardCard(\n            context: context,\n            icon: Icons.add_shopping_cart, // أيقونة مناسبة لإضافة منتج\n            title: 'إضافة منتج جديد',\n            value: 'بدء الإضافة', // نص وصفي للبطاقة\n            color: Colors.blueAccent, // لون مميز للبطاقة\n            onTap: () {\n              Navigator.push(\n                context,\n                MaterialPageRoute(builder: (context) => const AddItem()), // الانتقال إلى شاشة AddItem\n              );\n            },\n          ),\n          // بطاقة الطلبات الجديدة مع Badge\n          Obx(() => _buildDashboardCard(\n            context: context,\n            icon: Icons.shopping_cart_checkout,\n            title: 'الطلبات الجديدة',\n            value: ordersController.newOrdersCount.value.toString(), // العدد الفعلي من المتحكم\n            color: ordersController.newOrdersCount.value > 0 ? Colors.orange : Colors.grey,\n            onTap: () {\n              // الانتقال إلى تبويب الطلبات\n              final mainController = Get.find<SellerMainController>();\n              mainController.changePageIndex(2);\n            },\n            showBadge: ordersController.newOrdersCount.value > 0,\n            badgeCount: ordersController.newOrdersCount.value,\n          )),\n\n\n\n          _buildDashboardCard(\n            context: context,\n            icon: Icons.store_mall_directory,\n            title: 'السوق - متاجر الجملة',\n            value: 'تصفح',\n            color: Colors.indigo,\n            onTap: () {\n              // الانتقال إلى تبويب السوق\n              final mainController = Get.find<SellerMainController>();\n              mainController.changePageIndex(3);\n            },\n          ),\n\n\n          // بطاقة المبيعات التفاعلية\n          Obx(() => _buildDashboardCard(\n            context: context,\n            icon: Icons.attach_money,\n            title: 'إجمالي المبيعات (اليوم)',\n            value: salesController.isLoading.value \n                ? 'جارٍ التحميل...' \n                : '${salesController.totalDailyRevenue.value.toStringAsFixed(0)} د.ع',\n            color: Colors.green,\n            onTap: () {\n              Get.to(() => const SalesDetailsPage());\n            },\n          )),\n          _buildDashboardCard(\n            context: context,\n            icon: Icons.inventory_2,\n            title: 'المنتجات المتاحة',\n            value: '24', // قيمة وهمية\n            color: Colors.purple,\n          ),\n          _buildDashboardCard(\n            context: context,\n            icon: Icons.trending_up,\n            title: 'نمو المبيعات',\n            value: '+15%', // قيمة وهمية\n            color: Colors.teal,\n          ),\n          _buildDashboardCard(\n            context: context,\n            icon: Icons.star_rate,\n            title: 'تقييم المتجر',\n            value: '4.8', // قيمة وهمية\n            color: Colors.amber,\n          ),\n          // بطاقة السوق الجديدة\n\n        ],\n      ),\n    );\n  }\n\n  // دالة لحساب عدد الأعمدة بناءً على عرض الشاشة\n  int _calculateCrossAxisCount(BuildContext context) {\n    double screenWidth = MediaQuery.of(context).size.width;\n    if (screenWidth > 1200.w) {\n      return 4; // شاشات كبيرة جداً\n    } else if (screenWidth > 800.w) {\n      return 3; // شاشات كبيرة (تابلت أفقي، سطح مكتب)\n    } else if (screenWidth > 600.w) {\n      return 2; // شاشات متوسطة (تابلت عمودي)\n    } else {\n      return 2; // شاشات صغيرة (هاتف)\n    }\n  }\n\n  // دالة لبناء كل بطاقة في لوحة التحكم\n  Widget _buildDashboardCard({\n    required BuildContext context,\n    required IconData icon,\n    required String title,\n    required String value,\n    required Color color,\n    VoidCallback? onTap,\n    bool showBadge = false,\n    int badgeCount = 0,\n  }) {\n    return Card(\n      elevation: 4.h,\n      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),\n      child: InkWell(\n        onTap: onTap, // للانتقال إلى تفاصيل عند النقر (اختياري)\n        borderRadius: BorderRadius.circular(12.r),\n        child: Container(\n          padding: EdgeInsets.all(12.w),\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.center,\n            crossAxisAlignment: CrossAxisAlignment.center,\n            mainAxisSize: MainAxisSize.min, // تقليل حجم الـ Column\n            children: <Widget>[\n              // أيقونة مع Badge اختياري\n              Flexible(\n                child: showBadge && badgeCount > 0\n                    ? Badge(\n                        label: Text(\n                          badgeCount.toString(),\n                          style: TextStyle(\n                            color: Colors.white,\n                            fontSize: 8.sp,\n                            fontWeight: FontWeight.bold,\n                          ),\n                        ),\n                        backgroundColor: Colors.red,\n                        child: Icon(icon, size: 32.sp, color: color),\n                      )\n                    : Icon(icon, size: 32.sp, color: color),\n              ),\n              SizedBox(height: 8.h),\n              Flexible(\n                child: Text(\n                  value,\n                  style: TextStyle(\n                    fontSize: 16.sp,\n                    fontWeight: FontWeight.bold,\n                    color: color,\n                  ),\n                  textAlign: TextAlign.center,\n                  maxLines: 1,\n                  overflow: TextOverflow.ellipsis,\n                ),\n              ),\n              SizedBox(height: 4.h),\n              Flexible(\n                child: Text(\n                  title,\n                  style: TextStyle(\n                    fontSize: 12.sp,\n                    color: Colors.grey[700],\n                  ),\n                  textAlign: TextAlign.center,\n                  maxLines: 2,\n                  overflow: TextOverflow.ellipsis,\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n} "
        }
    ]
}