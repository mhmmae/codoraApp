{
    "sourceFile": "lib/الكود الخاص بتطبيق البائع/ui/widgets/marketplace_store_card.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752570376953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752570376953,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport '../../../Model/SellerModel.dart';\nimport '../theme/marketplace_colors.dart';\n\n/// بطاقة متجر احترافية قابلة لإعادة الاستخدام\nclass MarketplaceStoreCard extends StatelessWidget {\n  final SellerModel store;\n  final VoidCallback onTap;\n  final bool isGridView;\n  final int index;\n\n  const MarketplaceStoreCard({\n    super.key,\n    required this.store,\n    required this.onTap,\n    this.isGridView = false,\n    this.index = 0,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: EdgeInsets.only(bottom: isGridView ? 0 : 16.h),\n      decoration: BoxDecoration(\n        color: MarketplaceColors.backgroundWhite,\n        borderRadius: BorderRadius.circular(\n          MarketplaceDimensions.radiusXLarge.r,\n        ),\n        boxShadow: MarketplaceColors.mediumShadow,\n      ),\n      child: Material(\n        color: Colors.transparent,\n        child: InkWell(\n          borderRadius: BorderRadius.circular(\n            MarketplaceDimensions.radiusXLarge.r,\n          ),\n          onTap: onTap,\n          child: isGridView ? _buildGridCard() : _buildListCard(),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildGridCard() {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        // صورة المتجر\n        Expanded(\n          flex: 3,\n          child: _buildStoreImage(\n            width: double.infinity,\n            height: double.infinity,\n            borderRadius: BorderRadius.only(\n              topLeft: Radius.circular(MarketplaceDimensions.radiusXLarge.r),\n              topRight: Radius.circular(MarketplaceDimensions.radiusXLarge.r),\n            ),\n          ),\n        ),\n\n        // معلومات المتجر\n        Expanded(\n          flex: 2,\n          child: Padding(\n            padding: EdgeInsets.all(MarketplaceDimensions.paddingMedium.w),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n              children: [_buildStoreHeader(), _buildStoreFooter()],\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n\n  Widget _buildListCard() {\n    return Padding(\n      padding: EdgeInsets.all(MarketplaceDimensions.paddingMedium.w),\n      child: Row(\n        children: [\n          // صورة المتجر\n          _buildStoreImage(\n            width: MarketplaceDimensions.imageMedium.w,\n            height: MarketplaceDimensions.imageMedium.h,\n            borderRadius: BorderRadius.circular(\n              MarketplaceDimensions.radiusLarge.r,\n            ),\n          ),\n\n          SizedBox(width: MarketplaceDimensions.spaceMedium.w),\n\n          // معلومات المتجر\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                _buildStoreHeader(),\n                SizedBox(height: MarketplaceDimensions.spaceSmall.h),\n                if (store.sellerName.isNotEmpty) ...[\n                  _buildSellerInfo(),\n                  SizedBox(height: MarketplaceDimensions.spaceSmall.h),\n                ],\n                Row(\n                  children: [\n                    if (store.shopCategories.isNotEmpty) ...[\n                      _buildCategoryChip(),\n                      const Spacer(),\n                    ],\n                    _buildVerificationBadge(),\n                  ],\n                ),\n              ],\n            ),\n          ),\n\n          SizedBox(width: MarketplaceDimensions.spaceSmall.w),\n\n          // سهم التنقل\n          Icon(\n            Icons.arrow_forward_ios_rounded,\n            size: MarketplaceDimensions.iconSmall.sp,\n            color: MarketplaceColors.textLight,\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildStoreImage({\n    required double width,\n    required double height,\n    required BorderRadius borderRadius,\n  }) {\n    return Container(\n      width: width,\n      height: height,\n      decoration: BoxDecoration(\n        borderRadius: borderRadius,\n        gradient: MarketplaceColors.cardGradient,\n      ),\n      child: ClipRRect(\n        borderRadius: borderRadius,\n        child: Stack(\n          children: [\n            // الصورة أو الرمز الافتراضي\n            store.shopFrontImageUrl != null &&\n                    store.shopFrontImageUrl!.isNotEmpty\n                ? Image.network(\n                  store.shopFrontImageUrl!,\n                  width: width,\n                  height: height,\n                  fit: BoxFit.cover,\n                  errorBuilder:\n                      (context, error, stackTrace) => _buildDefaultImage(),\n                  loadingBuilder: (context, child, loadingProgress) {\n                    if (loadingProgress == null) return child;\n                    return Center(\n                      child: CircularProgressIndicator(\n                        strokeWidth: 2.w,\n                        color: MarketplaceColors.primaryBlue,\n                        value:\n                            loadingProgress.expectedTotalBytes != null\n                                ? loadingProgress.cumulativeBytesLoaded /\n                                    loadingProgress.expectedTotalBytes!\n                                : null,\n                      ),\n                    );\n                  },\n                )\n                : _buildDefaultImage(),\n\n            // تدرج خفيف للتحسين البصري\n            if (store.shopFrontImageUrl?.isNotEmpty ?? false)\n              Container(\n                decoration: BoxDecoration(\n                  borderRadius: borderRadius,\n                  gradient: LinearGradient(\n                    begin: Alignment.topCenter,\n                    end: Alignment.bottomCenter,\n                    colors: [Colors.transparent, Colors.black.withOpacity(0.1)],\n                  ),\n                ),\n              ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  Widget _buildDefaultImage() {\n    return Container(\n      decoration: const BoxDecoration(gradient: MarketplaceColors.cardGradient),\n      child: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            Icon(\n              Icons.storefront_rounded,\n              size: 32.sp,\n              color: MarketplaceColors.primaryBlue.withOpacity(0.7),\n            ),\n            if (!isGridView) ...[\n              SizedBox(height: 4.h),\n              Text(\n                'صورة المتجر',\n                style: TextStyle(\n                  fontSize: 10.sp,\n                  color: MarketplaceColors.textLight,\n                ),\n              ),\n            ],\n          ],\n        ),\n      ),\n    );\n  }\n\n  Widget _buildStoreHeader() {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        // اسم المتجر\n        Text(\n          store.shopName,\n          style: TextStyle(\n            fontSize: isGridView ? 14.sp : 16.sp,\n            fontWeight: FontWeight.bold,\n            color: MarketplaceColors.textPrimary,\n          ),\n          maxLines: 1,\n          overflow: TextOverflow.ellipsis,\n        ),\n\n        // فئة المتجر في العرض الشبكي\n        if (isGridView && store.shopCategories.isNotEmpty) ...[\n          SizedBox(height: MarketplaceDimensions.spaceTiny.h),\n          _buildCategoryChip(),\n        ],\n      ],\n    );\n  }\n\n  Widget _buildStoreFooter() {\n    return Row(\n      children: [\n        _buildVerificationBadge(),\n        if (store.shopPhoneNumber.isNotEmpty) ...[\n          const Spacer(),\n          _buildCallIcon(),\n        ],\n      ],\n    );\n  }\n\n  Widget _buildSellerInfo() {\n    return Text(\n      'البائع: ${store.sellerName}',\n      style: TextStyle(fontSize: 12.sp, color: MarketplaceColors.textSecondary),\n      maxLines: 1,\n      overflow: TextOverflow.ellipsis,\n    );\n  }\n\n  Widget _buildCategoryChip() {\n    return Container(\n      padding: EdgeInsets.symmetric(\n        horizontal: MarketplaceDimensions.paddingSmall.w,\n        vertical: MarketplaceDimensions.paddingTiny.h,\n      ),\n      decoration: BoxDecoration(\n        color: MarketplaceColors.primaryBlue.withOpacity(0.1),\n        borderRadius: BorderRadius.circular(\n          MarketplaceDimensions.radiusSmall.r,\n        ),\n        border: Border.all(\n          color: MarketplaceColors.primaryBlue.withOpacity(0.2),\n          width: 1,\n        ),\n      ),\n      child: Text(\n        store.shopCategories.join(', '),\n        style: TextStyle(\n          fontSize: 10.sp,\n          color: MarketplaceColors.primaryBlue,\n          fontWeight: FontWeight.w600,\n        ),\n      ),\n    );\n  }\n\n  Widget _buildVerificationBadge() {\n    return Container(\n      padding: EdgeInsets.symmetric(\n        horizontal: MarketplaceDimensions.paddingSmall.w,\n        vertical: MarketplaceDimensions.paddingTiny.h,\n      ),\n      decoration: BoxDecoration(\n        color: MarketplaceColors.success.withOpacity(0.1),\n        borderRadius: BorderRadius.circular(\n          MarketplaceDimensions.radiusSmall.r,\n        ),\n        border: Border.all(\n          color: MarketplaceColors.success.withOpacity(0.3),\n          width: 1,\n        ),\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          Icon(\n            Icons.verified_rounded,\n            size: isGridView ? 10.sp : 12.sp,\n            color: MarketplaceColors.success,\n          ),\n          SizedBox(width: 2.w),\n          Text(\n            'بائع جملة',\n            style: TextStyle(\n              fontSize: isGridView ? 8.sp : 10.sp,\n              color: MarketplaceColors.success,\n              fontWeight: FontWeight.w600,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildCallIcon() {\n    return Container(\n      padding: EdgeInsets.all(MarketplaceDimensions.paddingTiny.w),\n      decoration: BoxDecoration(\n        color: MarketplaceColors.info.withOpacity(0.1),\n        borderRadius: BorderRadius.circular(\n          MarketplaceDimensions.radiusSmall.r,\n        ),\n      ),\n      child: Icon(\n        Icons.phone_rounded,\n        size: MarketplaceDimensions.iconSmall.sp,\n        color: MarketplaceColors.info,\n      ),\n    );\n  }\n}\n\n/// بطاقة متجر مع تأثيرات انيميشن\nclass AnimatedMarketplaceStoreCard extends StatefulWidget {\n  final SellerModel store;\n  final VoidCallback onTap;\n  final bool isGridView;\n  final int index;\n  final Duration animationDelay;\n\n  const AnimatedMarketplaceStoreCard({\n    super.key,\n    required this.store,\n    required this.onTap,\n    this.isGridView = false,\n    this.index = 0,\n    this.animationDelay = Duration.zero,\n  });\n\n  @override\n  State<AnimatedMarketplaceStoreCard> createState() =>\n      _AnimatedMarketplaceStoreCardState();\n}\n\nclass _AnimatedMarketplaceStoreCardState\n    extends State<AnimatedMarketplaceStoreCard>\n    with SingleTickerProviderStateMixin {\n  late AnimationController _animationController;\n  late Animation<double> _scaleAnimation;\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n\n  @override\n  void initState() {\n    super.initState();\n    _animationController = AnimationController(\n      duration: MarketplaceAnimations.staggered,\n      vsync: this,\n    );\n\n    _scaleAnimation = Tween<double>(begin: 0.8, end: 1.0).animate(\n      CurvedAnimation(\n        parent: _animationController,\n        curve: MarketplaceAnimations.easeOutBack,\n      ),\n    );\n\n    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n      CurvedAnimation(\n        parent: _animationController,\n        curve: MarketplaceAnimations.easeInOut,\n      ),\n    );\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.3),\n      end: Offset.zero,\n    ).animate(\n      CurvedAnimation(\n        parent: _animationController,\n        curve: MarketplaceAnimations.easeOutBack,\n      ),\n    );\n\n    // بدء الانيميشن مع تأخير\n    Future.delayed(widget.animationDelay, () {\n      if (mounted) {\n        _animationController.forward();\n      }\n    });\n  }\n\n  @override\n  void dispose() {\n    _animationController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return AnimatedBuilder(\n      animation: _animationController,\n      builder: (context, child) {\n        return Transform.scale(\n          scale: _scaleAnimation.value,\n          child: Transform.translate(\n            offset: _slideAnimation.value * 50,\n            child: Opacity(\n              opacity: _fadeAnimation.value,\n              child: MarketplaceStoreCard(\n                store: widget.store,\n                onTap: widget.onTap,\n                isGridView: widget.isGridView,\n                index: widget.index,\n              ),\n            ),\n          ),\n        );\n      },\n    );\n  }\n}\n"
        }
    ]
}