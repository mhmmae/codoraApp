{
    "sourceFile": "lib/الكود الخاص بتطبيق العميل /HomePage/class/FavoritesScreen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752945959883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752949592546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1187,9 +1187,9 @@\n           }\n \n           // إضافة رابط للصورة بشكل أكثر تنظيماً\n           if (item.imageUrl?.isNotEmpty == true) {\n-            shareText.writeln('   � رابط الصورة: ${item.imageUrl}');\n+            shareText.writeln('   \udd17 رابط الصورة: ${item.imageUrl}');\n           }\n \n           shareText.writeln('   ────────────────────');\n           shareText.writeln('');\n"
                }
            ],
            "date": 1752945959883,
            "name": "Commit-0",
            "content": "import 'package:cloud_firestore/cloud_firestore.dart';\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart';\nimport 'package:cached_network_image/cached_network_image.dart';\nimport 'package:shimmer/shimmer.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:flutter/services.dart';\n\n// استيراد شاشة تفاصيل المنتج\nimport '../../../Model/model_item.dart';\nimport '../../../XXX/xxx_firebase.dart';\nimport 'DetailsOfItemScreen.dart';\n// (اختياري) استيراد زر الإضافة/الإزالة إذا أردت عرضه هنا\nimport 'FavoriteController.dart';\n\nclass FavoritesScreen extends StatelessWidget {\n  const FavoritesScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    // حقن أو إيجاد متحكم المفضلة\n    final FavoriteController favoriteCtrl = Get.put(FavoriteController());\n    final theme = Theme.of(context);\n\n    // متحكمات للتفاعل\n    final RxBool isGridView = false.obs;\n    final RxString searchQuery = ''.obs;\n    final RxString sortBy = 'recent'.obs; // recent, name, price\n    final RxBool isAscending = true.obs;\n\n    return Scaffold(\n      backgroundColor: theme.scaffoldBackgroundColor,\n      body: CustomScrollView(\n        slivers: [\n          // AppBar متقدم مع تأثيرات بصرية\n          SliverAppBar(\n            expandedHeight: 200.h,\n            floating: false,\n            pinned: true,\n            elevation: 0,\n            backgroundColor: theme.primaryColor,\n            foregroundColor: Colors.white,\n            systemOverlayStyle: SystemUiOverlayStyle.light,\n            flexibleSpace: FlexibleSpaceBar(\n              title: AnimatedDefaultTextStyle(\n                duration: const Duration(milliseconds: 300),\n                style: TextStyle(\n                  color: Colors.white,\n                  fontSize: 20.sp,\n                  fontWeight: FontWeight.bold,\n                  shadows: [\n                    Shadow(\n                      color: Colors.black.withValues(alpha: 0.3),\n                      offset: const Offset(0, 1),\n                      blurRadius: 3,\n                    ),\n                  ],\n                ),\n                child: const Text('قائمة المفضلة'),\n              ),\n              background: Container(\n                decoration: BoxDecoration(\n                  gradient: LinearGradient(\n                    begin: Alignment.topLeft,\n                    end: Alignment.bottomRight,\n                    colors: [\n                      theme.primaryColor,\n                      theme.primaryColor.withValues(alpha: 0.8),\n                      theme.primaryColor.withValues(alpha: 0.6),\n                    ],\n                  ),\n                ),\n                child: Stack(\n                  children: [\n                    // تأثير الدوائر المتحركة في الخلفية\n                    Positioned(\n                      top: -50.h,\n                      right: -50.w,\n                      child: AnimatedContainer(\n                        duration: const Duration(seconds: 3),\n                        width: 150.w,\n                        height: 150.h,\n                        decoration: BoxDecoration(\n                          shape: BoxShape.circle,\n                          color: Colors.white.withValues(alpha: 0.1),\n                        ),\n                      ),\n                    ),\n                    Positioned(\n                      bottom: -30.h,\n                      left: -30.w,\n                      child: AnimatedContainer(\n                        duration: const Duration(seconds: 4),\n                        width: 100.w,\n                        height: 100.h,\n                        decoration: BoxDecoration(\n                          shape: BoxShape.circle,\n                          color: Colors.white.withValues(alpha: 0.05),\n                        ),\n                      ),\n                    ),\n                    // الأيقونة المركزية\n                    Center(\n                      child: Column(\n                        mainAxisAlignment: MainAxisAlignment.center,\n                        children: [\n                          SizedBox(height: 30.h),\n                          TweenAnimationBuilder<double>(\n                            duration: const Duration(milliseconds: 1000),\n                            tween: Tween(begin: 0.0, end: 1.0),\n                            builder: (context, value, child) {\n                              return Transform.scale(\n                                scale: 0.5 + (0.5 * value),\n                                child: Icon(\n                                  Icons.favorite_rounded,\n                                  size: 60.sp,\n                                  color: Colors.white.withValues(alpha: 0.9),\n                                ),\n                              );\n                            },\n                          ),\n                          SizedBox(height: 10.h),\n                          Text(\n                            'منتجاتك المفضلة',\n                            style: TextStyle(\n                              color: Colors.white.withValues(alpha: 0.9),\n                              fontSize: 16.sp,\n                              fontWeight: FontWeight.w500,\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n            actions: [\n              // زر مشاركة المفضلة\n              StreamBuilder<QuerySnapshot<Map<String, dynamic>>>(\n                stream: favoriteCtrl.getFavoritesStream(),\n                builder: (context, snapshot) {\n                  final hasItems = (snapshot.data?.docs.length ?? 0) > 0;\n                  if (!hasItems) return const SizedBox.shrink();\n\n                  return IconButton(\n                    icon: Icon(\n                      Icons.share_rounded,\n                      color: Colors.white.withValues(alpha: 0.9),\n                    ),\n                    onPressed: () => _shareFavorites(context, favoriteCtrl),\n                    tooltip: 'مشاركة قائمة المفضلة',\n                  );\n                },\n              ),\n              // زر مسح جميع المفضلة\n              StreamBuilder<QuerySnapshot<Map<String, dynamic>>>(\n                stream: favoriteCtrl.getFavoritesStream(),\n                builder: (context, snapshot) {\n                  final hasItems = (snapshot.data?.docs.length ?? 0) > 0;\n                  if (!hasItems) return const SizedBox.shrink();\n\n                  return IconButton(\n                    icon: Icon(\n                      Icons.clear_all_rounded,\n                      color: Colors.white.withValues(alpha: 0.9),\n                    ),\n                    onPressed: () => _showClearAllDialog(context, favoriteCtrl),\n                    tooltip: 'مسح جميع المفضلة',\n                  );\n                },\n              ),\n              // زر تبديل العرض (شبكة/قائمة)\n              Obx(\n                () => IconButton(\n                  icon: AnimatedSwitcher(\n                    duration: const Duration(milliseconds: 300),\n                    child: Icon(\n                      isGridView.value\n                          ? Icons.view_list_rounded\n                          : Icons.grid_view_rounded,\n                      key: ValueKey(isGridView.value),\n                      color: Colors.white,\n                    ),\n                  ),\n                  onPressed: () => isGridView.toggle(),\n                  tooltip: isGridView.value ? 'عرض القائمة' : 'عرض الشبكة',\n                ),\n              ),\n              SizedBox(width: 8.w),\n            ],\n          ),\n\n          // شريط البحث والفلاتر\n          SliverToBoxAdapter(\n            child: Container(\n              margin: EdgeInsets.all(16.w),\n              child: Column(\n                children: [\n                  // حقل البحث المتقدم\n                  Container(\n                    decoration: BoxDecoration(\n                      color: theme.cardColor,\n                      borderRadius: BorderRadius.circular(15.r),\n                      boxShadow: [\n                        BoxShadow(\n                          color: Colors.black.withValues(alpha: 0.05),\n                          blurRadius: 10.r,\n                          offset: Offset(0, 2.h),\n                        ),\n                      ],\n                    ),\n                    child: TextField(\n                      onChanged: (value) => searchQuery.value = value,\n                      decoration: InputDecoration(\n                        hintText: 'ابحث في المفضلة...',\n                        prefixIcon: Icon(\n                          Icons.search_rounded,\n                          color: theme.primaryColor,\n                          size: 24.sp,\n                        ),\n                        suffixIcon: Obx(\n                          () =>\n                              searchQuery.value.isNotEmpty\n                                  ? IconButton(\n                                    icon: Icon(\n                                      Icons.clear_rounded,\n                                      color: Colors.grey,\n                                    ),\n                                    onPressed: () => searchQuery.value = '',\n                                  )\n                                  : const SizedBox.shrink(),\n                        ),\n                        border: InputBorder.none,\n                        contentPadding: EdgeInsets.symmetric(\n                          horizontal: 16.w,\n                          vertical: 16.h,\n                        ),\n                        hintStyle: TextStyle(\n                          color: Colors.grey[500],\n                          fontSize: 14.sp,\n                        ),\n                      ),\n                    ),\n                  ),\n\n                  SizedBox(height: 12.h),\n\n                  // شريط الفلاتر والترتيب\n                  Row(\n                    children: [\n                      // زر الترتيب\n                      Expanded(\n                        child: Container(\n                          decoration: BoxDecoration(\n                            color: theme.cardColor,\n                            borderRadius: BorderRadius.circular(12.r),\n                            border: Border.all(\n                              color: theme.primaryColor.withValues(alpha: 0.2),\n                            ),\n                          ),\n                          child: Obx(\n                            () => DropdownButtonHideUnderline(\n                              child: DropdownButton<String>(\n                                value: sortBy.value,\n                                isExpanded: true,\n                                icon: Icon(\n                                  Icons.keyboard_arrow_down_rounded,\n                                  color: theme.primaryColor,\n                                ),\n                                padding: EdgeInsets.symmetric(horizontal: 12.w),\n                                items: [\n                                  DropdownMenuItem(\n                                    value: 'recent',\n                                    child: Row(\n                                      children: [\n                                        Icon(\n                                          Icons.access_time_rounded,\n                                          size: 16.sp,\n                                        ),\n                                        SizedBox(width: 8.w),\n                                        Text('الأحدث أولاً'),\n                                      ],\n                                    ),\n                                  ),\n                                  DropdownMenuItem(\n                                    value: 'name',\n                                    child: Row(\n                                      children: [\n                                        Icon(\n                                          Icons.sort_by_alpha_rounded,\n                                          size: 16.sp,\n                                        ),\n                                        SizedBox(width: 8.w),\n                                        Text('حسب الاسم'),\n                                      ],\n                                    ),\n                                  ),\n                                  DropdownMenuItem(\n                                    value: 'price',\n                                    child: Row(\n                                      children: [\n                                        Icon(\n                                          Icons.attach_money_rounded,\n                                          size: 16.sp,\n                                        ),\n                                        SizedBox(width: 8.w),\n                                        Text('حسب السعر'),\n                                      ],\n                                    ),\n                                  ),\n                                ],\n                                onChanged: (value) => sortBy.value = value!,\n                              ),\n                            ),\n                          ),\n                        ),\n                      ),\n\n                      SizedBox(width: 8.w),\n\n                      // زر تبديل الترتيب (تصاعدي/تنازلي)\n                      Obx(\n                        () => Container(\n                          decoration: BoxDecoration(\n                            color: theme.cardColor,\n                            borderRadius: BorderRadius.circular(12.r),\n                            border: Border.all(\n                              color: theme.primaryColor.withValues(alpha: 0.2),\n                            ),\n                          ),\n                          child: IconButton(\n                            icon: AnimatedRotation(\n                              turns: isAscending.value ? 0 : 0.5,\n                              duration: const Duration(milliseconds: 300),\n                              child: Icon(\n                                Icons.sort_rounded,\n                                color: theme.primaryColor,\n                              ),\n                            ),\n                            onPressed: () => isAscending.toggle(),\n                            tooltip: isAscending.value ? 'تصاعدي' : 'تنازلي',\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ],\n              ),\n            ),\n          ),\n\n          // المحتوى الرئيسي\n          StreamBuilder<QuerySnapshot<Map<String, dynamic>>>(\n            stream: favoriteCtrl.getFavoritesStream(),\n            builder: (context, favSnapshot) {\n              if (favSnapshot.connectionState == ConnectionState.waiting) {\n                return _buildLoadingSlivers(context, isGridView);\n              }\n\n              if (favSnapshot.hasError) {\n                return _buildErrorSliver(\n                  context,\n                  'حدث خطأ أثناء تحميل المفضلة',\n                );\n              }\n\n              final favoriteProductIds =\n                  favSnapshot.data?.docs.map((doc) => doc.id).toList() ?? [];\n\n              if (favoriteProductIds.isEmpty) {\n                return _buildEmptySliver(context);\n              }\n\n              return StreamBuilder<QuerySnapshot<Map<String, dynamic>>>(\n                stream:\n                    FirebaseFirestore.instance\n                        .collection(FirebaseX.itemsCollection)\n                        .where(\n                          FieldPath.documentId,\n                          whereIn: favoriteProductIds,\n                        )\n                        .snapshots(),\n                builder: (context, productSnapshot) {\n                  if (productSnapshot.connectionState ==\n                      ConnectionState.waiting) {\n                    return _buildLoadingSlivers(context, isGridView);\n                  }\n\n                  if (productSnapshot.hasError) {\n                    return _buildErrorSliver(\n                      context,\n                      'خطأ في تحميل تفاصيل المنتجات',\n                    );\n                  }\n\n                  var productDocs = productSnapshot.data?.docs ?? [];\n\n                  if (productDocs.isEmpty) {\n                    return _buildEmptySliver(context);\n                  }\n\n                  // تطبيق البحث والترتيب\n                  return Obx(() {\n                    var filteredDocs = productDocs;\n\n                    // تطبيق البحث\n                    if (searchQuery.value.isNotEmpty) {\n                      filteredDocs =\n                          productDocs.where((doc) {\n                            try {\n                              final item = ItemModel.fromMap(\n                                doc.data(),\n                                doc.id,\n                              );\n                              return item.name.toLowerCase().contains(\n                                searchQuery.value.toLowerCase(),\n                              );\n                            } catch (e) {\n                              return false;\n                            }\n                          }).toList();\n                    }\n\n                    // تطبيق الترتيب\n                    filteredDocs.sort((a, b) {\n                      try {\n                        final itemA = ItemModel.fromMap(a.data(), a.id);\n                        final itemB = ItemModel.fromMap(b.data(), b.id);\n\n                        int comparison = 0;\n                        switch (sortBy.value) {\n                          case 'name':\n                            comparison = itemA.name.compareTo(itemB.name);\n                            break;\n                          case 'price':\n                            comparison = itemA.price.compareTo(itemB.price);\n                            break;\n                          case 'recent':\n                          default:\n                            // افتراضياً حسب تاريخ الإضافة (يحتاج تخزين timestamp)\n                            comparison = 0;\n                            break;\n                        }\n\n                        return isAscending.value ? comparison : -comparison;\n                      } catch (e) {\n                        return 0;\n                      }\n                    });\n\n                    if (filteredDocs.isEmpty) {\n                      return _buildNoResultsSliver(context);\n                    }\n\n                    // عرض النتائج مع إحصائيات\n                    return SliverMainAxisGroup(\n                      slivers: [\n                        // إحصائيات المفضلة\n                        SliverToBoxAdapter(\n                          child: _buildFavoritesStats(\n                            context,\n                            filteredDocs.length,\n                            productDocs.length,\n                          ),\n                        ),\n                        // النتائج\n                        isGridView.value\n                            ? _buildGridView(\n                              context,\n                              filteredDocs,\n                              favoriteCtrl,\n                              theme,\n                            )\n                            : _buildListView(\n                              context,\n                              filteredDocs,\n                              favoriteCtrl,\n                              theme,\n                            ),\n                      ],\n                    );\n                  });\n                },\n              );\n            },\n          ),\n\n          // مساحة إضافية في النهاية\n          SliverToBoxAdapter(child: SizedBox(height: 20.h)),\n        ],\n      ),\n    );\n  }\n\n  // بناء Slivers للتحميل\n  Widget _buildLoadingSlivers(BuildContext context, RxBool isGridView) {\n    return Obx(\n      () =>\n          isGridView.value\n              ? _buildLoadingGrid(context)\n              : _buildLoadingList(context),\n    );\n  }\n\n  // بناء شبكة التحميل\n  Widget _buildLoadingGrid(BuildContext context) {\n    return SliverPadding(\n      padding: EdgeInsets.all(16.w),\n      sliver: SliverGrid(\n        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n          crossAxisCount: 2,\n          childAspectRatio: 0.7,\n          crossAxisSpacing: 12.w,\n          mainAxisSpacing: 12.h,\n        ),\n        delegate: SliverChildBuilderDelegate(\n          (context, index) => _buildShimmerCard(context, isGrid: true),\n          childCount: 6,\n        ),\n      ),\n    );\n  }\n\n  // بناء قائمة التحميل\n  Widget _buildLoadingList(BuildContext context) {\n    return SliverPadding(\n      padding: EdgeInsets.all(16.w),\n      sliver: SliverList(\n        delegate: SliverChildBuilderDelegate(\n          (context, index) => _buildShimmerCard(context, isGrid: false),\n          childCount: 5,\n        ),\n      ),\n    );\n  }\n\n  // كارد الشيمر\n  Widget _buildShimmerCard(BuildContext context, {required bool isGrid}) {\n    return Shimmer.fromColors(\n      baseColor: Colors.grey[300]!,\n      highlightColor: Colors.grey[100]!,\n      child: Container(\n        margin: EdgeInsets.only(bottom: 12.h),\n        decoration: BoxDecoration(\n          color: Colors.white,\n          borderRadius: BorderRadius.circular(15.r),\n        ),\n        child:\n            isGrid\n                ? Column(\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Expanded(\n                      flex: 3,\n                      child: Container(\n                        decoration: BoxDecoration(\n                          color: Colors.white,\n                          borderRadius: BorderRadius.vertical(\n                            top: Radius.circular(15.r),\n                          ),\n                        ),\n                      ),\n                    ),\n                    Expanded(\n                      flex: 2,\n                      child: Padding(\n                        padding: EdgeInsets.all(12.w),\n                        child: Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Container(height: 16.h, color: Colors.white),\n                            SizedBox(height: 8.h),\n                            Container(\n                              height: 12.h,\n                              width: 80.w,\n                              color: Colors.white,\n                            ),\n                          ],\n                        ),\n                      ),\n                    ),\n                  ],\n                )\n                : SizedBox(\n                  height: 100.h,\n                  child: Row(\n                    children: [\n                      Container(\n                        width: 100.w,\n                        height: 100.h,\n                        decoration: BoxDecoration(\n                          color: Colors.white,\n                          borderRadius: BorderRadius.horizontal(\n                            right: Radius.circular(15.r),\n                          ),\n                        ),\n                      ),\n                      Expanded(\n                        child: Padding(\n                          padding: EdgeInsets.all(12.w),\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            mainAxisAlignment: MainAxisAlignment.center,\n                            children: [\n                              Container(height: 16.h, color: Colors.white),\n                              SizedBox(height: 8.h),\n                              Container(\n                                height: 12.h,\n                                width: 60.w,\n                                color: Colors.white,\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n      ),\n    );\n  }\n\n  // بناء Sliver للخطأ\n  Widget _buildErrorSliver(BuildContext context, String message) {\n    final theme = Theme.of(context);\n    return SliverFillRemaining(\n      child: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            Icon(\n              Icons.error_outline_rounded,\n              size: 80.sp,\n              color: Colors.red[300],\n            ),\n            SizedBox(height: 20.h),\n            Text(\n              message,\n              style: TextStyle(\n                fontSize: 18.sp,\n                fontWeight: FontWeight.w600,\n                color: Colors.red[700],\n              ),\n              textAlign: TextAlign.center,\n            ),\n            SizedBox(height: 20.h),\n            ElevatedButton.icon(\n              onPressed: () => Get.back(),\n              icon: Icon(Icons.refresh_rounded),\n              label: Text('إعادة المحاولة'),\n              style: ElevatedButton.styleFrom(\n                backgroundColor: theme.primaryColor,\n                foregroundColor: Colors.white,\n                padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 12.h),\n                shape: RoundedRectangleBorder(\n                  borderRadius: BorderRadius.circular(25.r),\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  // بناء Sliver للحالة الفارغة\n  Widget _buildEmptySliver(BuildContext context) {\n    final theme = Theme.of(context);\n    return SliverFillRemaining(\n      child: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            TweenAnimationBuilder<double>(\n              duration: const Duration(milliseconds: 1500),\n              tween: Tween(begin: 0.0, end: 1.0),\n              builder: (context, value, child) {\n                return Transform.scale(\n                  scale: 0.5 + (0.5 * value),\n                  child: Icon(\n                    Icons.favorite_border_rounded,\n                    size: 120.sp,\n                    color: Colors.grey[400],\n                  ),\n                );\n              },\n            ),\n            SizedBox(height: 24.h),\n            Text(\n              'قائمة المفضلة فارغة',\n              style: TextStyle(\n                fontSize: 24.sp,\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[600],\n              ),\n            ),\n            SizedBox(height: 16.h),\n            Padding(\n              padding: EdgeInsets.symmetric(horizontal: 40.w),\n              child: Text(\n                'ابدأ بإضافة المنتجات التي تعجبك إلى قائمة المفضلة',\n                textAlign: TextAlign.center,\n                style: TextStyle(\n                  fontSize: 16.sp,\n                  color: Colors.grey[500],\n                  height: 1.5,\n                ),\n              ),\n            ),\n            SizedBox(height: 32.h),\n            ElevatedButton.icon(\n              onPressed: () => Get.back(),\n              icon: Icon(Icons.shopping_bag_outlined),\n              label: Text('تصفح المنتجات'),\n              style: ElevatedButton.styleFrom(\n                backgroundColor: theme.primaryColor,\n                foregroundColor: Colors.white,\n                padding: EdgeInsets.symmetric(horizontal: 32.w, vertical: 16.h),\n                shape: RoundedRectangleBorder(\n                  borderRadius: BorderRadius.circular(25.r),\n                ),\n                elevation: 4,\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  // بناء Sliver لعدم وجود نتائج\n  Widget _buildNoResultsSliver(BuildContext context) {\n    return SliverFillRemaining(\n      child: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            Icon(\n              Icons.search_off_rounded,\n              size: 80.sp,\n              color: Colors.grey[400],\n            ),\n            SizedBox(height: 20.h),\n            Text(\n              'لا توجد نتائج',\n              style: TextStyle(\n                fontSize: 20.sp,\n                fontWeight: FontWeight.bold,\n                color: Colors.grey[600],\n              ),\n            ),\n            SizedBox(height: 12.h),\n            Text(\n              'لم نجد أي منتجات تطابق بحثك',\n              style: TextStyle(fontSize: 14.sp, color: Colors.grey[500]),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  // بناء عرض الشبكة\n  Widget _buildGridView(\n    BuildContext context,\n    List<QueryDocumentSnapshot<Map<String, dynamic>>> docs,\n    FavoriteController favoriteCtrl,\n    ThemeData theme,\n  ) {\n    return SliverPadding(\n      padding: EdgeInsets.all(16.w),\n      sliver: SliverGrid(\n        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n          crossAxisCount: 2,\n          childAspectRatio: 0.7,\n          crossAxisSpacing: 12.w,\n          mainAxisSpacing: 12.h,\n        ),\n        delegate: SliverChildBuilderDelegate((context, index) {\n          try {\n            final item = ItemModel.fromMap(docs[index].data(), docs[index].id);\n            return _buildGridItem(context, item, favoriteCtrl, theme);\n          } catch (e) {\n            return _buildErrorCard(context);\n          }\n        }, childCount: docs.length),\n      ),\n    );\n  }\n\n  // بناء عرض القائمة\n  Widget _buildListView(\n    BuildContext context,\n    List<QueryDocumentSnapshot<Map<String, dynamic>>> docs,\n    FavoriteController favoriteCtrl,\n    ThemeData theme,\n  ) {\n    return SliverPadding(\n      padding: EdgeInsets.all(16.w),\n      sliver: SliverList(\n        delegate: SliverChildBuilderDelegate((context, index) {\n          try {\n            final item = ItemModel.fromMap(docs[index].data(), docs[index].id);\n            return _buildListItem(context, item, favoriteCtrl, theme);\n          } catch (e) {\n            return _buildErrorCard(context);\n          }\n        }, childCount: docs.length),\n      ),\n    );\n  }\n\n  // بناء عنصر الشبكة\n  Widget _buildGridItem(\n    BuildContext context,\n    ItemModel item,\n    FavoriteController favoriteCtrl,\n    ThemeData theme,\n  ) {\n    return Container(\n      decoration: BoxDecoration(\n        color: theme.cardColor,\n        borderRadius: BorderRadius.circular(20.r),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withValues(alpha: 0.08),\n            blurRadius: 15.r,\n            offset: Offset(0, 4.h),\n          ),\n        ],\n      ),\n      child: Material(\n        color: Colors.transparent,\n        child: InkWell(\n          borderRadius: BorderRadius.circular(20.r),\n          onTap: () => Get.to(() => DetailsOfItemScreen(item: item)),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              // الصورة\n              Expanded(\n                flex: 3,\n                child: Stack(\n                  children: [\n                    ClipRRect(\n                      borderRadius: BorderRadius.vertical(\n                        top: Radius.circular(20.r),\n                      ),\n                      child: CachedNetworkImage(\n                        imageUrl: item.imageUrl ?? '',\n                        width: double.infinity,\n                        height: double.infinity,\n                        fit: BoxFit.cover,\n                        placeholder:\n                            (c, u) => Container(\n                              color: Colors.grey[200],\n                              child: Center(\n                                child: Icon(\n                                  Icons.image_outlined,\n                                  color: Colors.grey[400],\n                                  size: 40.sp,\n                                ),\n                              ),\n                            ),\n                        errorWidget:\n                            (c, u, e) => Container(\n                              color: Colors.grey[100],\n                              child: Center(\n                                child: Icon(\n                                  Icons.broken_image_outlined,\n                                  color: Colors.grey[400],\n                                  size: 40.sp,\n                                ),\n                              ),\n                            ),\n                      ),\n                    ),\n                    // زر المفضلة في الزاوية\n                    Positioned(\n                      top: 8.h,\n                      left: 8.w,\n                      child: Container(\n                        decoration: BoxDecoration(\n                          color: Colors.white,\n                          shape: BoxShape.circle,\n                          boxShadow: [\n                            BoxShadow(\n                              color: Colors.black.withValues(alpha: 0.1),\n                              blurRadius: 8.r,\n                            ),\n                          ],\n                        ),\n                        child: IconButton(\n                          icon: Icon(\n                            Icons.favorite_rounded,\n                            color: Colors.red[400],\n                            size: 20.sp,\n                          ),\n                          onPressed:\n                              () => favoriteCtrl.toggleFavorite(item.id, true),\n                          padding: EdgeInsets.zero,\n                          constraints: BoxConstraints(\n                            minWidth: 32.w,\n                            minHeight: 32.h,\n                          ),\n                        ),\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n              // المحتوى\n              Expanded(\n                flex: 2,\n                child: Padding(\n                  padding: EdgeInsets.all(12.w),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      Text(\n                        item.name,\n                        style: TextStyle(\n                          fontSize: 14.sp,\n                          fontWeight: FontWeight.w600,\n                          color: theme.textTheme.titleMedium?.color,\n                        ),\n                        maxLines: 2,\n                        overflow: TextOverflow.ellipsis,\n                      ),\n                      Row(\n                        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                        children: [\n                          Text(\n                            '${item.price} ريال',\n                            style: TextStyle(\n                              fontSize: 16.sp,\n                              fontWeight: FontWeight.bold,\n                              color: theme.primaryColor,\n                            ),\n                          ),\n                          Icon(\n                            Icons.arrow_forward_ios_rounded,\n                            size: 16.sp,\n                            color: Colors.grey[400],\n                          ),\n                        ],\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  // بناء عنصر القائمة\n  Widget _buildListItem(\n    BuildContext context,\n    ItemModel item,\n    FavoriteController favoriteCtrl,\n    ThemeData theme,\n  ) {\n    return Container(\n      margin: EdgeInsets.only(bottom: 12.h),\n      decoration: BoxDecoration(\n        color: theme.cardColor,\n        borderRadius: BorderRadius.circular(20.r),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withValues(alpha: 0.06),\n            blurRadius: 12.r,\n            offset: Offset(0, 3.h),\n          ),\n        ],\n      ),\n      child: Material(\n        color: Colors.transparent,\n        child: InkWell(\n          borderRadius: BorderRadius.circular(20.r),\n          onTap: () => Get.to(() => DetailsOfItemScreen(item: item)),\n          child: Padding(\n            padding: EdgeInsets.all(16.w),\n            child: Row(\n              children: [\n                // الصورة\n                ClipRRect(\n                  borderRadius: BorderRadius.circular(12.r),\n                  child: CachedNetworkImage(\n                    imageUrl: item.imageUrl ?? '',\n                    width: 80.w,\n                    height: 80.h,\n                    fit: BoxFit.cover,\n                    placeholder:\n                        (c, u) => Container(\n                          color: Colors.grey[200],\n                          child: Center(\n                            child: Icon(\n                              Icons.image_outlined,\n                              color: Colors.grey[400],\n                              size: 30.sp,\n                            ),\n                          ),\n                        ),\n                    errorWidget:\n                        (c, u, e) => Container(\n                          color: Colors.grey[100],\n                          child: Center(\n                            child: Icon(\n                              Icons.broken_image_outlined,\n                              color: Colors.grey[400],\n                              size: 30.sp,\n                            ),\n                          ),\n                        ),\n                  ),\n                ),\n                SizedBox(width: 16.w),\n                // المحتوى\n                Expanded(\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Text(\n                        item.name,\n                        style: TextStyle(\n                          fontSize: 16.sp,\n                          fontWeight: FontWeight.w600,\n                          color: theme.textTheme.titleMedium?.color,\n                        ),\n                        maxLines: 2,\n                        overflow: TextOverflow.ellipsis,\n                      ),\n                      SizedBox(height: 8.h),\n                      Text(\n                        '${item.price} ريال',\n                        style: TextStyle(\n                          fontSize: 18.sp,\n                          fontWeight: FontWeight.bold,\n                          color: theme.primaryColor,\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                // زر المفضلة والسهم\n                Column(\n                  children: [\n                    Container(\n                      decoration: BoxDecoration(\n                        color: Colors.red[50],\n                        shape: BoxShape.circle,\n                      ),\n                      child: IconButton(\n                        icon: Icon(\n                          Icons.favorite_rounded,\n                          color: Colors.red[400],\n                          size: 24.sp,\n                        ),\n                        onPressed:\n                            () => favoriteCtrl.toggleFavorite(item.id, true),\n                      ),\n                    ),\n                    SizedBox(height: 8.h),\n                    Icon(\n                      Icons.arrow_forward_ios_rounded,\n                      size: 16.sp,\n                      color: Colors.grey[400],\n                    ),\n                  ],\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n\n  // بناء كارد الخطأ\n  Widget _buildErrorCard(BuildContext context) {\n    return Container(\n      margin: EdgeInsets.only(bottom: 12.h),\n      padding: EdgeInsets.all(16.w),\n      decoration: BoxDecoration(\n        color: Colors.red[50],\n        borderRadius: BorderRadius.circular(12.r),\n        border: Border.all(color: Colors.red[200]!),\n      ),\n      child: Row(\n        children: [\n          Icon(Icons.error_outline, color: Colors.red[400]),\n          SizedBox(width: 12.w),\n          Text(\n            'خطأ في عرض هذا المنتج',\n            style: TextStyle(color: Colors.red[700]),\n          ),\n        ],\n      ),\n    );\n  }\n\n  // مشاركة قائمة المفضلة\n  void _shareFavorites(\n    BuildContext context,\n    FavoriteController favoriteCtrl,\n  ) async {\n    try {\n      // عرض مؤشر التحميل\n      Get.dialog(\n        Center(\n          child: Container(\n            padding: EdgeInsets.all(24.w),\n            decoration: BoxDecoration(\n              color: Colors.white,\n              borderRadius: BorderRadius.circular(16.r),\n              boxShadow: [\n                BoxShadow(\n                  color: Colors.black.withValues(alpha: 0.1),\n                  blurRadius: 10.r,\n                ),\n              ],\n            ),\n            child: Column(\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                CircularProgressIndicator(),\n                SizedBox(height: 16.h),\n                Text(\n                  'جاري تجهيز قائمة المفضلة...',\n                  style: TextStyle(\n                    fontSize: 16.sp,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n        barrierDismissible: false,\n      );\n\n      // الحصول على المفضلة\n      final favoritesSnapshot = await favoriteCtrl.getFavoritesStream().first;\n      final favoriteIds = favoritesSnapshot.docs.map((doc) => doc.id).toList();\n\n      if (favoriteIds.isEmpty) {\n        Get.back();\n        Get.snackbar(\n          'تنبيه',\n          'قائمة المفضلة فارغة',\n          snackPosition: SnackPosition.BOTTOM,\n          backgroundColor: Colors.orange[600],\n          colorText: Colors.white,\n        );\n        return;\n      }\n\n      // الحصول على تفاصيل المنتجات\n      final productsSnapshot =\n          await FirebaseFirestore.instance\n              .collection(FirebaseX.itemsCollection)\n              .where(FieldPath.documentId, whereIn: favoriteIds)\n              .get();\n\n      // تجهيز النص للمشاركة\n      final StringBuffer shareText = StringBuffer();\n      shareText.writeln('🛍️ قائمة منتجاتي المفضلة');\n      shareText.writeln('═══════════════════════');\n      shareText.writeln('');\n\n      int counter = 1;\n      for (var doc in productsSnapshot.docs) {\n        try {\n          final item = ItemModel.fromMap(doc.data(), doc.id);\n          shareText.writeln('${counter++}. ${item.name}');\n          shareText.writeln('   💰 السعر: ${item.price} ريال');\n          if (item.imageUrl?.isNotEmpty == true) {\n            shareText.writeln('   🖼️ الصورة: ${item.imageUrl}');\n          }\n          shareText.writeln('');\n        } catch (e) {\n          // تجاهل المنتجات التي بها خطأ\n        }\n      }\n\n      shareText.writeln(\n        '📱 تم إنشاء هذه القائمة من تطبيق ${FirebaseX.appName}',\n      );\n      shareText.writeln('🛒 احصل على التطبيق الآن واستمتع بتجربة تسوق مميزة!');\n\n      // إغلاق مؤشر التحميل\n      Get.back();\n\n      // مشاركة النص\n      // يجب إضافة share_plus package في pubspec.yaml\n      // await Share.share(shareText.toString(), subject: 'قائمة منتجاتي المفضلة');\n\n      // لحين إضافة share package، سنعرض النص في dialog\n      _showShareDialog(context, shareText.toString());\n    } catch (e) {\n      // إغلاق مؤشر التحميل في حالة الخطأ\n      if (Get.isDialogOpen ?? false) Get.back();\n\n      Get.snackbar(\n        'خطأ',\n        'حدث خطأ أثناء تجهيز قائمة المفضلة للمشاركة',\n        snackPosition: SnackPosition.BOTTOM,\n        backgroundColor: Colors.red[600],\n        colorText: Colors.white,\n      );\n    }\n  }\n\n  // عرض dialog لمشاركة النص\n  void _showShareDialog(BuildContext context, String shareText) {\n    final theme = Theme.of(context);\n    showDialog(\n      context: context,\n      builder:\n          (context) => AlertDialog(\n            shape: RoundedRectangleBorder(\n              borderRadius: BorderRadius.circular(20.r),\n            ),\n            title: Row(\n              children: [\n                Icon(\n                  Icons.share_rounded,\n                  color: theme.primaryColor,\n                  size: 28.sp,\n                ),\n                SizedBox(width: 12.w),\n                Expanded(\n                  child: Text(\n                    'مشاركة قائمة المفضلة',\n                    style: TextStyle(\n                      fontSize: 18.sp,\n                      fontWeight: FontWeight.bold,\n                      color: theme.textTheme.titleLarge?.color,\n                    ),\n                  ),\n                ),\n              ],\n            ),\n            content: Container(\n              width: double.maxFinite,\n              height: 400.h,\n              child: SingleChildScrollView(\n                child: SelectableText(\n                  shareText,\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    height: 1.4,\n                    color: theme.textTheme.bodyMedium?.color,\n                  ),\n                ),\n              ),\n            ),\n            actions: [\n              TextButton(\n                onPressed: () => Navigator.of(context).pop(),\n                style: TextButton.styleFrom(foregroundColor: Colors.grey[600]),\n                child: Text('إغلاق'),\n              ),\n              ElevatedButton.icon(\n                onPressed: () {\n                  // نسخ النص للحافظة\n                  Clipboard.setData(ClipboardData(text: shareText));\n                  Navigator.of(context).pop();\n                  Get.snackbar(\n                    'تم النسخ',\n                    'تم نسخ قائمة المفضلة إلى الحافظة',\n                    snackPosition: SnackPosition.BOTTOM,\n                    backgroundColor: Colors.green[600],\n                    colorText: Colors.white,\n                    icon: Icon(Icons.copy, color: Colors.white),\n                    margin: EdgeInsets.all(16.w),\n                    borderRadius: 12.r,\n                  );\n                },\n                icon: Icon(Icons.copy),\n                label: Text('نسخ'),\n                style: ElevatedButton.styleFrom(\n                  backgroundColor: theme.primaryColor,\n                  foregroundColor: Colors.white,\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(12.r),\n                  ),\n                ),\n              ),\n            ],\n          ),\n    );\n  }\n\n  // عرض حوار تأكيد مسح جميع المفضلة\n  void _showClearAllDialog(\n    BuildContext context,\n    FavoriteController favoriteCtrl,\n  ) {\n    final theme = Theme.of(context);\n    showDialog(\n      context: context,\n      builder:\n          (context) => AlertDialog(\n            shape: RoundedRectangleBorder(\n              borderRadius: BorderRadius.circular(20.r),\n            ),\n            title: Row(\n              children: [\n                Icon(\n                  Icons.warning_amber_rounded,\n                  color: Colors.orange[600],\n                  size: 28.sp,\n                ),\n                SizedBox(width: 12.w),\n                Text(\n                  'تأكيد المسح',\n                  style: TextStyle(\n                    fontSize: 18.sp,\n                    fontWeight: FontWeight.bold,\n                    color: theme.textTheme.titleLarge?.color,\n                  ),\n                ),\n              ],\n            ),\n            content: Column(\n              mainAxisSize: MainAxisSize.min,\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'هل أنت متأكد من رغبتك في مسح جميع المنتجات من قائمة المفضلة؟',\n                  style: TextStyle(\n                    fontSize: 16.sp,\n                    color: theme.textTheme.bodyMedium?.color,\n                    height: 1.4,\n                  ),\n                ),\n                SizedBox(height: 16.h),\n                Container(\n                  padding: EdgeInsets.all(12.w),\n                  decoration: BoxDecoration(\n                    color: Colors.red[50],\n                    borderRadius: BorderRadius.circular(12.r),\n                    border: Border.all(color: Colors.red[200]!),\n                  ),\n                  child: Row(\n                    children: [\n                      Icon(\n                        Icons.info_outline,\n                        color: Colors.red[600],\n                        size: 20.sp,\n                      ),\n                      SizedBox(width: 8.w),\n                      Expanded(\n                        child: Text(\n                          'لا يمكن التراجع عن هذا الإجراء',\n                          style: TextStyle(\n                            color: Colors.red[700],\n                            fontSize: 14.sp,\n                            fontWeight: FontWeight.w500,\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ],\n            ),\n            actions: [\n              // زر الإلغاء\n              TextButton(\n                onPressed: () => Navigator.of(context).pop(),\n                style: TextButton.styleFrom(\n                  foregroundColor: Colors.grey[600],\n                  padding: EdgeInsets.symmetric(\n                    horizontal: 20.w,\n                    vertical: 12.h,\n                  ),\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(12.r),\n                  ),\n                ),\n                child: Text(\n                  'إلغاء',\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ),\n              // زر التأكيد\n              ElevatedButton(\n                onPressed: () {\n                  Navigator.of(context).pop();\n                  _clearAllFavorites(favoriteCtrl);\n                },\n                style: ElevatedButton.styleFrom(\n                  backgroundColor: Colors.red[600],\n                  foregroundColor: Colors.white,\n                  padding: EdgeInsets.symmetric(\n                    horizontal: 20.w,\n                    vertical: 12.h,\n                  ),\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(12.r),\n                  ),\n                  elevation: 2,\n                ),\n                child: Text(\n                  'مسح الكل',\n                  style: TextStyle(\n                    fontSize: 14.sp,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n              ),\n            ],\n          ),\n    );\n  }\n\n  // مسح جميع المفضلة\n  void _clearAllFavorites(FavoriteController favoriteCtrl) async {\n    try {\n      // عرض مؤشر التحميل\n      Get.dialog(\n        Center(\n          child: Container(\n            padding: EdgeInsets.all(24.w),\n            decoration: BoxDecoration(\n              color: Colors.white,\n              borderRadius: BorderRadius.circular(16.r),\n              boxShadow: [\n                BoxShadow(\n                  color: Colors.black.withValues(alpha: 0.1),\n                  blurRadius: 10.r,\n                ),\n              ],\n            ),\n            child: Column(\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                CircularProgressIndicator(),\n                SizedBox(height: 16.h),\n                Text(\n                  'جاري مسح المفضلة...',\n                  style: TextStyle(\n                    fontSize: 16.sp,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n        barrierDismissible: false,\n      );\n\n      // الحصول على جميع المفضلة\n      final favoritesStream = favoriteCtrl.getFavoritesStream();\n      final snapshot = await favoritesStream.first;\n      final favoriteIds = snapshot.docs.map((doc) => doc.id).toList();\n\n      // مسح كل منتج من المفضلة\n      for (String productId in favoriteIds) {\n        await favoriteCtrl.toggleFavorite(productId, true);\n      }\n\n      // إغلاق مؤشر التحميل\n      Get.back();\n\n      // عرض رسالة نجاح\n      Get.snackbar(\n        'تم بنجاح',\n        'تم مسح جميع المنتجات من قائمة المفضلة',\n        snackPosition: SnackPosition.BOTTOM,\n        backgroundColor: Colors.green[600],\n        colorText: Colors.white,\n        icon: Icon(Icons.check_circle, color: Colors.white),\n        margin: EdgeInsets.all(16.w),\n        borderRadius: 12.r,\n        duration: const Duration(seconds: 3),\n      );\n    } catch (e) {\n      // إغلاق مؤشر التحميل في حالة الخطأ\n      if (Get.isDialogOpen ?? false) Get.back();\n\n      // عرض رسالة خطأ\n      Get.snackbar(\n        'خطأ',\n        'حدث خطأ أثناء مسح المفضلة: $e',\n        snackPosition: SnackPosition.BOTTOM,\n        backgroundColor: Colors.red[600],\n        colorText: Colors.white,\n        icon: Icon(Icons.error, color: Colors.white),\n        margin: EdgeInsets.all(16.w),\n        borderRadius: 12.r,\n        duration: const Duration(seconds: 4),\n      );\n    }\n  }\n\n  // إضافة دالة مساعدة لعرض إحصائيات المفضلة\n  Widget _buildFavoritesStats(\n    BuildContext context,\n    int filteredCount,\n    int totalCount,\n  ) {\n    final theme = Theme.of(context);\n    return Container(\n      margin: EdgeInsets.symmetric(horizontal: 16.w, vertical: 8.h),\n      padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          colors: [\n            theme.primaryColor.withValues(alpha: 0.1),\n            theme.primaryColor.withValues(alpha: 0.05),\n          ],\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n        ),\n        borderRadius: BorderRadius.circular(15.r),\n        border: Border.all(color: theme.primaryColor.withValues(alpha: 0.2)),\n        boxShadow: [\n          BoxShadow(\n            color: theme.primaryColor.withValues(alpha: 0.1),\n            blurRadius: 8.r,\n            offset: Offset(0, 2.h),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          Container(\n            padding: EdgeInsets.all(8.w),\n            decoration: BoxDecoration(\n              color: theme.primaryColor.withValues(alpha: 0.2),\n              borderRadius: BorderRadius.circular(10.r),\n            ),\n            child: Icon(\n              Icons.favorite_rounded,\n              color: theme.primaryColor,\n              size: 20.sp,\n            ),\n          ),\n          SizedBox(width: 12.w),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  'إجمالي المفضلة: $totalCount منتج',\n                  style: TextStyle(\n                    color: theme.primaryColor,\n                    fontSize: 14.sp,\n                    fontWeight: FontWeight.w600,\n                  ),\n                ),\n                if (filteredCount != totalCount) ...[\n                  SizedBox(height: 2.h),\n                  Text(\n                    'النتائج المعروضة: $filteredCount منتج',\n                    style: TextStyle(\n                      color: theme.primaryColor.withValues(alpha: 0.7),\n                      fontSize: 12.sp,\n                      fontWeight: FontWeight.w500,\n                    ),\n                  ),\n                ],\n              ],\n            ),\n          ),\n          if (filteredCount != totalCount)\n            Container(\n              padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),\n              decoration: BoxDecoration(\n                color: theme.primaryColor,\n                borderRadius: BorderRadius.circular(12.r),\n              ),\n              child: Text(\n                'مُفلتر',\n                style: TextStyle(\n                  color: Colors.white,\n                  fontSize: 10.sp,\n                  fontWeight: FontWeight.bold,\n                ),\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n}\n"
        }
    ]
}