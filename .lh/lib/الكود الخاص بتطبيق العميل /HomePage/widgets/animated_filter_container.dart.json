{
    "sourceFile": "lib/الكود الخاص بتطبيق العميل /HomePage/widgets/animated_filter_container.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752859416408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752859416408,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:get/get.dart';\nimport '../controllers/brand_filter_controller.dart';\nimport '../controllers/barcode_filter_controller.dart';\nimport 'brand_filter_widget.dart';\n\nclass AnimatedFilterContainer extends StatefulWidget {\n  final bool isVisible;\n  final VoidCallback onClose;\n  \n  const AnimatedFilterContainer({\n    super.key,\n    required this.isVisible,\n    required this.onClose,\n  });\n\n  @override\n  State<AnimatedFilterContainer> createState() => _AnimatedFilterContainerState();\n}\n\nclass _AnimatedFilterContainerState extends State<AnimatedFilterContainer>\n    with TickerProviderStateMixin {\n  late AnimationController _slideController;\n  late AnimationController _fadeController;\n  late Animation<Offset> _slideAnimation;\n  late Animation<double> _fadeAnimation;\n\n  @override\n  void initState() {\n    super.initState();\n    \n    _slideController = AnimationController(\n      duration: const Duration(milliseconds: 600),\n      vsync: this,\n    );\n    \n    _fadeController = AnimationController(\n      duration: const Duration(milliseconds: 400),\n      vsync: this,\n    );\n    \n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, -1),\n      end: Offset.zero,\n    ).animate(CurvedAnimation(\n      parent: _slideController,\n      curve: Curves.easeOutBack,\n    ));\n    \n    _fadeAnimation = Tween<double>(\n      begin: 0.0,\n      end: 1.0,\n    ).animate(CurvedAnimation(\n      parent: _fadeController,\n      curve: Curves.easeInOut,\n    ));\n  }\n\n  @override\n  void didUpdateWidget(AnimatedFilterContainer oldWidget) {\n    super.didUpdateWidget(oldWidget);\n    \n    if (widget.isVisible != oldWidget.isVisible) {\n      if (widget.isVisible) {\n        _fadeController.forward();\n        _slideController.forward();\n      } else {\n        _fadeController.reverse();\n        _slideController.reverse();\n      }\n    }\n  }\n\n  @override\n  void dispose() {\n    _slideController.dispose();\n    _fadeController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final theme = Theme.of(context);\n    \n    if (!widget.isVisible) {\n      return const SizedBox.shrink();\n    }\n\n    return FadeTransition(\n      opacity: _fadeAnimation,\n      child: SlideTransition(\n        position: _slideAnimation,\n        child: Container(\n          margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\n          child: Material(\n            elevation: 8,\n            borderRadius: BorderRadius.circular(20),\n            shadowColor: theme.primaryColor.withValues(alpha: 0.3),\n            child: Container(\n              padding: const EdgeInsets.all(20),\n              decoration: BoxDecoration(\n                borderRadius: BorderRadius.circular(20),\n                gradient: LinearGradient(\n                  begin: Alignment.topLeft,\n                  end: Alignment.bottomRight,\n                  colors: [\n                    theme.cardColor,\n                    theme.cardColor.withValues(alpha: 0.95),\n                  ],\n                ),\n              ),\n              child: Column(\n                children: [\n                  // Header مع انيميشن\n                  _buildAnimatedHeader(theme),\n                  \n                  const SizedBox(height: 20),\n                  \n                  // محتوى الفلاتر\n                  const BrandFilterWidget(),\n                  \n                  const SizedBox(height: 16),\n                  \n                  // أزرار التحكم\n                  _buildControlButtons(theme),\n                ],\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildAnimatedHeader(ThemeData theme) {\n    return Row(\n      children: [\n        // أيقونة متحركة\n        TweenAnimationBuilder<double>(\n          duration: const Duration(milliseconds: 800),\n          tween: Tween(begin: 0.0, end: 1.0),\n          builder: (context, value, child) {\n            return Transform.scale(\n              scale: 0.8 + (0.2 * value),\n              child: Container(\n                width: 50,\n                height: 50,\n                decoration: BoxDecoration(\n                  gradient: LinearGradient(\n                    colors: [\n                      theme.primaryColor,\n                      theme.primaryColor.withValues(alpha: 0.7),\n                    ],\n                  ),\n                  borderRadius: BorderRadius.circular(15),\n                  boxShadow: [\n                    BoxShadow(\n                      color: theme.primaryColor.withValues(alpha: 0.3),\n                      blurRadius: 10,\n                      offset: const Offset(0, 4),\n                    ),\n                  ],\n                ),\n                child: Icon(\n                  Icons.tune,\n                  color: Colors.white,\n                  size: 28,\n                ),\n              ),\n            );\n          },\n        ),\n        \n        const SizedBox(width: 16),\n        \n        // النص مع تأثير الكتابة\n        Expanded(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                'فلاتر البحث المتقدمة',\n                style: TextStyle(\n                  fontSize: 20,\n                  fontWeight: FontWeight.bold,\n                  color: theme.primaryColor,\n                ),\n              ),\n              Text(\n                'اختر الفلتر المناسب لك',\n                style: TextStyle(\n                  fontSize: 14,\n                  color: theme.textTheme.bodyMedium?.color?.withValues(alpha: 0.7),\n                ),\n              ),\n            ],\n          ),\n        ),\n        \n        // زر الإغلاق مع انيميشن\n        InkWell(\n          onTap: widget.onClose,\n          borderRadius: BorderRadius.circular(25),\n          child: Container(\n            padding: const EdgeInsets.all(8),\n            decoration: BoxDecoration(\n              color: theme.primaryColor.withValues(alpha: 0.1),\n              borderRadius: BorderRadius.circular(25),\n            ),\n            child: Icon(\n              Icons.keyboard_arrow_up,\n              color: theme.primaryColor,\n              size: 28,\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n\n  Widget _buildControlButtons(ThemeData theme) {\n    final brandCtrl = Get.find<BrandFilterController>();\n    final barcodeCtrl = Get.find<BarcodeFilterController>();\n    \n    return Row(\n      children: [\n        // زر مسح جميع الفلاتر\n        Expanded(\n          child: OutlinedButton.icon(\n            onPressed: () {\n              brandCtrl.deactivateBrandModeAndClearMemory();\n              barcodeCtrl.clearCurrentBarcode();\n            },\n            icon: Icon(Icons.clear_all),\n            label: Text('مسح الكل'),\n            style: OutlinedButton.styleFrom(\n              foregroundColor: theme.primaryColor,\n              side: BorderSide(color: theme.primaryColor.withValues(alpha: 0.3)),\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(12),\n              ),\n            ),\n          ),\n        ),\n        \n        const SizedBox(width: 12),\n        \n        // زر إغلاق الفلاتر\n        Expanded(\n          child: ElevatedButton.icon(\n            onPressed: widget.onClose,\n            icon: Icon(Icons.check),\n            label: Text('تطبيق'),\n            style: ElevatedButton.styleFrom(\n              backgroundColor: theme.primaryColor,\n              foregroundColor: Colors.white,\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(12),\n              ),\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n"
        }
    ]
}