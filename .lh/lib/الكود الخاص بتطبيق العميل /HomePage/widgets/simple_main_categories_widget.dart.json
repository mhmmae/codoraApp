{
    "sourceFile": "lib/الكود الخاص بتطبيق العميل /HomePage/widgets/simple_main_categories_widget.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752922780351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752941662745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,13 @@\n class SimpleMainCategoriesWidget extends StatefulWidget {\n   const SimpleMainCategoriesWidget({super.key});\n \n   @override\n-  State<SimpleMainCategoriesWidget> createState() => _SimpleMainCategoriesWidgetState();\n+  State<SimpleMainCategoriesWidget> createState() =>\n+      _SimpleMainCategoriesWidgetState();\n }\n \n-class _SimpleMainCategoriesWidgetState extends State<SimpleMainCategoriesWidget> \n+class _SimpleMainCategoriesWidgetState extends State<SimpleMainCategoriesWidget>\n     with TickerProviderStateMixin {\n   late AnimationController _animationController;\n   late AnimationController _subCategoriesAnimationController;\n   late Animation<double> _fadeAnimation;\n@@ -30,23 +31,18 @@\n       duration: const Duration(milliseconds: 600),\n       vsync: this,\n     );\n \n-    _fadeAnimation = Tween<double>(\n-      begin: 0.0,\n-      end: 1.0,\n-    ).animate(CurvedAnimation(\n-      parent: _animationController,\n-      curve: Curves.easeOutQuart,\n-    ));\n+    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n+      CurvedAnimation(parent: _animationController, curve: Curves.easeOutQuart),\n+    );\n \n     _slideAnimation = Tween<Offset>(\n       begin: const Offset(0, 0.3),\n       end: Offset.zero,\n-    ).animate(CurvedAnimation(\n-      parent: _animationController,\n-      curve: Curves.easeOutQuart,\n-    ));\n+    ).animate(\n+      CurvedAnimation(parent: _animationController, curve: Curves.easeOutQuart),\n+    );\n \n     _animationController.forward();\n   }\n \n@@ -58,9 +54,11 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n-    final EnhancedCategoryFilterController controller = Get.put(EnhancedCategoryFilterController());\n+    final EnhancedCategoryFilterController controller = Get.put(\n+      EnhancedCategoryFilterController(),\n+    );\n     final theme = Theme.of(context);\n \n     return Container(\n       padding: const EdgeInsets.symmetric(vertical: 16),\n@@ -71,22 +69,22 @@\n           Padding(\n             padding: const EdgeInsets.symmetric(horizontal: 16),\n             child: Row(\n               children: [\n-                Icon(\n-                  Icons.category,\n-                  color: theme.primaryColor,\n-                  size: 20,\n-                ),\n+                Icon(Icons.category, color: theme.primaryColor, size: 20),\n                 const SizedBox(width: 8),\n-                Text(\n-                  'الأقسام الرئيسية',\n-                  style: theme.textTheme.titleLarge?.copyWith(\n-                    fontWeight: FontWeight.bold,\n-                    color: theme.primaryColor,\n+                Flexible(\n+                  child: Text(\n+                    'الأقسام الرئيسية',\n+                    style: theme.textTheme.titleLarge?.copyWith(\n+                      fontWeight: FontWeight.bold,\n+                      color: theme.primaryColor,\n+                    ),\n+                    overflow: TextOverflow.ellipsis,\n+                    maxLines: 1,\n                   ),\n                 ),\n-                const Spacer(),\n+                const SizedBox(width: 8),\n                 // زر إعادة التعيين\n                 Obx(() {\n                   if (!controller.hasAnyActiveFilter) {\n                     return const SizedBox.shrink();\n@@ -103,21 +101,21 @@\n                 }),\n               ],\n             ),\n           ),\n-          \n+\n           const SizedBox(height: 12),\n-          \n+\n           // قائمة الأقسام الأفقية\n           _buildMainCategoriesList(controller, theme),\n-          \n+\n           // الأقسام الفرعية\n           Obx(() {\n-            if (controller.selectedMainCategoryId.value.isNotEmpty && \n+            if (controller.selectedMainCategoryId.value.isNotEmpty &&\n                 controller.subCategories.isNotEmpty) {\n               // تشغيل انيميشن الأقسام الفرعية\n               _subCategoriesAnimationController.forward();\n-              \n+\n               return AnimatedContainer(\n                 duration: const Duration(milliseconds: 400),\n                 curve: Curves.easeInOut,\n                 child: FadeTransition(\n@@ -128,12 +126,14 @@\n                   child: SlideTransition(\n                     position: Tween<Offset>(\n                       begin: const Offset(0, 0.2),\n                       end: Offset.zero,\n-                    ).animate(CurvedAnimation(\n-                      parent: _subCategoriesAnimationController,\n-                      curve: Curves.easeOut,\n-                    )),\n+                    ).animate(\n+                      CurvedAnimation(\n+                        parent: _subCategoriesAnimationController,\n+                        curve: Curves.easeOut,\n+                      ),\n+                    ),\n                     child: Column(\n                       children: [\n                         const SizedBox(height: 16),\n                         _buildSubCategoriesSection(controller, theme),\n@@ -152,16 +152,17 @@\n       ),\n     );\n   }\n \n-  Widget _buildMainCategoriesList(EnhancedCategoryFilterController controller, ThemeData theme) {\n+  Widget _buildMainCategoriesList(\n+    EnhancedCategoryFilterController controller,\n+    ThemeData theme,\n+  ) {\n     return Obx(() {\n       if (controller.isLoading.value) {\n         return const SizedBox(\n           height: 110,\n-          child: Center(\n-            child: CircularProgressIndicator(),\n-          ),\n+          child: Center(child: CircularProgressIndicator()),\n         );\n       }\n \n       if (controller.mainCategories.isEmpty) {\n@@ -189,58 +190,73 @@\n             height: 110,\n             child: ListView.builder(\n               scrollDirection: Axis.horizontal,\n               padding: const EdgeInsets.symmetric(horizontal: 16),\n-              itemCount: controller.mainCategories.length + 1, // +1 للخيار \"الكل\"\n+              itemCount:\n+                  controller.mainCategories.length + 1, // +1 للخيار \"الكل\"\n               itemBuilder: (context, index) {\n                 // انيميشن منفصل لكل عنصر\n                 return AnimationCard(\n                   delay: Duration(milliseconds: index * 100),\n-                  child: Builder(builder: (context) {\n-            if (index == 0) {\n-              // خيار \"الكل\"\n-              return _buildCategoryCard(\n-                context: context,\n-                controller: controller,\n-                categoryId: '',\n-                categoryName: 'الكل',\n-                iconName: 'all',\n-                color: 'blue',\n-                imageUrl: null,\n-                subCategoriesCount: 0,\n-                onTap: () => controller.selectMainCategory('', 'الكل'),\n-                theme: theme,\n-              );\n-            }\n+                  child: Builder(\n+                    builder: (context) {\n+                      if (index == 0) {\n+                        // خيار \"الكل\"\n+                        return _buildCategoryCard(\n+                          context: context,\n+                          controller: controller,\n+                          categoryId: '',\n+                          categoryName: 'الكل',\n+                          iconName: 'all',\n+                          color: 'blue',\n+                          imageUrl: null,\n+                          subCategoriesCount: 0,\n+                          onTap:\n+                              () => controller.selectMainCategory('', 'الكل'),\n+                          theme: theme,\n+                        );\n+                      }\n \n-            final category = controller.mainCategories[index - 1];\n-            // حساب عدد الأقسام الفرعية لهذا القسم الرئيسي\n-            final subCount = category.id.isEmpty ? 0 : \n-              controller.allCategories.where((cat) => cat.parentId == category.id).length;\n-            \n-            return _buildCategoryCard(\n-              context: context,\n-              controller: controller,\n-              categoryId: category.id,\n-              categoryName: category.nameAr,\n-              iconName: category.iconName,\n-              color: category.color,\n-              imageUrl: category.imageUrl,\n-              subCategoriesCount: subCount,\n-              onTap: () => controller.selectMainCategory(category.id, category.nameAr),\n-              theme: theme,\n-            );\n-                  }),\n+                      final category = controller.mainCategories[index - 1];\n+                      // حساب عدد الأقسام الفرعية لهذا القسم الرئيسي\n+                      final subCount =\n+                          category.id.isEmpty\n+                              ? 0\n+                              : controller.allCategories\n+                                  .where((cat) => cat.parentId == category.id)\n+                                  .length;\n+\n+                      return _buildCategoryCard(\n+                        context: context,\n+                        controller: controller,\n+                        categoryId: category.id,\n+                        categoryName: category.nameAr,\n+                        iconName: category.iconName,\n+                        color: category.color,\n+                        imageUrl: category.imageUrl,\n+                        subCategoriesCount: subCount,\n+                        onTap:\n+                            () => controller.selectMainCategory(\n+                              category.id,\n+                              category.nameAr,\n+                            ),\n+                        theme: theme,\n+                      );\n+                    },\n+                  ),\n                 );\n-          },\n-        ),\n+              },\n+            ),\n           ),\n         ),\n       );\n     });\n   }\n \n-  Widget _buildSubCategoriesSection(EnhancedCategoryFilterController controller, ThemeData theme) {\n+  Widget _buildSubCategoriesSection(\n+    EnhancedCategoryFilterController controller,\n+    ThemeData theme,\n+  ) {\n     return Column(\n       crossAxisAlignment: CrossAxisAlignment.start,\n       children: [\n         // عنوان الأقسام الفرعية\n@@ -263,28 +279,27 @@\n               ),\n             ],\n           ),\n         ),\n-        \n+\n         const SizedBox(height: 8),\n-        \n+\n         // قائمة الأقسام الفرعية\n         Obx(() {\n           if (controller.isLoadingSubCategories.value) {\n             return const SizedBox(\n               height: 60,\n-              child: Center(\n-                child: CircularProgressIndicator(strokeWidth: 2),\n-              ),\n+              child: Center(child: CircularProgressIndicator(strokeWidth: 2)),\n             );\n           }\n \n           return SizedBox(\n             height: 85,\n             child: ListView.builder(\n               scrollDirection: Axis.horizontal,\n               padding: const EdgeInsets.symmetric(horizontal: 16),\n-              itemCount: controller.subCategories.length + 1, // +1 للخيار \"الكل\"\n+              itemCount:\n+                  controller.subCategories.length + 1, // +1 للخيار \"الكل\"\n               itemBuilder: (context, index) {\n                 if (index == 0) {\n                   // خيار \"الكل\" للأقسام الفرعية\n                   return _buildSubCategoryChip(\n@@ -302,9 +317,13 @@\n                   controller: controller,\n                   categoryId: subCategory.id,\n                   categoryName: subCategory.nameAr,\n                   imageUrl: subCategory.imageUrl,\n-                  onTap: () => controller.selectSubCategory(subCategory.id, subCategory.nameAr),\n+                  onTap:\n+                      () => controller.selectSubCategory(\n+                        subCategory.id,\n+                        subCategory.nameAr,\n+                      ),\n                   theme: theme,\n                 );\n               },\n             ),\n@@ -326,15 +345,18 @@\n     required VoidCallback onTap,\n     required ThemeData theme,\n   }) {\n     return Obx(() {\n-      final bool isSelected = categoryId.isEmpty \n-          ? controller.selectedMainCategoryId.value.isEmpty\n-          : controller.selectedMainCategoryId.value == categoryId;\n+      final bool isSelected =\n+          categoryId.isEmpty\n+              ? controller.selectedMainCategoryId.value.isEmpty\n+              : controller.selectedMainCategoryId.value == categoryId;\n       final double targetWidth = isSelected ? 120 : 60;\n       final double targetHeight = isSelected ? 100 : 50;\n-      final double targetFontSize = isSelected ? 12 : 6; // تقليل حجم الخط من 16 إلى 12\n-      final FontWeight targetFontWeight = isSelected ? FontWeight.w900 : FontWeight.bold;\n+      final double targetFontSize =\n+          isSelected ? 12 : 6; // تقليل حجم الخط من 16 إلى 12\n+      final FontWeight targetFontWeight =\n+          isSelected ? FontWeight.w900 : FontWeight.bold;\n       return Column(\n         mainAxisSize: MainAxisSize.min,\n         children: [\n           AnimatedContainer(\n@@ -360,134 +382,174 @@\n                 },\n                 child: Container(\n                   decoration: BoxDecoration(\n                     borderRadius: BorderRadius.circular(isSelected ? 24 : 16),\n-                    gradient: isSelected \n-                        ? LinearGradient(\n-                            begin: Alignment.topLeft,\n-                            end: Alignment.bottomRight,\n-                            colors: [theme.primaryColor, theme.primaryColor.withOpacity(0.8)],\n-                          )\n-                        : const LinearGradient(\n-                            begin: Alignment.topLeft,\n-                            end: Alignment.bottomRight,\n-                            colors: [Colors.white, Colors.white],\n-                          ),\n+                    gradient:\n+                        isSelected\n+                            ? LinearGradient(\n+                              begin: Alignment.topLeft,\n+                              end: Alignment.bottomRight,\n+                              colors: [\n+                                theme.primaryColor,\n+                                theme.primaryColor.withOpacity(0.8),\n+                              ],\n+                            )\n+                            : const LinearGradient(\n+                              begin: Alignment.topLeft,\n+                              end: Alignment.bottomRight,\n+                              colors: [Colors.white, Colors.white],\n+                            ),\n                     border: Border.all(\n                       color: isSelected ? Colors.deepPurple : Colors.grey[300]!,\n                       width: isSelected ? 4 : 1,\n                     ),\n-                    boxShadow: isSelected \n-                        ? [\n-                            BoxShadow(\n-                              color: theme.primaryColor.withOpacity(0.3),\n-                              blurRadius: 18,\n-                              offset: const Offset(0, 6),\n-                              spreadRadius: 2,\n-                            ),\n-                          ]\n-                        : [\n-                            BoxShadow(\n-                              color: Colors.grey.withOpacity(0.1),\n-                              blurRadius: 4,\n-                              offset: const Offset(0, 2),\n-                            ),\n-                          ],\n+                    boxShadow:\n+                        isSelected\n+                            ? [\n+                              BoxShadow(\n+                                color: theme.primaryColor.withOpacity(0.3),\n+                                blurRadius: 18,\n+                                offset: const Offset(0, 6),\n+                                spreadRadius: 2,\n+                              ),\n+                            ]\n+                            : [\n+                              BoxShadow(\n+                                color: Colors.grey.withOpacity(0.1),\n+                                blurRadius: 4,\n+                                offset: const Offset(0, 2),\n+                              ),\n+                            ],\n                   ),\n                   child: Stack(\n                     children: [\n                       if (imageUrl != null && imageUrl.isNotEmpty)\n                         Positioned.fill(\n                           child: ClipRRect(\n-                            borderRadius: BorderRadius.circular(isSelected ? 23 : 15),\n+                            borderRadius: BorderRadius.circular(\n+                              isSelected ? 23 : 15,\n+                            ),\n                             child: CachedNetworkImage(\n                               imageUrl: imageUrl,\n                               fit: BoxFit.cover,\n-                              placeholder: (context, url) => Container(\n-                                color: Colors.grey[100],\n-                                child: Icon(\n-                                  _getIconForCategory(iconName),\n-                                  color: Colors.grey[400],\n-                                  size: isSelected ? 48 : 32,\n-                                ),\n-                              ),\n-                              errorWidget: (context, url, error) => Container(\n-                                color: Colors.grey[100],\n-                                child: Icon(\n-                                  _getIconForCategory(iconName),\n-                                  color: Colors.grey[400],\n-                                  size: isSelected ? 48 : 32,\n-                                ),\n-                              ),\n+                              placeholder:\n+                                  (context, url) => Container(\n+                                    color: Colors.grey[100],\n+                                    child: Icon(\n+                                      _getIconForCategory(iconName),\n+                                      color: Colors.grey[400],\n+                                      size: isSelected ? 48 : 32,\n+                                    ),\n+                                  ),\n+                              errorWidget:\n+                                  (context, url, error) => Container(\n+                                    color: Colors.grey[100],\n+                                    child: Icon(\n+                                      _getIconForCategory(iconName),\n+                                      color: Colors.grey[400],\n+                                      size: isSelected ? 48 : 32,\n+                                    ),\n+                                  ),\n                             ),\n                           ),\n                         ),\n                       if (imageUrl != null && imageUrl.isNotEmpty)\n                         Positioned.fill(\n                           child: Container(\n                             decoration: BoxDecoration(\n-                              borderRadius: BorderRadius.circular(isSelected ? 23 : 15),\n+                              borderRadius: BorderRadius.circular(\n+                                isSelected ? 23 : 15,\n+                              ),\n                               gradient: LinearGradient(\n                                 begin: Alignment.topCenter,\n                                 end: Alignment.bottomCenter,\n-                                colors: [Colors.transparent, Colors.black.withOpacity(0.7)],\n+                                colors: [\n+                                  Colors.transparent,\n+                                  Colors.black.withOpacity(0.7),\n+                                ],\n                                 stops: const [0.3, 1.0],\n                               ),\n                             ),\n                           ),\n                         ),\n                       Positioned.fill(\n                         child: Padding(\n-                          padding: EdgeInsets.all(isSelected ? 6 : 4), // padding متغير حسب الحالة\n+                          padding: EdgeInsets.all(\n+                            isSelected ? 6 : 4,\n+                          ), // padding متغير حسب الحالة\n                           child: Column(\n                             mainAxisSize: MainAxisSize.min,\n                             mainAxisAlignment: MainAxisAlignment.center,\n                             children: [\n                               if (imageUrl == null || imageUrl.isEmpty)\n-                                Flexible( // إضافة Flexible للأيقونة\n+                                Flexible(\n+                                  // إضافة Flexible للأيقونة\n                                   child: Icon(\n                                     _getIconForCategory(iconName),\n-                                    color: isSelected ? Colors.white : _getColorFromString(color) ?? theme.primaryColor,\n-                                    size: isSelected ? 28 : 16, // تقليل حجم الأيقونة من 32 إلى 28\n+                                    color:\n+                                        isSelected\n+                                            ? Colors.white\n+                                            : _getColorFromString(color) ??\n+                                                theme.primaryColor,\n+                                    size:\n+                                        isSelected\n+                                            ? 28\n+                                            : 16, // تقليل حجم الأيقونة من 32 إلى 28\n                                   ),\n                                 ),\n-                              SizedBox(height: isSelected ? 4 : 2), // مساحة متغيرة\n-                              Flexible( // إضافة Flexible للنص\n+                              SizedBox(\n+                                height: isSelected ? 4 : 2,\n+                              ), // مساحة متغيرة\n+                              Flexible(\n+                                // إضافة Flexible للنص\n                                 child: Container(\n                                   padding: EdgeInsets.symmetric(\n-                                    horizontal: isSelected ? 4 : 3, // padding أقل للنص\n+                                    horizontal:\n+                                        isSelected ? 4 : 3, // padding أقل للنص\n                                     vertical: isSelected ? 3 : 2,\n                                   ),\n                                   decoration: BoxDecoration(\n-                                    color: isSelected ? theme.primaryColor.withOpacity(0.85) : Colors.white.withOpacity(0.85),\n+                                    color:\n+                                        isSelected\n+                                            ? theme.primaryColor.withOpacity(\n+                                              0.85,\n+                                            )\n+                                            : Colors.white.withOpacity(0.85),\n                                     borderRadius: BorderRadius.circular(8),\n-                                    boxShadow: isSelected\n-                                        ? [\n-                                            BoxShadow(\n-                                              color: theme.primaryColor.withOpacity(0.13),\n-                                              blurRadius: 4,\n-                                              offset: Offset(0, 1),\n-                                            ),\n-                                          ]\n-                                        : [],\n+                                    boxShadow:\n+                                        isSelected\n+                                            ? [\n+                                              BoxShadow(\n+                                                color: theme.primaryColor\n+                                                    .withOpacity(0.13),\n+                                                blurRadius: 4,\n+                                                offset: Offset(0, 1),\n+                                              ),\n+                                            ]\n+                                            : [],\n                                   ),\n                                   child: AnimatedDefaultTextStyle(\n                                     duration: const Duration(milliseconds: 400),\n                                     curve: Curves.easeInOutCubic,\n                                     style: TextStyle(\n                                       fontSize: targetFontSize,\n                                       fontWeight: targetFontWeight,\n-                                      color: isSelected ? Colors.white : theme.primaryColor,\n+                                      color:\n+                                          isSelected\n+                                              ? Colors.white\n+                                              : theme.primaryColor,\n                                       letterSpacing: 0.1,\n-                                      shadows: isSelected\n-                                          ? [\n-                                              Shadow(\n-                                                offset: Offset(0, 1),\n-                                                blurRadius: 4,\n-                                                color: theme.primaryColor.withOpacity(0.18),\n-                                              ),\n-                                            ]\n-                                          : [],\n+                                      shadows:\n+                                          isSelected\n+                                              ? [\n+                                                Shadow(\n+                                                  offset: Offset(0, 1),\n+                                                  blurRadius: 4,\n+                                                  color: theme.primaryColor\n+                                                      .withOpacity(0.18),\n+                                                ),\n+                                              ]\n+                                              : [],\n                                     ),\n                                     child: Text(\n                                       categoryName,\n                                       textAlign: TextAlign.center,\n@@ -520,15 +582,17 @@\n     required VoidCallback onTap,\n     required ThemeData theme,\n   }) {\n     return Obx(() {\n-      final bool isSelected = categoryId.isEmpty \n-          ? controller.selectedSubCategoryId.value.isEmpty\n-          : controller.selectedSubCategoryId.value == categoryId;\n+      final bool isSelected =\n+          categoryId.isEmpty\n+              ? controller.selectedSubCategoryId.value.isEmpty\n+              : controller.selectedSubCategoryId.value == categoryId;\n       final double targetWidth = isSelected ? 85 : 60;\n       final double targetHeight = isSelected ? 75 : 54;\n       final double targetFontSize = isSelected ? 10 : 5;\n-      final FontWeight targetFontWeight = isSelected ? FontWeight.w900 : FontWeight.bold;\n+      final FontWeight targetFontWeight =\n+          isSelected ? FontWeight.w900 : FontWeight.bold;\n       return Column(\n         mainAxisSize: MainAxisSize.min,\n         children: [\n           AnimatedContainer(\n@@ -555,144 +619,185 @@\n                 child: AnimatedContainer(\n                   duration: const Duration(milliseconds: 350),\n                   decoration: BoxDecoration(\n                     borderRadius: BorderRadius.circular(isSelected ? 28 : 20),\n-                    gradient: isSelected\n-                        ? LinearGradient(\n-                            begin: Alignment.topLeft,\n-                            end: Alignment.bottomRight,\n-                            colors: [theme.primaryColor, theme.primaryColor.withOpacity(0.8)],\n-                          )\n-                        : const LinearGradient(\n-                            begin: Alignment.topLeft,\n-                            end: Alignment.bottomRight,\n-                            colors: [Colors.white, Colors.white],\n-                          ),\n+                    gradient:\n+                        isSelected\n+                            ? LinearGradient(\n+                              begin: Alignment.topLeft,\n+                              end: Alignment.bottomRight,\n+                              colors: [\n+                                theme.primaryColor,\n+                                theme.primaryColor.withOpacity(0.8),\n+                              ],\n+                            )\n+                            : const LinearGradient(\n+                              begin: Alignment.topLeft,\n+                              end: Alignment.bottomRight,\n+                              colors: [Colors.white, Colors.white],\n+                            ),\n                     border: Border.all(\n                       color: isSelected ? Colors.deepPurple : Colors.grey[300]!,\n                       width: isSelected ? 4 : 1,\n                     ),\n-                    boxShadow: isSelected\n-                        ? [\n-                            BoxShadow(\n-                              color: theme.primaryColor.withOpacity(0.4),\n-                              blurRadius: 16,\n-                              offset: const Offset(0, 4),\n-                              spreadRadius: 2,\n-                            ),\n-                          ]\n-                        : [\n-                            BoxShadow(\n-                              color: Colors.grey.withOpacity(0.15),\n-                              blurRadius: 4,\n-                              offset: const Offset(0, 2),\n-                            ),\n-                          ],\n+                    boxShadow:\n+                        isSelected\n+                            ? [\n+                              BoxShadow(\n+                                color: theme.primaryColor.withOpacity(0.4),\n+                                blurRadius: 16,\n+                                offset: const Offset(0, 4),\n+                                spreadRadius: 2,\n+                              ),\n+                            ]\n+                            : [\n+                              BoxShadow(\n+                                color: Colors.grey.withOpacity(0.15),\n+                                blurRadius: 4,\n+                                offset: const Offset(0, 2),\n+                              ),\n+                            ],\n                   ),\n                   child: Stack(\n                     children: [\n                       if (imageUrl != null && imageUrl.isNotEmpty)\n                         Positioned.fill(\n                           child: ClipRRect(\n-                            borderRadius: BorderRadius.circular(isSelected ? 27 : 19),\n+                            borderRadius: BorderRadius.circular(\n+                              isSelected ? 27 : 19,\n+                            ),\n                             child: CachedNetworkImage(\n                               imageUrl: imageUrl,\n                               fit: BoxFit.cover,\n-                              placeholder: (context, url) => Container(\n-                                color: Colors.grey[100],\n-                                child: Icon(\n-                                  Icons.category_outlined,\n-                                  color: Colors.grey[400],\n-                                  size: isSelected ? 28 : 14,\n-                                ),\n-                              ),\n-                              errorWidget: (context, url, error) => Container(\n-                                color: Colors.grey[100],\n-                                child: Icon(\n-                                  Icons.category_outlined,\n-                                  color: Colors.grey[400],\n-                                  size: isSelected ? 28 : 14,\n-                                ),\n-                              ),\n+                              placeholder:\n+                                  (context, url) => Container(\n+                                    color: Colors.grey[100],\n+                                    child: Icon(\n+                                      Icons.category_outlined,\n+                                      color: Colors.grey[400],\n+                                      size: isSelected ? 28 : 14,\n+                                    ),\n+                                  ),\n+                              errorWidget:\n+                                  (context, url, error) => Container(\n+                                    color: Colors.grey[100],\n+                                    child: Icon(\n+                                      Icons.category_outlined,\n+                                      color: Colors.grey[400],\n+                                      size: isSelected ? 28 : 14,\n+                                    ),\n+                                  ),\n                             ),\n                           ),\n                         ),\n                       if (imageUrl != null && imageUrl.isNotEmpty)\n                         Positioned.fill(\n                           child: Container(\n                             decoration: BoxDecoration(\n-                              borderRadius: BorderRadius.circular(isSelected ? 27 : 13),\n+                              borderRadius: BorderRadius.circular(\n+                                isSelected ? 27 : 13,\n+                              ),\n                               gradient: LinearGradient(\n                                 begin: Alignment.topCenter,\n                                 end: Alignment.bottomCenter,\n-                                colors: [Colors.transparent, Colors.black.withOpacity(0.7)],\n+                                colors: [\n+                                  Colors.transparent,\n+                                  Colors.black.withOpacity(0.7),\n+                                ],\n                                 stops: const [0.4, 1.0],\n                               ),\n                             ),\n                           ),\n                         ),\n                       Positioned.fill(\n                         child: Padding(\n-                          padding: EdgeInsets.all(isSelected ? 6 : 4), // padding متغير حسب الحالة\n+                          padding: EdgeInsets.all(\n+                            isSelected ? 6 : 4,\n+                          ), // padding متغير حسب الحالة\n                           child: Column(\n                             mainAxisSize: MainAxisSize.min,\n                             mainAxisAlignment: MainAxisAlignment.center,\n                             children: [\n                               if (imageUrl == null || imageUrl.isEmpty)\n-                                Flexible( // إضافة Flexible للأيقونة\n+                                Flexible(\n+                                  // إضافة Flexible للأيقونة\n                                   child: Icon(\n                                     Icons.category_outlined,\n-                                    color: isSelected ? Colors.white : theme.primaryColor,\n-                                    size: isSelected ? 24 : 14, // تقليل حجم الأيقونة من 28 إلى 24\n+                                    color:\n+                                        isSelected\n+                                            ? Colors.white\n+                                            : theme.primaryColor,\n+                                    size:\n+                                        isSelected\n+                                            ? 24\n+                                            : 14, // تقليل حجم الأيقونة من 28 إلى 24\n                                   ),\n                                 ),\n-                              SizedBox(height: isSelected ? 4 : 2), // مساحة متغيرة\n-                              Flexible( // إضافة Flexible للنص\n+                              SizedBox(\n+                                height: isSelected ? 4 : 2,\n+                              ), // مساحة متغيرة\n+                              Flexible(\n+                                // إضافة Flexible للنص\n                                 child: Container(\n                                   padding: EdgeInsets.symmetric(\n-                                    horizontal: isSelected ? 4 : 3, // padding أقل للنص\n+                                    horizontal:\n+                                        isSelected ? 4 : 3, // padding أقل للنص\n                                     vertical: isSelected ? 2 : 1,\n                                   ),\n-                                decoration: BoxDecoration(\n-                                  color: isSelected ? theme.primaryColor.withOpacity(0.85) : Colors.white.withOpacity(0.85),\n-                                  borderRadius: BorderRadius.circular(7),\n-                                  boxShadow: isSelected\n-                                      ? [\n-                                          BoxShadow(\n-                                            color: theme.primaryColor.withOpacity(0.13),\n-                                            blurRadius: 3,\n-                                            offset: Offset(0, 1),\n-                                          ),\n-                                        ]\n-                                      : [],\n-                                ),\n-                                child: AnimatedDefaultTextStyle(\n-                                  duration: const Duration(milliseconds: 400),\n-                                  curve: Curves.easeInOutCubic,\n-                                  style: TextStyle(\n-                                    fontSize: targetFontSize,\n-                                    fontWeight: targetFontWeight,\n-                                    color: isSelected ? Colors.white : theme.primaryColor,\n-                                    letterSpacing: 0.1,\n-                                    shadows: isSelected\n-                                        ? [\n-                                            Shadow(\n-                                              offset: Offset(0, 1),\n-                                              blurRadius: 4,\n-                                              color: theme.primaryColor.withOpacity(0.18),\n-                                            ),\n-                                          ]\n-                                        : [],\n+                                  decoration: BoxDecoration(\n+                                    color:\n+                                        isSelected\n+                                            ? theme.primaryColor.withOpacity(\n+                                              0.85,\n+                                            )\n+                                            : Colors.white.withOpacity(0.85),\n+                                    borderRadius: BorderRadius.circular(7),\n+                                    boxShadow:\n+                                        isSelected\n+                                            ? [\n+                                              BoxShadow(\n+                                                color: theme.primaryColor\n+                                                    .withOpacity(0.13),\n+                                                blurRadius: 3,\n+                                                offset: Offset(0, 1),\n+                                              ),\n+                                            ]\n+                                            : [],\n                                   ),\n-                                  child: Text(\n-                                    categoryName.isEmpty ? 'الكل' : categoryName,\n-                                    textAlign: TextAlign.center,\n-                                    maxLines: 1,\n-                                    overflow: TextOverflow.ellipsis,\n+                                  child: AnimatedDefaultTextStyle(\n+                                    duration: const Duration(milliseconds: 400),\n+                                    curve: Curves.easeInOutCubic,\n+                                    style: TextStyle(\n+                                      fontSize: targetFontSize,\n+                                      fontWeight: targetFontWeight,\n+                                      color:\n+                                          isSelected\n+                                              ? Colors.white\n+                                              : theme.primaryColor,\n+                                      letterSpacing: 0.1,\n+                                      shadows:\n+                                          isSelected\n+                                              ? [\n+                                                Shadow(\n+                                                  offset: Offset(0, 1),\n+                                                  blurRadius: 4,\n+                                                  color: theme.primaryColor\n+                                                      .withOpacity(0.18),\n+                                                ),\n+                                              ]\n+                                              : [],\n+                                    ),\n+                                    child: Text(\n+                                      categoryName.isEmpty\n+                                          ? 'الكل'\n+                                          : categoryName,\n+                                      textAlign: TextAlign.center,\n+                                      maxLines: 1,\n+                                      overflow: TextOverflow.ellipsis,\n+                                    ),\n                                   ),\n                                 ),\n                               ),\n-      )\n                             ],\n                           ),\n                         ),\n                       ),\n@@ -741,9 +846,9 @@\n   }\n \n   Color? _getColorFromString(String? colorString) {\n     if (colorString == null) return null;\n-    \n+\n     switch (colorString.toLowerCase()) {\n       case 'red':\n         return Colors.red;\n       case 'blue':\n@@ -803,31 +908,31 @@\n       duration: const Duration(milliseconds: 600),\n       vsync: this,\n     );\n \n-    _fadeAnimation = Tween<double>(\n-      begin: 0.0,\n-      end: 1.0,\n-    ).animate(CurvedAnimation(\n-      parent: _controller,\n-      curve: const Interval(0.0, 0.6, curve: Curves.easeOut),\n-    ));\n+    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n+      CurvedAnimation(\n+        parent: _controller,\n+        curve: const Interval(0.0, 0.6, curve: Curves.easeOut),\n+      ),\n+    );\n \n     _slideAnimation = Tween<Offset>(\n       begin: const Offset(0, 0.5),\n       end: Offset.zero,\n-    ).animate(CurvedAnimation(\n-      parent: _controller,\n-      curve: const Interval(0.2, 0.8, curve: Curves.easeOutCubic),\n-    ));\n+    ).animate(\n+      CurvedAnimation(\n+        parent: _controller,\n+        curve: const Interval(0.2, 0.8, curve: Curves.easeOutCubic),\n+      ),\n+    );\n \n-    _scaleAnimation = Tween<double>(\n-      begin: 0.8,\n-      end: 1.0,\n-    ).animate(CurvedAnimation(\n-      parent: _controller,\n-      curve: const Interval(0.4, 1.0, curve: Curves.elasticOut),\n-    ));\n+    _scaleAnimation = Tween<double>(begin: 0.8, end: 1.0).animate(\n+      CurvedAnimation(\n+        parent: _controller,\n+        curve: const Interval(0.4, 1.0, curve: Curves.elasticOut),\n+      ),\n+    );\n \n     // تأخير بدء الانيميشن\n     Future.delayed(widget.delay, () {\n       if (mounted) {\n@@ -847,12 +952,9 @@\n     return FadeTransition(\n       opacity: _fadeAnimation,\n       child: SlideTransition(\n         position: _slideAnimation,\n-        child: ScaleTransition(\n-          scale: _scaleAnimation,\n-          child: widget.child,\n-        ),\n+        child: ScaleTransition(scale: _scaleAnimation, child: widget.child),\n       ),\n     );\n   }\n\\ No newline at end of file\n-} \n+}\n"
                }
            ],
            "date": 1752922780351,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:get/get.dart';\nimport 'package:cached_network_image/cached_network_image.dart';\nimport '../controllers/enhanced_category_filter_controller.dart';\n\n/// Widget محسن لعرض الأقسام الرئيسية والفرعية في تطبيق العميل مع صور وانيميشن احترافي\nclass SimpleMainCategoriesWidget extends StatefulWidget {\n  const SimpleMainCategoriesWidget({super.key});\n\n  @override\n  State<SimpleMainCategoriesWidget> createState() => _SimpleMainCategoriesWidgetState();\n}\n\nclass _SimpleMainCategoriesWidgetState extends State<SimpleMainCategoriesWidget> \n    with TickerProviderStateMixin {\n  late AnimationController _animationController;\n  late AnimationController _subCategoriesAnimationController;\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n\n  @override\n  void initState() {\n    super.initState();\n    _animationController = AnimationController(\n      duration: const Duration(milliseconds: 800),\n      vsync: this,\n    );\n    _subCategoriesAnimationController = AnimationController(\n      duration: const Duration(milliseconds: 600),\n      vsync: this,\n    );\n\n    _fadeAnimation = Tween<double>(\n      begin: 0.0,\n      end: 1.0,\n    ).animate(CurvedAnimation(\n      parent: _animationController,\n      curve: Curves.easeOutQuart,\n    ));\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.3),\n      end: Offset.zero,\n    ).animate(CurvedAnimation(\n      parent: _animationController,\n      curve: Curves.easeOutQuart,\n    ));\n\n    _animationController.forward();\n  }\n\n  @override\n  void dispose() {\n    _animationController.dispose();\n    _subCategoriesAnimationController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final EnhancedCategoryFilterController controller = Get.put(EnhancedCategoryFilterController());\n    final theme = Theme.of(context);\n\n    return Container(\n      padding: const EdgeInsets.symmetric(vertical: 16),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          // عنوان القسم\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 16),\n            child: Row(\n              children: [\n                Icon(\n                  Icons.category,\n                  color: theme.primaryColor,\n                  size: 20,\n                ),\n                const SizedBox(width: 8),\n                Text(\n                  'الأقسام الرئيسية',\n                  style: theme.textTheme.titleLarge?.copyWith(\n                    fontWeight: FontWeight.bold,\n                    color: theme.primaryColor,\n                  ),\n                ),\n                const Spacer(),\n                // زر إعادة التعيين\n                Obx(() {\n                  if (!controller.hasAnyActiveFilter) {\n                    return const SizedBox.shrink();\n                  }\n                  return TextButton.icon(\n                    onPressed: controller.resetFilters,\n                    icon: const Icon(Icons.clear_all, size: 16),\n                    label: const Text('إعادة تعيين'),\n                    style: TextButton.styleFrom(\n                      foregroundColor: Colors.grey[600],\n                      padding: const EdgeInsets.symmetric(horizontal: 8),\n                    ),\n                  );\n                }),\n              ],\n            ),\n          ),\n          \n          const SizedBox(height: 12),\n          \n          // قائمة الأقسام الأفقية\n          _buildMainCategoriesList(controller, theme),\n          \n          // الأقسام الفرعية\n          Obx(() {\n            if (controller.selectedMainCategoryId.value.isNotEmpty && \n                controller.subCategories.isNotEmpty) {\n              // تشغيل انيميشن الأقسام الفرعية\n              _subCategoriesAnimationController.forward();\n              \n              return AnimatedContainer(\n                duration: const Duration(milliseconds: 400),\n                curve: Curves.easeInOut,\n                child: FadeTransition(\n                  opacity: CurvedAnimation(\n                    parent: _subCategoriesAnimationController,\n                    curve: Curves.easeOut,\n                  ),\n                  child: SlideTransition(\n                    position: Tween<Offset>(\n                      begin: const Offset(0, 0.2),\n                      end: Offset.zero,\n                    ).animate(CurvedAnimation(\n                      parent: _subCategoriesAnimationController,\n                      curve: Curves.easeOut,\n                    )),\n                    child: Column(\n                      children: [\n                        const SizedBox(height: 16),\n                        _buildSubCategoriesSection(controller, theme),\n                      ],\n                    ),\n                  ),\n                ),\n              );\n            } else {\n              // إعادة تعيين انيميشن الأقسام الفرعية\n              _subCategoriesAnimationController.reset();\n              return const SizedBox.shrink();\n            }\n          }),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildMainCategoriesList(EnhancedCategoryFilterController controller, ThemeData theme) {\n    return Obx(() {\n      if (controller.isLoading.value) {\n        return const SizedBox(\n          height: 110,\n          child: Center(\n            child: CircularProgressIndicator(),\n          ),\n        );\n      }\n\n      if (controller.mainCategories.isEmpty) {\n        return Container(\n          height: 110,\n          margin: const EdgeInsets.symmetric(horizontal: 16),\n          decoration: BoxDecoration(\n            color: Colors.grey[100],\n            borderRadius: BorderRadius.circular(12),\n          ),\n          child: const Center(\n            child: Text(\n              'لا توجد أقسام متاحة',\n              style: TextStyle(color: Colors.grey),\n            ),\n          ),\n        );\n      }\n\n      return FadeTransition(\n        opacity: _fadeAnimation,\n        child: SlideTransition(\n          position: _slideAnimation,\n          child: SizedBox(\n            height: 110,\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              padding: const EdgeInsets.symmetric(horizontal: 16),\n              itemCount: controller.mainCategories.length + 1, // +1 للخيار \"الكل\"\n              itemBuilder: (context, index) {\n                // انيميشن منفصل لكل عنصر\n                return AnimationCard(\n                  delay: Duration(milliseconds: index * 100),\n                  child: Builder(builder: (context) {\n            if (index == 0) {\n              // خيار \"الكل\"\n              return _buildCategoryCard(\n                context: context,\n                controller: controller,\n                categoryId: '',\n                categoryName: 'الكل',\n                iconName: 'all',\n                color: 'blue',\n                imageUrl: null,\n                subCategoriesCount: 0,\n                onTap: () => controller.selectMainCategory('', 'الكل'),\n                theme: theme,\n              );\n            }\n\n            final category = controller.mainCategories[index - 1];\n            // حساب عدد الأقسام الفرعية لهذا القسم الرئيسي\n            final subCount = category.id.isEmpty ? 0 : \n              controller.allCategories.where((cat) => cat.parentId == category.id).length;\n            \n            return _buildCategoryCard(\n              context: context,\n              controller: controller,\n              categoryId: category.id,\n              categoryName: category.nameAr,\n              iconName: category.iconName,\n              color: category.color,\n              imageUrl: category.imageUrl,\n              subCategoriesCount: subCount,\n              onTap: () => controller.selectMainCategory(category.id, category.nameAr),\n              theme: theme,\n            );\n                  }),\n                );\n          },\n        ),\n          ),\n        ),\n      );\n    });\n  }\n\n  Widget _buildSubCategoriesSection(EnhancedCategoryFilterController controller, ThemeData theme) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        // عنوان الأقسام الفرعية\n        Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 16),\n          child: Row(\n            children: [\n              Icon(\n                Icons.subdirectory_arrow_right,\n                color: theme.primaryColor,\n                size: 18,\n              ),\n              const SizedBox(width: 8),\n              Text(\n                'الأقسام الفرعية',\n                style: theme.textTheme.titleMedium?.copyWith(\n                  fontWeight: FontWeight.w600,\n                  color: theme.primaryColor,\n                ),\n              ),\n            ],\n          ),\n        ),\n        \n        const SizedBox(height: 8),\n        \n        // قائمة الأقسام الفرعية\n        Obx(() {\n          if (controller.isLoadingSubCategories.value) {\n            return const SizedBox(\n              height: 60,\n              child: Center(\n                child: CircularProgressIndicator(strokeWidth: 2),\n              ),\n            );\n          }\n\n          return SizedBox(\n            height: 85,\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              padding: const EdgeInsets.symmetric(horizontal: 16),\n              itemCount: controller.subCategories.length + 1, // +1 للخيار \"الكل\"\n              itemBuilder: (context, index) {\n                if (index == 0) {\n                  // خيار \"الكل\" للأقسام الفرعية\n                  return _buildSubCategoryChip(\n                    controller: controller,\n                    categoryId: '',\n                    categoryName: 'الكل',\n                    imageUrl: null,\n                    onTap: () => controller.selectSubCategory('', ''),\n                    theme: theme,\n                  );\n                }\n\n                final subCategory = controller.subCategories[index - 1];\n                return _buildSubCategoryChip(\n                  controller: controller,\n                  categoryId: subCategory.id,\n                  categoryName: subCategory.nameAr,\n                  imageUrl: subCategory.imageUrl,\n                  onTap: () => controller.selectSubCategory(subCategory.id, subCategory.nameAr),\n                  theme: theme,\n                );\n              },\n            ),\n          );\n        }),\n      ],\n    );\n  }\n\n  Widget _buildCategoryCard({\n    required BuildContext context,\n    required EnhancedCategoryFilterController controller,\n    required String categoryId,\n    required String categoryName,\n    String? iconName,\n    String? color,\n    String? imageUrl,\n    int subCategoriesCount = 0,\n    required VoidCallback onTap,\n    required ThemeData theme,\n  }) {\n    return Obx(() {\n      final bool isSelected = categoryId.isEmpty \n          ? controller.selectedMainCategoryId.value.isEmpty\n          : controller.selectedMainCategoryId.value == categoryId;\n      final double targetWidth = isSelected ? 120 : 60;\n      final double targetHeight = isSelected ? 100 : 50;\n      final double targetFontSize = isSelected ? 12 : 6; // تقليل حجم الخط من 16 إلى 12\n      final FontWeight targetFontWeight = isSelected ? FontWeight.w900 : FontWeight.bold;\n      return Column(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          AnimatedContainer(\n            duration: const Duration(milliseconds: 400),\n            curve: Curves.easeInOutCubic, // توحيد منحنى الحركة\n            width: targetWidth,\n            height: targetHeight,\n            margin: const EdgeInsets.only(left: 6),\n            child: Material(\n              elevation: isSelected ? 12 : 2,\n              borderRadius: BorderRadius.circular(isSelected ? 24 : 16),\n              shadowColor: theme.primaryColor.withOpacity(0.2),\n              child: InkWell(\n                onTap: () {\n                  HapticFeedback.selectionClick();\n                  onTap();\n                },\n                borderRadius: BorderRadius.circular(isSelected ? 24 : 16),\n                splashColor: theme.primaryColor.withOpacity(0.3),\n                highlightColor: theme.primaryColor.withOpacity(0.1),\n                onTapDown: (_) {\n                  HapticFeedback.lightImpact();\n                },\n                child: Container(\n                  decoration: BoxDecoration(\n                    borderRadius: BorderRadius.circular(isSelected ? 24 : 16),\n                    gradient: isSelected \n                        ? LinearGradient(\n                            begin: Alignment.topLeft,\n                            end: Alignment.bottomRight,\n                            colors: [theme.primaryColor, theme.primaryColor.withOpacity(0.8)],\n                          )\n                        : const LinearGradient(\n                            begin: Alignment.topLeft,\n                            end: Alignment.bottomRight,\n                            colors: [Colors.white, Colors.white],\n                          ),\n                    border: Border.all(\n                      color: isSelected ? Colors.deepPurple : Colors.grey[300]!,\n                      width: isSelected ? 4 : 1,\n                    ),\n                    boxShadow: isSelected \n                        ? [\n                            BoxShadow(\n                              color: theme.primaryColor.withOpacity(0.3),\n                              blurRadius: 18,\n                              offset: const Offset(0, 6),\n                              spreadRadius: 2,\n                            ),\n                          ]\n                        : [\n                            BoxShadow(\n                              color: Colors.grey.withOpacity(0.1),\n                              blurRadius: 4,\n                              offset: const Offset(0, 2),\n                            ),\n                          ],\n                  ),\n                  child: Stack(\n                    children: [\n                      if (imageUrl != null && imageUrl.isNotEmpty)\n                        Positioned.fill(\n                          child: ClipRRect(\n                            borderRadius: BorderRadius.circular(isSelected ? 23 : 15),\n                            child: CachedNetworkImage(\n                              imageUrl: imageUrl,\n                              fit: BoxFit.cover,\n                              placeholder: (context, url) => Container(\n                                color: Colors.grey[100],\n                                child: Icon(\n                                  _getIconForCategory(iconName),\n                                  color: Colors.grey[400],\n                                  size: isSelected ? 48 : 32,\n                                ),\n                              ),\n                              errorWidget: (context, url, error) => Container(\n                                color: Colors.grey[100],\n                                child: Icon(\n                                  _getIconForCategory(iconName),\n                                  color: Colors.grey[400],\n                                  size: isSelected ? 48 : 32,\n                                ),\n                              ),\n                            ),\n                          ),\n                        ),\n                      if (imageUrl != null && imageUrl.isNotEmpty)\n                        Positioned.fill(\n                          child: Container(\n                            decoration: BoxDecoration(\n                              borderRadius: BorderRadius.circular(isSelected ? 23 : 15),\n                              gradient: LinearGradient(\n                                begin: Alignment.topCenter,\n                                end: Alignment.bottomCenter,\n                                colors: [Colors.transparent, Colors.black.withOpacity(0.7)],\n                                stops: const [0.3, 1.0],\n                              ),\n                            ),\n                          ),\n                        ),\n                      Positioned.fill(\n                        child: Padding(\n                          padding: EdgeInsets.all(isSelected ? 6 : 4), // padding متغير حسب الحالة\n                          child: Column(\n                            mainAxisSize: MainAxisSize.min,\n                            mainAxisAlignment: MainAxisAlignment.center,\n                            children: [\n                              if (imageUrl == null || imageUrl.isEmpty)\n                                Flexible( // إضافة Flexible للأيقونة\n                                  child: Icon(\n                                    _getIconForCategory(iconName),\n                                    color: isSelected ? Colors.white : _getColorFromString(color) ?? theme.primaryColor,\n                                    size: isSelected ? 28 : 16, // تقليل حجم الأيقونة من 32 إلى 28\n                                  ),\n                                ),\n                              SizedBox(height: isSelected ? 4 : 2), // مساحة متغيرة\n                              Flexible( // إضافة Flexible للنص\n                                child: Container(\n                                  padding: EdgeInsets.symmetric(\n                                    horizontal: isSelected ? 4 : 3, // padding أقل للنص\n                                    vertical: isSelected ? 3 : 2,\n                                  ),\n                                  decoration: BoxDecoration(\n                                    color: isSelected ? theme.primaryColor.withOpacity(0.85) : Colors.white.withOpacity(0.85),\n                                    borderRadius: BorderRadius.circular(8),\n                                    boxShadow: isSelected\n                                        ? [\n                                            BoxShadow(\n                                              color: theme.primaryColor.withOpacity(0.13),\n                                              blurRadius: 4,\n                                              offset: Offset(0, 1),\n                                            ),\n                                          ]\n                                        : [],\n                                  ),\n                                  child: AnimatedDefaultTextStyle(\n                                    duration: const Duration(milliseconds: 400),\n                                    curve: Curves.easeInOutCubic,\n                                    style: TextStyle(\n                                      fontSize: targetFontSize,\n                                      fontWeight: targetFontWeight,\n                                      color: isSelected ? Colors.white : theme.primaryColor,\n                                      letterSpacing: 0.1,\n                                      shadows: isSelected\n                                          ? [\n                                              Shadow(\n                                                offset: Offset(0, 1),\n                                                blurRadius: 4,\n                                                color: theme.primaryColor.withOpacity(0.18),\n                                              ),\n                                            ]\n                                          : [],\n                                    ),\n                                    child: Text(\n                                      categoryName,\n                                      textAlign: TextAlign.center,\n                                      maxLines: 1,\n                                      overflow: TextOverflow.ellipsis,\n                                    ),\n                                  ),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      );\n    });\n  }\n\n  Widget _buildSubCategoryChip({\n    required EnhancedCategoryFilterController controller,\n    required String categoryId,\n    required String categoryName,\n    String? imageUrl,\n    required VoidCallback onTap,\n    required ThemeData theme,\n  }) {\n    return Obx(() {\n      final bool isSelected = categoryId.isEmpty \n          ? controller.selectedSubCategoryId.value.isEmpty\n          : controller.selectedSubCategoryId.value == categoryId;\n      final double targetWidth = isSelected ? 85 : 60;\n      final double targetHeight = isSelected ? 75 : 54;\n      final double targetFontSize = isSelected ? 10 : 5;\n      final FontWeight targetFontWeight = isSelected ? FontWeight.w900 : FontWeight.bold;\n      return Column(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          AnimatedContainer(\n            duration: const Duration(milliseconds: 400),\n            curve: Curves.easeInOutCubic, // توحيد منحنى الحركة\n            width: targetWidth,\n            height: targetHeight,\n            margin: const EdgeInsets.only(left: 5),\n            child: Material(\n              elevation: isSelected ? 10 : 3,\n              borderRadius: BorderRadius.circular(isSelected ? 28 : 20),\n              shadowColor: theme.primaryColor.withOpacity(0.3),\n              child: InkWell(\n                onTap: () {\n                  HapticFeedback.selectionClick();\n                  onTap();\n                },\n                borderRadius: BorderRadius.circular(isSelected ? 28 : 20),\n                splashColor: theme.primaryColor.withOpacity(0.4),\n                highlightColor: theme.primaryColor.withOpacity(0.2),\n                onTapDown: (_) {\n                  HapticFeedback.lightImpact();\n                },\n                child: AnimatedContainer(\n                  duration: const Duration(milliseconds: 350),\n                  decoration: BoxDecoration(\n                    borderRadius: BorderRadius.circular(isSelected ? 28 : 20),\n                    gradient: isSelected\n                        ? LinearGradient(\n                            begin: Alignment.topLeft,\n                            end: Alignment.bottomRight,\n                            colors: [theme.primaryColor, theme.primaryColor.withOpacity(0.8)],\n                          )\n                        : const LinearGradient(\n                            begin: Alignment.topLeft,\n                            end: Alignment.bottomRight,\n                            colors: [Colors.white, Colors.white],\n                          ),\n                    border: Border.all(\n                      color: isSelected ? Colors.deepPurple : Colors.grey[300]!,\n                      width: isSelected ? 4 : 1,\n                    ),\n                    boxShadow: isSelected\n                        ? [\n                            BoxShadow(\n                              color: theme.primaryColor.withOpacity(0.4),\n                              blurRadius: 16,\n                              offset: const Offset(0, 4),\n                              spreadRadius: 2,\n                            ),\n                          ]\n                        : [\n                            BoxShadow(\n                              color: Colors.grey.withOpacity(0.15),\n                              blurRadius: 4,\n                              offset: const Offset(0, 2),\n                            ),\n                          ],\n                  ),\n                  child: Stack(\n                    children: [\n                      if (imageUrl != null && imageUrl.isNotEmpty)\n                        Positioned.fill(\n                          child: ClipRRect(\n                            borderRadius: BorderRadius.circular(isSelected ? 27 : 19),\n                            child: CachedNetworkImage(\n                              imageUrl: imageUrl,\n                              fit: BoxFit.cover,\n                              placeholder: (context, url) => Container(\n                                color: Colors.grey[100],\n                                child: Icon(\n                                  Icons.category_outlined,\n                                  color: Colors.grey[400],\n                                  size: isSelected ? 28 : 14,\n                                ),\n                              ),\n                              errorWidget: (context, url, error) => Container(\n                                color: Colors.grey[100],\n                                child: Icon(\n                                  Icons.category_outlined,\n                                  color: Colors.grey[400],\n                                  size: isSelected ? 28 : 14,\n                                ),\n                              ),\n                            ),\n                          ),\n                        ),\n                      if (imageUrl != null && imageUrl.isNotEmpty)\n                        Positioned.fill(\n                          child: Container(\n                            decoration: BoxDecoration(\n                              borderRadius: BorderRadius.circular(isSelected ? 27 : 13),\n                              gradient: LinearGradient(\n                                begin: Alignment.topCenter,\n                                end: Alignment.bottomCenter,\n                                colors: [Colors.transparent, Colors.black.withOpacity(0.7)],\n                                stops: const [0.4, 1.0],\n                              ),\n                            ),\n                          ),\n                        ),\n                      Positioned.fill(\n                        child: Padding(\n                          padding: EdgeInsets.all(isSelected ? 6 : 4), // padding متغير حسب الحالة\n                          child: Column(\n                            mainAxisSize: MainAxisSize.min,\n                            mainAxisAlignment: MainAxisAlignment.center,\n                            children: [\n                              if (imageUrl == null || imageUrl.isEmpty)\n                                Flexible( // إضافة Flexible للأيقونة\n                                  child: Icon(\n                                    Icons.category_outlined,\n                                    color: isSelected ? Colors.white : theme.primaryColor,\n                                    size: isSelected ? 24 : 14, // تقليل حجم الأيقونة من 28 إلى 24\n                                  ),\n                                ),\n                              SizedBox(height: isSelected ? 4 : 2), // مساحة متغيرة\n                              Flexible( // إضافة Flexible للنص\n                                child: Container(\n                                  padding: EdgeInsets.symmetric(\n                                    horizontal: isSelected ? 4 : 3, // padding أقل للنص\n                                    vertical: isSelected ? 2 : 1,\n                                  ),\n                                decoration: BoxDecoration(\n                                  color: isSelected ? theme.primaryColor.withOpacity(0.85) : Colors.white.withOpacity(0.85),\n                                  borderRadius: BorderRadius.circular(7),\n                                  boxShadow: isSelected\n                                      ? [\n                                          BoxShadow(\n                                            color: theme.primaryColor.withOpacity(0.13),\n                                            blurRadius: 3,\n                                            offset: Offset(0, 1),\n                                          ),\n                                        ]\n                                      : [],\n                                ),\n                                child: AnimatedDefaultTextStyle(\n                                  duration: const Duration(milliseconds: 400),\n                                  curve: Curves.easeInOutCubic,\n                                  style: TextStyle(\n                                    fontSize: targetFontSize,\n                                    fontWeight: targetFontWeight,\n                                    color: isSelected ? Colors.white : theme.primaryColor,\n                                    letterSpacing: 0.1,\n                                    shadows: isSelected\n                                        ? [\n                                            Shadow(\n                                              offset: Offset(0, 1),\n                                              blurRadius: 4,\n                                              color: theme.primaryColor.withOpacity(0.18),\n                                            ),\n                                          ]\n                                        : [],\n                                  ),\n                                  child: Text(\n                                    categoryName.isEmpty ? 'الكل' : categoryName,\n                                    textAlign: TextAlign.center,\n                                    maxLines: 1,\n                                    overflow: TextOverflow.ellipsis,\n                                  ),\n                                ),\n                              ),\n      )\n                            ],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      );\n    });\n  }\n\n  IconData _getIconForCategory(String? iconName) {\n    switch (iconName?.toLowerCase()) {\n      case 'all':\n        return Icons.apps;\n      case 'food':\n        return Icons.restaurant;\n      case 'electronics':\n        return Icons.devices;\n      case 'clothing':\n        return Icons.checkroom;\n      case 'home':\n        return Icons.home;\n      case 'books':\n        return Icons.book;\n      case 'sports':\n        return Icons.sports;\n      case 'beauty':\n        return Icons.face;\n      case 'toys':\n        return Icons.toys;\n      case 'automotive':\n        return Icons.directions_car;\n      case 'health':\n        return Icons.medical_services;\n      case 'tools':\n        return Icons.build;\n      case 'garden':\n        return Icons.eco;\n      default:\n        return Icons.category;\n    }\n  }\n\n  Color? _getColorFromString(String? colorString) {\n    if (colorString == null) return null;\n    \n    switch (colorString.toLowerCase()) {\n      case 'red':\n        return Colors.red;\n      case 'blue':\n        return Colors.blue;\n      case 'green':\n        return Colors.green;\n      case 'orange':\n        return Colors.orange;\n      case 'purple':\n        return Colors.purple;\n      case 'teal':\n        return Colors.teal;\n      case 'pink':\n        return Colors.pink;\n      case 'indigo':\n        return Colors.indigo;\n      case 'cyan':\n        return Colors.cyan;\n      case 'amber':\n        return Colors.amber;\n      case 'brown':\n        return Colors.brown;\n      case 'grey':\n        return Colors.grey;\n      default:\n        return null;\n    }\n  }\n}\n\n/// Widget انيميشن احترافي للكروت\nclass AnimationCard extends StatefulWidget {\n  final Widget child;\n  final Duration delay;\n\n  const AnimationCard({\n    super.key,\n    required this.child,\n    this.delay = Duration.zero,\n  });\n\n  @override\n  State<AnimationCard> createState() => _AnimationCardState();\n}\n\nclass _AnimationCardState extends State<AnimationCard>\n    with SingleTickerProviderStateMixin {\n  late AnimationController _controller;\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n  late Animation<double> _scaleAnimation;\n\n  @override\n  void initState() {\n    super.initState();\n    _controller = AnimationController(\n      duration: const Duration(milliseconds: 600),\n      vsync: this,\n    );\n\n    _fadeAnimation = Tween<double>(\n      begin: 0.0,\n      end: 1.0,\n    ).animate(CurvedAnimation(\n      parent: _controller,\n      curve: const Interval(0.0, 0.6, curve: Curves.easeOut),\n    ));\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.5),\n      end: Offset.zero,\n    ).animate(CurvedAnimation(\n      parent: _controller,\n      curve: const Interval(0.2, 0.8, curve: Curves.easeOutCubic),\n    ));\n\n    _scaleAnimation = Tween<double>(\n      begin: 0.8,\n      end: 1.0,\n    ).animate(CurvedAnimation(\n      parent: _controller,\n      curve: const Interval(0.4, 1.0, curve: Curves.elasticOut),\n    ));\n\n    // تأخير بدء الانيميشن\n    Future.delayed(widget.delay, () {\n      if (mounted) {\n        _controller.forward();\n      }\n    });\n  }\n\n  @override\n  void dispose() {\n    _controller.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return FadeTransition(\n      opacity: _fadeAnimation,\n      child: SlideTransition(\n        position: _slideAnimation,\n        child: ScaleTransition(\n          scale: _scaleAnimation,\n          child: widget.child,\n        ),\n      ),\n    );\n  }\n} "
        }
    ]
}