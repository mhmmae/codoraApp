{
    "sourceFile": "lib/الكود الخاص بتطبيق العميل /registration/phoneNamber/widgets/pinput_code_field.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752798049942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752837553553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,28 +33,31 @@\n       border: Border.all(color: const Color(0xFF4CAF50), width: 2),\n       boxShadow: [\n         BoxShadow(\n           color: const Color(0xFF4CAF50).withOpacity(0.2),\n-          blurRadius: 8,\n+          blurRadius: 8.0.clamp(0.0, double.infinity),\n           offset: const Offset(0, 2),\n+          spreadRadius: 0.0,\n         ),\n       ],\n     );\n \n     final submittedPinTheme = defaultPinTheme.copyWith(\n       decoration: defaultPinTheme.decoration?.copyWith(\n         color: const Color(0xFF4CAF50).withOpacity(0.1),\n         border: Border.all(color: const Color(0xFF4CAF50), width: 1.5),\n+        boxShadow: [], // إزالة الظلال لتجنب التعارض\n       ),\n     );\n \n     final errorPinTheme = defaultPinTheme.copyDecorationWith(\n       border: Border.all(color: Colors.red, width: 2),\n       boxShadow: [\n         BoxShadow(\n           color: Colors.red.withOpacity(0.2),\n-          blurRadius: 8,\n+          blurRadius: 8.0.clamp(0.0, double.infinity),\n           offset: const Offset(0, 2),\n+          spreadRadius: 0.0,\n         ),\n       ],\n     );\n \n@@ -65,15 +68,13 @@\n             textDirection: TextDirection.ltr,\n             child: Pinput(\n               controller: controller.pinController,\n               length: 6,\n-              defaultPinTheme:\n-                  controller.isCodeValid.value\n-                      ? defaultPinTheme\n-                      : errorPinTheme,\n+              defaultPinTheme: defaultPinTheme,\n               focusedPinTheme: focusedPinTheme,\n               submittedPinTheme: submittedPinTheme,\n-              errorPinTheme: errorPinTheme,\n+              errorPinTheme:\n+                  controller.isCodeValid.value ? null : errorPinTheme,\n               pinputAutovalidateMode: PinputAutovalidateMode.onSubmit,\n               showCursor: true,\n               cursor: Container(\n                 width: 2.w,\n@@ -89,12 +90,15 @@\n                   controller.isCodeValid.value = true;\n                 }\n               },\n               hapticFeedbackType: HapticFeedbackType.lightImpact,\n-              animationCurve: Curves.elasticOut,\n-              animationDuration: const Duration(milliseconds: 300),\n+              animationCurve: Curves.easeInOut,\n+              animationDuration: const Duration(milliseconds: 200),\n               keyboardType: TextInputType.number,\n               autofocus: true,\n+              forceErrorState: !controller.isCodeValid.value,\n+              enableSuggestions: false,\n+              obscureText: false,\n             ),\n           ),\n \n           // عرض رسالة الخطأ\n"
                }
            ],
            "date": 1752798049942,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:pinput/pinput.dart';\nimport 'package:get/get.dart';\n\nimport '../controllers/code_phone_controller.dart';\n\n/// حقل إدخال رمز التحقق باستخدام Pinput\n/// يدعم التحقق التلقائي والتصميم الحديث\nclass PinputCodeField extends StatelessWidget {\n  final CodePhoneController controller;\n\n  const PinputCodeField({super.key, required this.controller});\n\n  @override\n  Widget build(BuildContext context) {\n    final defaultPinTheme = PinTheme(\n      width: 50.w,\n      height: 50.h,\n      textStyle: TextStyle(\n        fontSize: 20.sp,\n        color: Colors.black,\n        fontWeight: FontWeight.w600,\n      ),\n      decoration: BoxDecoration(\n        border: Border.all(color: Colors.grey.shade300, width: 1.5),\n        borderRadius: BorderRadius.circular(12.r),\n        color: Colors.white,\n      ),\n    );\n\n    final focusedPinTheme = defaultPinTheme.copyDecorationWith(\n      border: Border.all(color: const Color(0xFF4CAF50), width: 2),\n      boxShadow: [\n        BoxShadow(\n          color: const Color(0xFF4CAF50).withOpacity(0.2),\n          blurRadius: 8,\n          offset: const Offset(0, 2),\n        ),\n      ],\n    );\n\n    final submittedPinTheme = defaultPinTheme.copyWith(\n      decoration: defaultPinTheme.decoration?.copyWith(\n        color: const Color(0xFF4CAF50).withOpacity(0.1),\n        border: Border.all(color: const Color(0xFF4CAF50), width: 1.5),\n      ),\n    );\n\n    final errorPinTheme = defaultPinTheme.copyDecorationWith(\n      border: Border.all(color: Colors.red, width: 2),\n      boxShadow: [\n        BoxShadow(\n          color: Colors.red.withOpacity(0.2),\n          blurRadius: 8,\n          offset: const Offset(0, 2),\n        ),\n      ],\n    );\n\n    return Obx(() {\n      return Column(\n        children: [\n          Directionality(\n            textDirection: TextDirection.ltr,\n            child: Pinput(\n              controller: controller.pinController,\n              length: 6,\n              defaultPinTheme:\n                  controller.isCodeValid.value\n                      ? defaultPinTheme\n                      : errorPinTheme,\n              focusedPinTheme: focusedPinTheme,\n              submittedPinTheme: submittedPinTheme,\n              errorPinTheme: errorPinTheme,\n              pinputAutovalidateMode: PinputAutovalidateMode.onSubmit,\n              showCursor: true,\n              cursor: Container(\n                width: 2.w,\n                height: 20.h,\n                color: const Color(0xFF4CAF50),\n              ),\n              onCompleted: (pin) {\n                controller.verifyCodeFromPinput();\n              },\n              onChanged: (value) {\n                if (controller.errorMessage.value.isNotEmpty) {\n                  controller.errorMessage.value = '';\n                  controller.isCodeValid.value = true;\n                }\n              },\n              hapticFeedbackType: HapticFeedbackType.lightImpact,\n              animationCurve: Curves.elasticOut,\n              animationDuration: const Duration(milliseconds: 300),\n              keyboardType: TextInputType.number,\n              autofocus: true,\n            ),\n          ),\n\n          // عرض رسالة الخطأ\n          if (controller.errorMessage.value.isNotEmpty)\n            Container(\n              margin: EdgeInsets.only(top: 8.h),\n              child: Text(\n                controller.errorMessage.value,\n                style: TextStyle(\n                  color: Colors.red,\n                  fontSize: 12.sp,\n                  fontWeight: FontWeight.w500,\n                ),\n                textAlign: TextAlign.center,\n              ),\n            ),\n        ],\n      );\n    });\n  }\n}\n"
        }
    ]
}