{
    "sourceFile": "lib/الكود الخاص بتطبيق العميل /services/phone_auth_test.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752837553467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753097375622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'phone_auth_service.dart';\n \n /// صفحة اختبار PhoneAuthService\n class PhoneAuthTestPage extends StatelessWidget {\n-  const PhoneAuthTestPage({Key? key}) : super(key: key);\n+  const PhoneAuthTestPage({super.key});\n \n   @override\n   Widget build(BuildContext context) {\n     final controller = Get.put(PhoneAuthTestController());\n"
                }
            ],
            "date": 1752837553467,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:get/get.dart';\nimport 'phone_auth_service.dart';\n\n/// صفحة اختبار PhoneAuthService\nclass PhoneAuthTestPage extends StatelessWidget {\n  const PhoneAuthTestPage({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    final controller = Get.put(PhoneAuthTestController());\n\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('اختبار خدمة التحقق من الهاتف'),\n        backgroundColor: Colors.blue,\n        foregroundColor: Colors.white,\n      ),\n      body: Padding(\n        padding: const EdgeInsets.all(16.0),\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.stretch,\n          children: [\n            // عرض حالة الخدمة\n            Obx(\n              () => Card(\n                child: Padding(\n                  padding: const EdgeInsets.all(16.0),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Text(\n                        'حالة الخدمة:',\n                        style: Theme.of(context).textTheme.titleMedium\n                            ?.copyWith(fontWeight: FontWeight.bold),\n                      ),\n                      const SizedBox(height: 8),\n                      Text('📊 الحالة: ${controller.serviceStatus.value}'),\n                      Text('📱 الرقم الحالي: ${controller.currentPhone.value}'),\n                      Text(\n                        '🔑 معرف التحقق: ${controller.hasVerificationId.value ? \"متوفر\" : \"غير متوفر\"}',\n                      ),\n                      Text(\n                        '⏱️ التحميل: ${controller.isLoading.value ? \"نعم\" : \"لا\"}',\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n\n            const SizedBox(height: 16),\n\n            // حقل إدخال رقم الهاتف\n            TextField(\n              controller: controller.phoneController,\n              decoration: const InputDecoration(\n                labelText: 'رقم الهاتف (مع رمز الدولة)',\n                hintText: '+9647XXXXXXXX',\n                border: OutlineInputBorder(),\n                prefixIcon: Icon(Icons.phone),\n              ),\n              keyboardType: TextInputType.phone,\n            ),\n\n            const SizedBox(height: 16),\n\n            // أزرار الاختبار\n            Obx(\n              () => ElevatedButton(\n                onPressed:\n                    controller.isLoading.value ? null : controller.testSendCode,\n                style: ElevatedButton.styleFrom(\n                  backgroundColor: Colors.blue,\n                  foregroundColor: Colors.white,\n                  padding: const EdgeInsets.symmetric(vertical: 12),\n                ),\n                child:\n                    controller.isLoading.value\n                        ? const Row(\n                          mainAxisAlignment: MainAxisAlignment.center,\n                          children: [\n                            SizedBox(\n                              width: 20,\n                              height: 20,\n                              child: CircularProgressIndicator(\n                                strokeWidth: 2,\n                                valueColor: AlwaysStoppedAnimation<Color>(\n                                  Colors.white,\n                                ),\n                              ),\n                            ),\n                            SizedBox(width: 8),\n                            Text('جاري الإرسال...'),\n                          ],\n                        )\n                        : const Text('إرسال رمز التحقق'),\n              ),\n            ),\n\n            const SizedBox(height: 8),\n\n            ElevatedButton(\n              onPressed: controller.testServiceDiagnosis,\n              style: ElevatedButton.styleFrom(\n                backgroundColor: Colors.green,\n                foregroundColor: Colors.white,\n                padding: const EdgeInsets.symmetric(vertical: 12),\n              ),\n              child: const Text('تشخيص الخدمة'),\n            ),\n\n            const SizedBox(height: 8),\n\n            ElevatedButton(\n              onPressed: controller.validatePhoneNumber,\n              style: ElevatedButton.styleFrom(\n                backgroundColor: Colors.orange,\n                foregroundColor: Colors.white,\n                padding: const EdgeInsets.symmetric(vertical: 12),\n              ),\n              child: const Text('فحص صحة الرقم'),\n            ),\n\n            const SizedBox(height: 16),\n\n            // عرض النتائج\n            Expanded(\n              child: Obx(\n                () => Container(\n                  padding: const EdgeInsets.all(12),\n                  decoration: BoxDecoration(\n                    color: Colors.grey[100],\n                    borderRadius: BorderRadius.circular(8),\n                    border: Border.all(color: Colors.grey[300]!),\n                  ),\n                  child: SingleChildScrollView(\n                    child: Text(\n                      controller.results.value,\n                      style: const TextStyle(\n                        fontFamily: 'monospace',\n                        fontSize: 12,\n                      ),\n                    ),\n                  ),\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\n/// متحكم اختبار PhoneAuthService\nclass PhoneAuthTestController extends GetxController {\n  late PhoneAuthService phoneAuthService;\n\n  final phoneController = TextEditingController();\n  final RxString results = ''.obs;\n  final RxString serviceStatus = 'غير معروف'.obs;\n  final RxString currentPhone = ''.obs;\n  final RxBool hasVerificationId = false.obs;\n  final RxBool isLoading = false.obs;\n\n  @override\n  void onInit() {\n    super.onInit();\n    _initializeService();\n  }\n\n  /// تهيئة الخدمة\n  void _initializeService() {\n    try {\n      phoneAuthService = Get.find<PhoneAuthService>();\n      _addResult('✅ تم العثور على PhoneAuthService');\n      _updateServiceStatus();\n    } catch (e) {\n      _addResult('❌ فشل في العثور على PhoneAuthService: $e');\n      try {\n        Get.put(PhoneAuthService(), permanent: true);\n        phoneAuthService = Get.find<PhoneAuthService>();\n        _addResult('✅ تم إنشاء PhoneAuthService جديد');\n        _updateServiceStatus();\n      } catch (e2) {\n        _addResult('❌ فشل في إنشاء PhoneAuthService: $e2');\n      }\n    }\n  }\n\n  /// تحديث حالة الخدمة\n  void _updateServiceStatus() {\n    try {\n      serviceStatus.value = phoneAuthService.isLoading ? 'مشغول' : 'جاهز';\n      currentPhone.value =\n          phoneAuthService.phoneNumber.isEmpty\n              ? 'غير محدد'\n              : phoneAuthService.phoneNumber;\n      hasVerificationId.value = phoneAuthService.verificationId.isNotEmpty;\n      isLoading.value = phoneAuthService.isLoading;\n    } catch (e) {\n      _addResult('❌ خطأ في تحديث حالة الخدمة: $e');\n    }\n  }\n\n  /// اختبار إرسال رمز التحقق\n  Future<void> testSendCode() async {\n    final phone = phoneController.text.trim();\n\n    if (phone.isEmpty) {\n      _addResult('⚠️ يرجى إدخال رقم الهاتف');\n      return;\n    }\n\n    _addResult('\\n🚀 بدء اختبار إرسال رمز التحقق...');\n    _addResult('📱 الرقم: $phone');\n\n    try {\n      isLoading.value = true;\n\n      // التحقق من صحة الرقم أولاً\n      final validation = phoneAuthService.validatePhoneNumber(phone);\n      _addResult('📞 نتيجة فحص الرقم: ${validation.toString()}');\n\n      if (validation['is_valid_format'] != true) {\n        _addResult('❌ تنسيق الرقم غير صحيح');\n        if (validation['suggestions'] != null) {\n          _addResult('💡 اقتراحات: ${validation['suggestions']}');\n        }\n        return;\n      }\n\n      // إرسال رمز التحقق\n      _addResult('📤 إرسال رمز التحقق...');\n      final result = await phoneAuthService.sendVerificationCode(phone);\n\n      if (result.isSuccess) {\n        _addResult('✅ نجح إرسال رمز التحقق!');\n        _addResult('📩 نوع النتيجة: ${result.type}');\n        if (result.verificationId != null) {\n          _addResult('🔑 معرف التحقق: ${result.verificationId}');\n        }\n      } else {\n        _addResult('❌ فشل إرسال رمز التحقق: ${result.error}');\n      }\n    } catch (e) {\n      _addResult('🚨 خطأ غير متوقع: $e');\n    } finally {\n      isLoading.value = false;\n      _updateServiceStatus();\n    }\n  }\n\n  /// تشخيص الخدمة\n  Future<void> testServiceDiagnosis() async {\n    _addResult('\\n🔍 بدء تشخيص الخدمة...');\n\n    try {\n      // اختبار الخدمة\n      phoneAuthService.testService();\n      _addResult('✅ اختبار الخدمة مكتمل');\n\n      // تشخيص Firebase\n      final diagnosis = await phoneAuthService.diagnoseFirebaseSetup();\n      _addResult('📊 تشخيص Firebase:');\n      diagnosis.forEach((key, value) {\n        _addResult('   $key: $value');\n      });\n\n      // تقرير الخدمة\n      final report = phoneAuthService.getServiceReport();\n      _addResult('\\n📋 تقرير الخدمة:');\n      report.forEach((key, value) {\n        _addResult('   $key: $value');\n      });\n    } catch (e) {\n      _addResult('❌ خطأ في التشخيص: $e');\n    }\n\n    _updateServiceStatus();\n  }\n\n  /// فحص صحة رقم الهاتف\n  void validatePhoneNumber() {\n    final phone = phoneController.text.trim();\n\n    if (phone.isEmpty) {\n      _addResult('⚠️ يرجى إدخال رقم الهاتف أولاً');\n      return;\n    }\n\n    _addResult('\\n📞 فحص صحة رقم الهاتف: $phone');\n\n    try {\n      final validation = phoneAuthService.validatePhoneNumber(phone);\n      _addResult('📊 نتائج الفحص:');\n      validation.forEach((key, value) {\n        _addResult('   $key: $value');\n      });\n    } catch (e) {\n      _addResult('❌ خطأ في فحص الرقم: $e');\n    }\n  }\n\n  /// إضافة نتيجة للسجل\n  void _addResult(String result) {\n    final timestamp = DateTime.now().toString().substring(11, 19);\n    results.value += '[$timestamp] $result\\n';\n  }\n\n  /// تنظيف السجل\n  void clearResults() {\n    results.value = '';\n  }\n\n  @override\n  void onClose() {\n    phoneController.dispose();\n    super.onClose();\n  }\n}\n"
        }
    ]
}