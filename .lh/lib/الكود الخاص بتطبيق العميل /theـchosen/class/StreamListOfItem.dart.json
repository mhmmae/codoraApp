{
    "sourceFile": "lib/الكود الخاص بتطبيق العميل /theـchosen/class/StreamListOfItem.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753157006718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753157006718,
            "name": "Commit-0",
            "content": "// stream_list_of_item.dart\nimport 'package:cloud_firestore/cloud_firestore.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart';\n\nimport '../../../XXX/xxx_firebase.dart';\nimport '../GetXController/GetAddAndRemove.dart';\nimport 'BosAddAndRemove.dart';\n\n/// ودجة لعرض العناصر في السلة (البطاقة) باستخدام Stream من Firestore.\n/// تقوم الودجة بالاستماع إلى تغييرات المستندات في مجموعة السلة لجلب بيانات كل منتج،\n/// ثم تعرض تفاصيل المنتج مع أزرار لتعديل الكمية (زيادة/نقصان) وحذف المنتج.\nclass StreamListOfItem extends StatefulWidget {\n  const StreamListOfItem({super.key});\n\n  @override\n  State<StreamListOfItem> createState() => _StreamListOfItemState();\n}\n\nclass _StreamListOfItemState extends State<StreamListOfItem>\n    with TickerProviderStateMixin {\n  late AnimationController _listAnimationController;\n  final List<AnimationController> _itemControllers = [];\n\n  // Stream لجلب بيانات المنتجات الموجودة في السلة (the-chosen).\n  final Stream<QuerySnapshot> cardItemStream =\n      FirebaseFirestore.instance\n          .collection('the-chosen')\n          .doc(FirebaseAuth.instance.currentUser!.uid)\n          .collection(FirebaseX.appName)\n          .snapshots();\n\n  @override\n  void initState() {\n    super.initState();\n    _listAnimationController = AnimationController(\n      duration: const Duration(milliseconds: 800),\n      vsync: this,\n    );\n    _listAnimationController.forward();\n  }\n\n  @override\n  void dispose() {\n    _listAnimationController.dispose();\n    for (var controller in _itemControllers) {\n      controller.dispose();\n    }\n    super.dispose();\n  }\n\n  /// دالة لاسترجاع بيانات المنتج من مجموعة \"Item\" باستخدام معرف المنتج.\n  Future<DocumentSnapshot> fetchItem(String itemUid) {\n    return FirebaseFirestore.instance\n        .collection(FirebaseX.itemsCollection)\n        .doc(itemUid)\n        .get();\n  }\n\n  /// دالة لاسترجاع بيانات المنتج من مجموعة \"Itemoffer\" باستخدام معرف المنتج.\n  Future<DocumentSnapshot> fetchItemOffer(String itemUid) {\n    return FirebaseFirestore.instance\n        .collection(FirebaseX.offersCollection)\n        .doc(itemUid)\n        .get();\n  }\n\n  /// دالة لحذف عنصر من السلة باستخدام معرف المستند.\n  Future<void> deleteCartItem(String uidDoc) async {\n    await FirebaseFirestore.instance\n        .collection('the-chosen')\n        .doc(FirebaseAuth.instance.currentUser!.uid)\n        .collection(FirebaseX.appName)\n        .doc(uidDoc)\n        .delete();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final double hi = MediaQuery.of(context).size.height;\n    final double wi = MediaQuery.of(context).size.width;\n\n    return StreamBuilder<QuerySnapshot>(\n      stream: cardItemStream,\n      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {\n        // معالجة الخطأ أثناء جلب البيانات.\n        if (snapshot.hasError) {\n          return _buildErrorState();\n        }\n        // عرض حالة الانتظار أثناء التحميل.\n        if (snapshot.connectionState == ConnectionState.waiting) {\n          return _buildLoadingState();\n        }\n        // التحقق من وجود مستندات.\n        if (snapshot.data == null || snapshot.data!.docs.isEmpty) {\n          return _buildEmptyState();\n        }\n\n        // تنظيف controllers القديمة وإنشاء جديدة\n        for (var controller in _itemControllers) {\n          controller.dispose();\n        }\n        _itemControllers.clear();\n\n        // إنشاء controllers جديدة لكل عنصر\n        for (int i = 0; i < snapshot.data!.docs.length; i++) {\n          final controller = AnimationController(\n            duration: Duration(milliseconds: 600 + (i * 100)),\n            vsync: this,\n          );\n          _itemControllers.add(controller);\n          // بدء الأنيميشن مع تأخير متدرج\n          Future.delayed(Duration(milliseconds: i * 150), () {\n            if (mounted) controller.forward();\n          });\n        }\n\n        // بناء قائمة العناصر باستخدام بيانات المستندات مع أنيميشن\n        return AnimatedBuilder(\n          animation: _listAnimationController,\n          builder: (context, child) {\n            return ListView.separated(\n              padding: const EdgeInsets.all(12),\n              itemCount: snapshot.data!.docs.length,\n              separatorBuilder:\n                  (context, index) =>\n                      SizedBox(height: 12 * _listAnimationController.value),\n              itemBuilder: (context, index) {\n                final document = snapshot.data!.docs[index];\n                return _buildAnimatedCartItem(document, hi, wi, index);\n              },\n            );\n          },\n        );\n      },\n    );\n  }\n\n  /// بناء عنصر السلة مع أنيميشن\n  Widget _buildAnimatedCartItem(\n    DocumentSnapshot document,\n    double hi,\n    double wi,\n    int index,\n  ) {\n    if (index >= _itemControllers.length) return const SizedBox();\n\n    final controller = _itemControllers[index];\n\n    return AnimatedBuilder(\n      animation: controller,\n      builder: (context, child) {\n        return SlideTransition(\n          position: Tween<Offset>(\n            begin: const Offset(0.3, 0),\n            end: Offset.zero,\n          ).animate(\n            CurvedAnimation(parent: controller, curve: Curves.easeOutBack),\n          ),\n          child: FadeTransition(\n            opacity: CurvedAnimation(\n              parent: controller,\n              curve: Curves.easeInOut,\n            ),\n            child: Transform.scale(\n              scale:\n                  Tween<double>(begin: 0.8, end: 1.0)\n                      .animate(\n                        CurvedAnimation(\n                          parent: controller,\n                          curve: Curves.elasticOut,\n                        ),\n                      )\n                      .value,\n              child: _buildCartItem(document, hi, wi, index),\n            ),\n          ),\n        );\n      },\n    );\n  }\n\n  /// بناء عنصر واحد في السلة بتصميم محسن\n  Widget _buildCartItem(\n    DocumentSnapshot document,\n    double hi,\n    double wi,\n    int index,\n  ) {\n    // تحويل بيانات المستند إلى خريطة مع التحقق من null-safety.\n    final dataMap = document.data() as Map<String, dynamic>?;\n    if (dataMap == null) {\n      return const SizedBox();\n    }\n\n    // استخراج الحقول الأساسية مع تحديد القيم الافتراضية.\n    final bool isOffer = dataMap['isOfer'] as bool? ?? false;\n    final String uidItem = dataMap['uidItem'] as String? ?? \"\";\n    final String uidOfDoc = dataMap['uidOfDoc'] as String? ?? \"\";\n    final int number = dataMap['number'] as int? ?? 0;\n    final String uidAdd = dataMap['uidAdd'] as String? ?? \"\";\n\n    // تحديد الدالة المناسبة لاسترجاع بيانات المنتج (عادية أو عرض).\n    Future<DocumentSnapshot> productFuture =\n        isOffer ? fetchItemOffer(uidItem) : fetchItem(uidItem);\n\n    return FutureBuilder<DocumentSnapshot>(\n      future: productFuture,\n      builder: (\n        BuildContext context,\n        AsyncSnapshot<DocumentSnapshot> productSnapshot,\n      ) {\n        if (productSnapshot.hasError) {\n          return _buildProductErrorCard();\n        }\n        if (productSnapshot.connectionState == ConnectionState.waiting) {\n          return _buildProductLoadingCard(hi, wi);\n        }\n        if (!productSnapshot.hasData || !productSnapshot.data!.exists) {\n          return _buildProductNotFoundCard();\n        }\n\n        // استخراج بيانات المنتج مع التحقق من null.\n        final productData =\n            productSnapshot.data!.data() as Map<String, dynamic>?;\n        if (productData == null) return const SizedBox();\n\n        final String imageUrl = productData['url'] as String? ?? \"\";\n        final String nameOfItem = productData['nameOfItem'] as String? ?? \"\";\n        // استخدام suggestedRetailPrice أولاً ثم priceOfItem كبديل\n        final dynamic suggestedPriceDynamic =\n            productData['suggestedRetailPrice'];\n        final dynamic priceDynamic = productData['priceOfItem'];\n        final String priceOfItemStr =\n            suggestedPriceDynamic != null\n                ? suggestedPriceDynamic.toString()\n                : (priceDynamic != null ? priceDynamic.toString() : \"\");\n\n        return _buildModernCartItem(\n          imageUrl,\n          nameOfItem,\n          priceOfItemStr,\n          number,\n          uidItem,\n          uidOfDoc,\n          isOffer,\n          hi,\n          wi,\n          uidAdd,\n        );\n      },\n    );\n  }\n\n  /// بناء عنصر السلة بتصميم حديث مع أنيميشن تفاعلي\n  Widget _buildModernCartItem(\n    String imageUrl,\n    String nameOfItem,\n    String priceOfItemStr,\n    int number,\n    String uidItem,\n    String uidOfDoc,\n    bool isOffer,\n    double hi,\n    double wi,\n    String uidAdd,\n  ) {\n    return AnimatedContainer(\n      duration: const Duration(milliseconds: 200),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n          colors: [Colors.white, Colors.grey[50]!.withOpacity(0.8)],\n        ),\n        borderRadius: BorderRadius.circular(16),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.08),\n            blurRadius: 12,\n            spreadRadius: 2,\n            offset: const Offset(0, 4),\n          ),\n          BoxShadow(\n            color: const Color(0xFF667EEA).withOpacity(0.1),\n            blurRadius: 20,\n            spreadRadius: -5,\n            offset: const Offset(0, 8),\n          ),\n        ],\n      ),\n      child: Material(\n        color: Colors.transparent,\n        child: InkWell(\n          borderRadius: BorderRadius.circular(16),\n          onTap: () {\n            // تأثير تفاعلي عند الضغط\n          },\n          child: ClipRRect(\n            borderRadius: BorderRadius.circular(16),\n            child: Row(\n              children: [\n                // صورة المنتج المحسنة مع أنيميشن\n                _buildAnimatedProductImage(imageUrl, hi, wi, isOffer),\n                // تفاصيل المنتج\n                Expanded(\n                  child: Padding(\n                    padding: const EdgeInsets.all(12),\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        // اسم المنتج مع أنيميشن\n                        AnimatedDefaultTextStyle(\n                          duration: const Duration(milliseconds: 300),\n                          style: TextStyle(\n                            fontSize: wi / 26,\n                            fontWeight: FontWeight.w600,\n                            color: Colors.grey[800]!,\n                          ),\n                          child: Text(\n                            nameOfItem,\n                            maxLines: 2,\n                            overflow: TextOverflow.ellipsis,\n                          ),\n                        ),\n                        const SizedBox(height: 4),\n                        // السعر مع أنيميشن\n                        AnimatedContainer(\n                          duration: const Duration(milliseconds: 400),\n                          child: Row(\n                            children: [\n                              Container(\n                                padding: const EdgeInsets.symmetric(\n                                  horizontal: 8,\n                                  vertical: 2,\n                                ),\n                                decoration: BoxDecoration(\n                                  gradient: const LinearGradient(\n                                    colors: [\n                                      Color(0xFF667EEA),\n                                      Color(0xFF764BA2),\n                                    ],\n                                  ),\n                                  borderRadius: BorderRadius.circular(8),\n                                ),\n                                child: Text(\n                                  priceOfItemStr,\n                                  style: TextStyle(\n                                    fontSize: wi / 32,\n                                    fontWeight: FontWeight.w600,\n                                    color: Colors.white,\n                                  ),\n                                ),\n                              ),\n                              const SizedBox(width: 4),\n                              Text(\n                                'IQ',\n                                style: TextStyle(\n                                  fontSize: wi / 36,\n                                  color: Colors.green,\n                                  fontWeight: FontWeight.w500,\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                        const SizedBox(height: 8),\n                        // أزرار التحكم مع أنيميشن\n                        Row(\n                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                          children: [\n                            // أزرار الكمية\n                            _buildAnimatedQuantityControls(\n                              uidItem,\n                              uidOfDoc,\n                              isOffer,\n                              number,\n                              uidAdd,\n                            ),\n                            // زر الحذف\n                            _buildAnimatedDeleteButton(uidOfDoc),\n                          ],\n                        ),\n                      ],\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n\n  /// بناء صورة المنتج المحسنة مع أنيميشن\n  Widget _buildAnimatedProductImage(\n    String imageUrl,\n    double hi,\n    double wi,\n    bool isOffer,\n  ) {\n    return SizedBox(\n      width: wi / 4,\n      height: hi / 9,\n      child: Stack(\n        children: [\n          Container(\n            width: double.infinity,\n            height: double.infinity,\n            decoration: BoxDecoration(\n              borderRadius: const BorderRadius.only(\n                topLeft: Radius.circular(16),\n                bottomLeft: Radius.circular(16),\n              ),\n              image: DecorationImage(\n                fit: BoxFit.cover,\n                image: NetworkImage(imageUrl),\n              ),\n            ),\n          ),\n          // شارة العرض إذا كان المنتج عرض\n          if (isOffer)\n            Positioned(\n              top: 4,\n              right: 4,\n              child: Container(\n                padding: const EdgeInsets.symmetric(horizontal: 6, vertical: 2),\n                decoration: BoxDecoration(\n                  color: Colors.red,\n                  borderRadius: BorderRadius.circular(8),\n                ),\n                child: Text(\n                  'عرض',\n                  style: TextStyle(\n                    color: Colors.white,\n                    fontSize: wi / 40,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء أزرار التحكم في الكمية مع أنيميشن\n  Widget _buildAnimatedQuantityControls(\n    String uidItem,\n    String uidOfDoc,\n    bool isOffer,\n    int number,\n    String uidAdd,\n  ) {\n    return AnimatedContainer(\n      duration: const Duration(milliseconds: 300),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(colors: [Colors.grey[100]!, Colors.grey[50]!]),\n        borderRadius: BorderRadius.circular(12),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withOpacity(0.05),\n            blurRadius: 4,\n            offset: const Offset(0, 2),\n          ),\n        ],\n      ),\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          AddAndRemove(\n            uidItem: uidItem,\n            uidOfDoc: uidOfDoc,\n            isOfer: isOffer,\n            number: number,\n            uidAdd: uidAdd,\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// بناء زر الحذف المحسن مع أنيميشن\n  Widget _buildAnimatedDeleteButton(String uidOfDoc) {\n    return GetBuilder<GetAddAndRemove>(\n      builder: (logic) {\n        return AnimatedContainer(\n          duration: const Duration(milliseconds: 200),\n          child: Material(\n            color: Colors.transparent,\n            child: InkWell(\n              borderRadius: BorderRadius.circular(8),\n              onTap: () async {\n                try {\n                  await deleteCartItem(uidOfDoc);\n                  // إعادة حساب الأسعار بعد الحذف\n                  await logic.refreshTotals();\n                } catch (e) {\n                  Get.snackbar(\n                    'خطأ',\n                    'حدث خطأ أثناء حذف المنتج: $e',\n                    backgroundColor: Colors.red,\n                    colorText: Colors.white,\n                  );\n                }\n              },\n              child: AnimatedContainer(\n                duration: const Duration(milliseconds: 300),\n                padding: const EdgeInsets.all(8),\n                decoration: BoxDecoration(\n                  gradient: LinearGradient(\n                    colors: [\n                      Colors.red.withOpacity(0.1),\n                      Colors.red.withOpacity(0.05),\n                    ],\n                  ),\n                  borderRadius: BorderRadius.circular(8),\n                  boxShadow: [\n                    BoxShadow(\n                      color: Colors.red.withOpacity(0.2),\n                      blurRadius: 4,\n                      offset: const Offset(0, 2),\n                    ),\n                  ],\n                ),\n                child: const Icon(\n                  Icons.delete_outline,\n                  color: Colors.red,\n                  size: 20,\n                ),\n              ),\n            ),\n          ),\n        );\n      },\n    );\n  }\n\n  /// حالة الخطأ\n  Widget _buildErrorState() {\n    return Center(\n      child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          const Icon(Icons.error_outline, size: 64, color: Colors.red),\n          const SizedBox(height: 16),\n          const Text(\n            'حدث خطأ أثناء جلب البيانات',\n            style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500),\n          ),\n          const SizedBox(height: 8),\n          ElevatedButton(\n            onPressed: () {\n              // إعادة تحميل البيانات\n            },\n            child: const Text('إعادة المحاولة'),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// حالة التحميل\n  Widget _buildLoadingState() {\n    return const Center(\n      child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          CircularProgressIndicator(),\n          SizedBox(height: 16),\n          Text('جار التحميل...'),\n        ],\n      ),\n    );\n  }\n\n  /// حالة السلة الفارغة\n  Widget _buildEmptyState() {\n    return Center(\n      child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Container(\n            padding: const EdgeInsets.all(32),\n            decoration: BoxDecoration(\n              color: Colors.grey[100],\n              shape: BoxShape.circle,\n            ),\n            child: const Icon(\n              Icons.shopping_cart_outlined,\n              size: 64,\n              color: Colors.grey,\n            ),\n          ),\n          const SizedBox(height: 24),\n          Text(\n            'سلة التسوق فارغة',\n            style: TextStyle(\n              fontSize: 20,\n              fontWeight: FontWeight.w600,\n              color: Colors.grey[700],\n            ),\n          ),\n          const SizedBox(height: 8),\n          Text(\n            'ابدأ بإضافة منتجات لسلة التسوق',\n            style: TextStyle(fontSize: 14, color: Colors.grey[500]),\n          ),\n        ],\n      ),\n    );\n  }\n\n  /// كارد خطأ المنتج\n  Widget _buildProductErrorCard() {\n    return Container(\n      padding: const EdgeInsets.all(16),\n      decoration: BoxDecoration(\n        color: Colors.red[50],\n        borderRadius: BorderRadius.circular(8),\n        border: Border.all(color: Colors.red[200]!),\n      ),\n      child: const Text(\n        \"حدث خطأ أثناء جلب تفاصيل المنتج\",\n        style: TextStyle(color: Colors.red),\n      ),\n    );\n  }\n\n  /// كارد تحميل المنتج\n  Widget _buildProductLoadingCard(double hi, double wi) {\n    return Container(\n      height: hi / 9,\n      decoration: BoxDecoration(\n        color: Colors.grey[100],\n        borderRadius: BorderRadius.circular(16),\n      ),\n      child: const Center(child: CircularProgressIndicator()),\n    );\n  }\n\n  /// كارد المنتج غير موجود\n  Widget _buildProductNotFoundCard() {\n    return Container(\n      padding: const EdgeInsets.all(16),\n      decoration: BoxDecoration(\n        color: Colors.orange[50],\n        borderRadius: BorderRadius.circular(8),\n        border: Border.all(color: Colors.orange[200]!),\n      ),\n      child: const Text(\n        \"المنتج غير موجود\",\n        style: TextStyle(color: Colors.orange),\n      ),\n    );\n  }\n}\n"
        }
    ]
}